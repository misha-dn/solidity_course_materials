{
	"id": "6a30ea47e5df2408a5d96e0bde98c7ed",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"MYFIRSTTOKEN/RealToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.20;\r\n\r\nimport \"./ERC20.sol\";\r\n/*import \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\";*/\r\n\r\ncontract MyFirstToken is ERC20 {\r\n    address private _owner;\r\n\r\n    error UnauthorizedAccount(address account);\r\n\r\n    constructor(address initialOwner)\r\n        ERC20(\"MyFirstToken\", \"MFT\")\r\n        /*Ownable(initialOwner)\r\n        */\r\n    {\r\n        _owner = initialOwner;\r\n        _mint(msg.sender, 100 * 10 ** decimals());\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        if (owner() != msg.sender) {\r\n            revert UnauthorizedAccount(msg.sender);\r\n        }\r\n    }    \r\n\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n}\r\n"
			},
			"MYFIRSTTOKEN/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20} from \"./IERC20.sol\";\r\nimport {IERC20Metadata} from \"./IERC20Metadata.sol\";\r\n/*import {Context} from \"../../utils/Context.sol\";\r\n*/\r\nimport {IERC20Errors} from \"./draft-IERC6093.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * The default value of {decimals} is 18. To change this, you should override\r\n * this function so it returns a different value.\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n */\r\nabstract contract ERC20 is IERC20, IERC20Metadata, IERC20Errors {\r\n    mapping(address account => uint256) private _balances;\r\n\r\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the default value returned by this function, unless\r\n     * it's overridden.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `value`.\r\n     */\r\n    function transfer(address to, uint256 value) public virtual returns (bool) {\r\n        address owner = msg.sender;\r\n        _transfer(owner, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 value) public virtual returns (bool) {\r\n        address owner = msg.sender;\r\n        _approve(owner, spender, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `value`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `value`.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\r\n        address spender = msg.sender;\r\n        _spendAllowance(from, spender, value);\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _transfer(address from, address to, uint256 value) internal {\r\n        if (from == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        if (to == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\r\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\r\n     * this function.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _update(address from, address to, uint256 value) internal virtual {\r\n        if (from == address(0)) {\r\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\r\n            _totalSupply += value;\r\n        } else {\r\n            uint256 fromBalance = _balances[from];\r\n            if (fromBalance < value) {\r\n                revert ERC20InsufficientBalance(from, fromBalance, value);\r\n            }\r\n            unchecked {\r\n                // Overflow not possible: value <= fromBalance <= totalSupply.\r\n                _balances[from] = fromBalance - value;\r\n            }\r\n        }\r\n\r\n        if (to == address(0)) {\r\n            unchecked {\r\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\r\n                _totalSupply -= value;\r\n            }\r\n        } else {\r\n            unchecked {\r\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\r\n                _balances[to] += value;\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\r\n     * Relies on the `_update` mechanism\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _mint(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(address(0), account, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\r\n     * Relies on the `_update` mechanism.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead\r\n     */\r\n    function _burn(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        _update(account, address(0), value);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value) internal {\r\n        _approve(owner, spender, value, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\r\n     *\r\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\r\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\r\n     * `Approval` event during `transferFrom` operations.\r\n     *\r\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\r\n     * true using the following override:\r\n     * ```\r\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\r\n     *     super._approve(owner, spender, value, true);\r\n     * }\r\n     * ```\r\n     *\r\n     * Requirements are the same as {_approve}.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\r\n        if (owner == address(0)) {\r\n            revert ERC20InvalidApprover(address(0));\r\n        }\r\n        if (spender == address(0)) {\r\n            revert ERC20InvalidSpender(address(0));\r\n        }\r\n        _allowances[owner][spender] = value;\r\n        if (emitEvent) {\r\n            emit Approval(owner, spender, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\r\n     *\r\n     * Does not update the allowance value in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Does not emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            if (currentAllowance < value) {\r\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\r\n            }\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - value, false);\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"MYFIRSTTOKEN/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard ERC20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n"
			},
			"MYFIRSTTOKEN/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20} from \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}"
			},
			"MYFIRSTTOKEN/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\r\n     * allowance mechanism. `value` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"MYFIRSTTOKEN/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MYFIRSTTOKEN/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MYFIRSTTOKEN/ERC20.sol\":{\"keccak256\":\"0x0cdadb0124a7a617ecea8c6178efbea4c637df2e5da5f1ca4295b0853c212de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a820ce8f77b959eeb6507750554decb6351cf3034d9e7a6190d5fc03da1f1fb\",\"dweb:/ipfs/QmPj1FRd1UT1koLw1UZF8apKmJ9Uxrzi85QfYRLoQSFq3i\"]},\"MYFIRSTTOKEN/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]},\"MYFIRSTTOKEN/IERC20Metadata.sol\":{\"keccak256\":\"0x3f4a8c0f3d2fc136c81adf1e5b8c9966793f11c603e42bc5f5bf2a3c91bc28b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df37d7ba5bd9a5b8356ad5b58dbf0732daee8a900ba423cc1657c69b45fbb8a3\",\"dweb:/ipfs/QmceCkTtPnP17T9ndqp6243nyonzAQNAdsVYLtxjDr1GrH\"]},\"MYFIRSTTOKEN/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 18,
								"contract": "MYFIRSTTOKEN/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 24,
								"contract": "MYFIRSTTOKEN/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 26,
								"contract": "MYFIRSTTOKEN/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 28,
								"contract": "MYFIRSTTOKEN/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 30,
								"contract": "MYFIRSTTOKEN/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MYFIRSTTOKEN/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MYFIRSTTOKEN/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MYFIRSTTOKEN/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MYFIRSTTOKEN/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MYFIRSTTOKEN/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MYFIRSTTOKEN/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]},\"MYFIRSTTOKEN/IERC20Metadata.sol\":{\"keccak256\":\"0x3f4a8c0f3d2fc136c81adf1e5b8c9966793f11c603e42bc5f5bf2a3c91bc28b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df37d7ba5bd9a5b8356ad5b58dbf0732daee8a900ba423cc1657c69b45fbb8a3\",\"dweb:/ipfs/QmceCkTtPnP17T9ndqp6243nyonzAQNAdsVYLtxjDr1GrH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MYFIRSTTOKEN/RealToken.sol": {
				"MyFirstToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "UnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MYFIRSTTOKEN/RealToken.sol\":200:1037  contract MyFirstToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"MYFIRSTTOKEN/RealToken.sol\":320:534  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"MYFIRSTTOKEN/ERC20.sol\":1916:2032  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x4d794669727374546f6b656e0000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4d46540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"MYFIRSTTOKEN/ERC20.sol\":1991:1996  name_ */\n  dup2\n    /* \"MYFIRSTTOKEN/ERC20.sol\":1983:1988  _name */\n  0x03\n    /* \"MYFIRSTTOKEN/ERC20.sol\":1983:1996  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"MYFIRSTTOKEN/ERC20.sol\":2017:2024  symbol_ */\n  dup1\n    /* \"MYFIRSTTOKEN/ERC20.sol\":2007:2014  _symbol */\n  0x04\n    /* \"MYFIRSTTOKEN/ERC20.sol\":2007:2024  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"MYFIRSTTOKEN/ERC20.sol\":1916:2032  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"MYFIRSTTOKEN/RealToken.sol\":462:474  initialOwner */\n  dup1\n    /* \"MYFIRSTTOKEN/RealToken.sol\":453:459  _owner */\n  0x05\n  0x00\n    /* \"MYFIRSTTOKEN/RealToken.sol\":453:474  _owner = initialOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"MYFIRSTTOKEN/RealToken.sol\":485:526  _mint(msg.sender, 100 * 10 ** decimals()) */\n  tag_11\n    /* \"MYFIRSTTOKEN/RealToken.sol\":491:501  msg.sender */\n  caller\n    /* \"MYFIRSTTOKEN/RealToken.sol\":515:525  decimals() */\n  tag_12\n    /* \"MYFIRSTTOKEN/RealToken.sol\":515:523  decimals */\n  shl(0x20, tag_13)\n    /* \"MYFIRSTTOKEN/RealToken.sol\":515:525  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"MYFIRSTTOKEN/RealToken.sol\":509:511  10 */\n  0x0a\n    /* \"MYFIRSTTOKEN/RealToken.sol\":509:525  10 ** decimals() */\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"MYFIRSTTOKEN/RealToken.sol\":503:506  100 */\n  0x64\n    /* \"MYFIRSTTOKEN/RealToken.sol\":503:525  100 * 10 ** decimals() */\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"MYFIRSTTOKEN/RealToken.sol\":485:490  _mint */\n  shl(0x20, tag_18)\n    /* \"MYFIRSTTOKEN/RealToken.sol\":485:526  _mint(msg.sender, 100 * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"MYFIRSTTOKEN/RealToken.sol\":320:534  constructor(address initialOwner)... */\n  pop\n    /* \"MYFIRSTTOKEN/RealToken.sol\":200:1037  contract MyFirstToken is ERC20 {... */\n  jump(tag_19)\n    /* \"MYFIRSTTOKEN/ERC20.sol\":3055:3139  function decimals() public view virtual returns (uint8) {... */\ntag_13:\n    /* \"MYFIRSTTOKEN/ERC20.sol\":3104:3109  uint8 */\n  0x00\n    /* \"MYFIRSTTOKEN/ERC20.sol\":3129:3131  18 */\n  0x12\n    /* \"MYFIRSTTOKEN/ERC20.sol\":3122:3131  return 18 */\n  swap1\n  pop\n    /* \"MYFIRSTTOKEN/ERC20.sol\":3055:3139  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7911:8124  function _mint(address account, uint256 value) internal {... */\ntag_18:\n    /* \"MYFIRSTTOKEN/ERC20.sol\":8001:8002  0 */\n  0x00\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7982:8003  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7982:7989  account */\n  dup3\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7982:8003  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7978:8071  if (account == address(0)) {... */\n  tag_22\n  jumpi\n    /* \"MYFIRSTTOKEN/ERC20.sol\":8056:8057  0 */\n  0x00\n    /* \"MYFIRSTTOKEN/ERC20.sol\":8027:8059  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7978:8071  if (account == address(0)) {... */\ntag_22:\n    /* \"MYFIRSTTOKEN/ERC20.sol\":8081:8116  _update(address(0), account, value) */\n  tag_25\n    /* \"MYFIRSTTOKEN/ERC20.sol\":8097:8098  0 */\n  0x00\n    /* \"MYFIRSTTOKEN/ERC20.sol\":8101:8108  account */\n  dup4\n    /* \"MYFIRSTTOKEN/ERC20.sol\":8110:8115  value */\n  dup4\n    /* \"MYFIRSTTOKEN/ERC20.sol\":8081:8088  _update */\n  shl(0x20, tag_26)\n    /* \"MYFIRSTTOKEN/ERC20.sol\":8081:8116  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7911:8124  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6423:7558  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6529:6530  0 */\n  0x00\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6513:6531  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6513:6517  from */\n  dup4\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6513:6531  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6509:7061  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6667:6672  value */\n  dup1\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6651:6663  _totalSupply */\n  0x02\n  0x00\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6651:6672  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6509:7061  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6705:6724  uint256 fromBalance */\n  0x00\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6727:6736  _balances */\n  dup1\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6727:6742  _balances[from] */\n  0x00\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6737:6741  from */\n  dup6\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6727:6742  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6705:6742  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6775:6780  value */\n  dup2\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6761:6772  fromBalance */\n  dup2\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6761:6780  fromBalance < value */\n  lt\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6757:6874  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6833:6837  from */\n  dup4\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6839:6850  fromBalance */\n  dup2\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6852:6857  value */\n  dup4\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6808:6858  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6757:6874  if (fromBalance < value) {... */\ntag_32:\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7029:7034  value */\n  dup2\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7015:7026  fromBalance */\n  dup2\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7015:7034  fromBalance - value */\n  sub\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6997:7006  _balances */\n  0x00\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6997:7012  _balances[from] */\n  dup1\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7007:7011  from */\n  dup7\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6997:7012  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6997:7034  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6690:7061  {... */\n  pop\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6509:7061  if (from == address(0)) {... */\ntag_31:\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7091:7092  0 */\n  0x00\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7077:7093  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7077:7079  to */\n  dup3\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7077:7093  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7073:7508  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7259:7264  value */\n  dup1\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7243:7255  _totalSupply */\n  0x02\n  0x00\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7243:7264  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7073:7508  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7476:7481  value */\n  dup1\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7459:7468  _balances */\n  0x00\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7459:7472  _balances[to] */\n  dup1\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7469:7471  to */\n  dup5\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7459:7472  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7459:7481  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7073:7508  if (to == address(0)) {... */\ntag_36:\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7540:7542  to */\n  dup2\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7525:7550  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7534:7538  from */\n  dup4\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7525:7550  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7544:7549  value */\n  dup4\n    /* \"MYFIRSTTOKEN/ERC20.sol\":7525:7550  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"MYFIRSTTOKEN/ERC20.sol\":6423:7558  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_40:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_42:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_43:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_79\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_42\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_44:\n    /* \"#utility.yul\":641:665   */\n  tag_81\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_43\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_82\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_82:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_45:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_84\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_44\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_87\n  tag_40\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":932:1051   */\ntag_86:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_88\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_45\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_46:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_47:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_48:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_49:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_93\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_93:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_94\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_95\n  tag_48\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1909:1993   */\ntag_94:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_50:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_51:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_52:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_53:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_100\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_52\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2624:2663   */\n  tag_101\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_52\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_54:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_55:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_56:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_105\n    /* \"#utility.yul\":3013:3047   */\n  tag_106\n    /* \"#utility.yul\":3022:3046   */\n  tag_107\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_54\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3013:3047   */\n  tag_55\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2995:3048   */\n  tag_54\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_57:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_58:\n    /* \"#utility.yul\":3251:3290   */\n  tag_110\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_56\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3312:3403   */\n  tag_111\n    /* \"#utility.yul\":3361:3402   */\n  tag_112\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_57\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_53\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_59:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_60:\n    /* \"#utility.yul\":3572:3604   */\n  tag_115\n  tag_59\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3613:3678   */\n  tag_116\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_58\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_61:\n    /* \"#utility.yul\":3750:3870   */\ntag_118:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_121\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_60\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_118)\ntag_120:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_62:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_124\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_50\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4101:4130   */\n  tag_125\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_51\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_126:\n    /* \"#utility.yul\":4328:4408   */\n  tag_127\n    /* \"#utility.yul\":4384:4406   */\n  tag_128\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_51\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_61\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_123:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_63:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_64:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_131\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_63\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_65:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_133\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_64\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_8:\n    /* \"#utility.yul\":5145:5182   */\n  tag_135\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_46\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_137\n  tag_47\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5233:5289   */\ntag_136:\n    /* \"#utility.yul\":5313:5351   */\n  tag_138\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_49\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":5398:5465   */\n  tag_139\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_62\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_141\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_142:\n    /* \"#utility.yul\":6339:6406   */\n  tag_143\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_65\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_140)\n    /* \"#utility.yul\":5560:6178   */\ntag_141:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_144\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_50\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_145:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_145)\ntag_147:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_149\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_64\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_148:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_140:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6609   */\ntag_66:\n    /* \"#utility.yul\":6477:6554   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6474:6475   */\n  0x00\n    /* \"#utility.yul\":6467:6555   */\n  mstore\n    /* \"#utility.yul\":6574:6578   */\n  0x11\n    /* \"#utility.yul\":6571:6572   */\n  0x04\n    /* \"#utility.yul\":6564:6579   */\n  mstore\n    /* \"#utility.yul\":6598:6602   */\n  0x24\n    /* \"#utility.yul\":6595:6596   */\n  0x00\n    /* \"#utility.yul\":6588:6603   */\n  revert\n    /* \"#utility.yul\":6615:6717   */\ntag_67:\n    /* \"#utility.yul\":6657:6665   */\n  0x00\n    /* \"#utility.yul\":6704:6709   */\n  dup2\n    /* \"#utility.yul\":6701:6702   */\n  0x01\n    /* \"#utility.yul\":6697:6710   */\n  shr\n    /* \"#utility.yul\":6676:6710   */\n  swap1\n  pop\n    /* \"#utility.yul\":6615:6717   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6723:7571   */\ntag_68:\n    /* \"#utility.yul\":6784:6789   */\n  0x00\n    /* \"#utility.yul\":6791:6795   */\n  dup1\n    /* \"#utility.yul\":6815:6821   */\n  dup3\n    /* \"#utility.yul\":6806:6821   */\n  swap2\n  pop\n    /* \"#utility.yul\":6839:6844   */\n  dup4\n    /* \"#utility.yul\":6830:6844   */\n  swap1\n  pop\n    /* \"#utility.yul\":6853:7565   */\ntag_153:\n    /* \"#utility.yul\":6874:6875   */\n  0x01\n    /* \"#utility.yul\":6864:6872   */\n  dup6\n    /* \"#utility.yul\":6861:6876   */\n  gt\n    /* \"#utility.yul\":6853:7565   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":6969:6973   */\n  dup1\n    /* \"#utility.yul\":6964:6967   */\n  dup7\n    /* \"#utility.yul\":6960:6974   */\n  div\n    /* \"#utility.yul\":6954:6958   */\n  dup2\n    /* \"#utility.yul\":6951:6975   */\n  gt\n    /* \"#utility.yul\":6948:6998   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":6978:6996   */\n  tag_157\n  tag_66\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6948:6998   */\ntag_156:\n    /* \"#utility.yul\":7028:7029   */\n  0x01\n    /* \"#utility.yul\":7018:7026   */\n  dup6\n    /* \"#utility.yul\":7014:7030   */\n  and\n    /* \"#utility.yul\":7011:7462   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":7443:7447   */\n  dup1\n    /* \"#utility.yul\":7436:7441   */\n  dup3\n    /* \"#utility.yul\":7432:7448   */\n  mul\n    /* \"#utility.yul\":7423:7448   */\n  swap2\n  pop\n    /* \"#utility.yul\":7011:7462   */\ntag_158:\n    /* \"#utility.yul\":7493:7497   */\n  dup1\n    /* \"#utility.yul\":7487:7491   */\n  dup2\n    /* \"#utility.yul\":7483:7498   */\n  mul\n    /* \"#utility.yul\":7475:7498   */\n  swap1\n  pop\n    /* \"#utility.yul\":7523:7555   */\n  tag_159\n    /* \"#utility.yul\":7546:7554   */\n  dup6\n    /* \"#utility.yul\":7523:7555   */\n  tag_67\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7511:7555   */\n  swap5\n  pop\n    /* \"#utility.yul\":6853:7565   */\n  jump(tag_153)\ntag_155:\n    /* \"#utility.yul\":6723:7571   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7577:8650   */\ntag_69:\n    /* \"#utility.yul\":7631:7636   */\n  0x00\n    /* \"#utility.yul\":7822:7830   */\n  dup3\n    /* \"#utility.yul\":7812:7852   */\n  tag_161\n  jumpi\n    /* \"#utility.yul\":7843:7844   */\n  0x01\n    /* \"#utility.yul\":7834:7844   */\n  swap1\n  pop\n    /* \"#utility.yul\":7845:7850   */\n  jump(tag_160)\n    /* \"#utility.yul\":7812:7852   */\ntag_161:\n    /* \"#utility.yul\":7871:7875   */\n  dup2\n    /* \"#utility.yul\":7861:7897   */\n  tag_162\n  jumpi\n    /* \"#utility.yul\":7888:7889   */\n  0x00\n    /* \"#utility.yul\":7879:7889   */\n  swap1\n  pop\n    /* \"#utility.yul\":7890:7895   */\n  jump(tag_160)\n    /* \"#utility.yul\":7861:7897   */\ntag_162:\n    /* \"#utility.yul\":7957:7961   */\n  dup2\n    /* \"#utility.yul\":8005:8006   */\n  0x01\n    /* \"#utility.yul\":8000:8027   */\n  dup2\n  eq\n  tag_164\n  jumpi\n    /* \"#utility.yul\":8041:8042   */\n  0x02\n    /* \"#utility.yul\":8036:8227   */\n  dup2\n  eq\n  tag_165\n  jumpi\n    /* \"#utility.yul\":7950:8227   */\n  jump(tag_163)\n    /* \"#utility.yul\":8000:8027   */\ntag_164:\n    /* \"#utility.yul\":8018:8019   */\n  0x01\n    /* \"#utility.yul\":8009:8019   */\n  swap2\n  pop\n    /* \"#utility.yul\":8020:8025   */\n  pop\n  jump(tag_160)\n    /* \"#utility.yul\":8036:8227   */\ntag_165:\n    /* \"#utility.yul\":8081:8084   */\n  0xff\n    /* \"#utility.yul\":8071:8079   */\n  dup5\n    /* \"#utility.yul\":8068:8085   */\n  gt\n    /* \"#utility.yul\":8065:8108   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":8088:8106   */\n  tag_167\n  tag_66\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":8065:8108   */\ntag_166:\n    /* \"#utility.yul\":8137:8145   */\n  dup4\n    /* \"#utility.yul\":8134:8135   */\n  0x02\n    /* \"#utility.yul\":8130:8146   */\n  exp\n    /* \"#utility.yul\":8121:8146   */\n  swap2\n  pop\n    /* \"#utility.yul\":8172:8175   */\n  dup5\n    /* \"#utility.yul\":8165:8170   */\n  dup3\n    /* \"#utility.yul\":8162:8176   */\n  gt\n    /* \"#utility.yul\":8159:8199   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":8179:8197   */\n  tag_169\n  tag_66\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8159:8199   */\ntag_168:\n    /* \"#utility.yul\":8212:8217   */\n  pop\n  jump(tag_160)\n    /* \"#utility.yul\":7950:8227   */\ntag_163:\n  pop\n    /* \"#utility.yul\":8336:8338   */\n  0x20\n    /* \"#utility.yul\":8326:8334   */\n  dup4\n    /* \"#utility.yul\":8323:8339   */\n  lt\n    /* \"#utility.yul\":8317:8320   */\n  0x0133\n    /* \"#utility.yul\":8311:8315   */\n  dup4\n    /* \"#utility.yul\":8308:8321   */\n  lt\n    /* \"#utility.yul\":8304:8340   */\n  and\n    /* \"#utility.yul\":8286:8288   */\n  0x4e\n    /* \"#utility.yul\":8276:8284   */\n  dup5\n    /* \"#utility.yul\":8273:8289   */\n  lt\n    /* \"#utility.yul\":8268:8270   */\n  0x0b\n    /* \"#utility.yul\":8262:8266   */\n  dup5\n    /* \"#utility.yul\":8259:8271   */\n  lt\n    /* \"#utility.yul\":8255:8290   */\n  and\n    /* \"#utility.yul\":8239:8350   */\n  or\n    /* \"#utility.yul\":8236:8482   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":8392:8400   */\n  dup3\n    /* \"#utility.yul\":8386:8390   */\n  dup3\n    /* \"#utility.yul\":8382:8401   */\n  exp\n    /* \"#utility.yul\":8373:8401   */\n  swap1\n  pop\n    /* \"#utility.yul\":8427:8430   */\n  dup4\n    /* \"#utility.yul\":8420:8425   */\n  dup2\n    /* \"#utility.yul\":8417:8431   */\n  gt\n    /* \"#utility.yul\":8414:8454   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":8434:8452   */\n  tag_172\n  tag_66\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8414:8454   */\ntag_171:\n    /* \"#utility.yul\":8467:8472   */\n  jump(tag_160)\n    /* \"#utility.yul\":8236:8482   */\ntag_170:\n    /* \"#utility.yul\":8507:8549   */\n  tag_173\n    /* \"#utility.yul\":8545:8548   */\n  dup5\n    /* \"#utility.yul\":8535:8543   */\n  dup5\n    /* \"#utility.yul\":8529:8533   */\n  dup5\n    /* \"#utility.yul\":8526:8527   */\n  0x01\n    /* \"#utility.yul\":8507:8549   */\n  tag_68\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8492:8549   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":8581:8585   */\n  dup2\n    /* \"#utility.yul\":8576:8579   */\n  dup5\n    /* \"#utility.yul\":8572:8586   */\n  div\n    /* \"#utility.yul\":8565:8570   */\n  dup2\n    /* \"#utility.yul\":8562:8587   */\n  gt\n    /* \"#utility.yul\":8559:8610   */\n  iszero\n  tag_174\n  jumpi\n    /* \"#utility.yul\":8590:8608   */\n  tag_175\n  tag_66\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8559:8610   */\ntag_174:\n    /* \"#utility.yul\":8639:8643   */\n  dup2\n    /* \"#utility.yul\":8632:8637   */\n  dup2\n    /* \"#utility.yul\":8628:8644   */\n  mul\n    /* \"#utility.yul\":8619:8644   */\n  swap1\n  pop\n    /* \"#utility.yul\":7577:8650   */\ntag_160:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8656:8742   */\ntag_70:\n    /* \"#utility.yul\":8691:8698   */\n  0x00\n    /* \"#utility.yul\":8731:8735   */\n  0xff\n    /* \"#utility.yul\":8724:8729   */\n  dup3\n    /* \"#utility.yul\":8720:8736   */\n  and\n    /* \"#utility.yul\":8709:8736   */\n  swap1\n  pop\n    /* \"#utility.yul\":8656:8742   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8748:9029   */\ntag_15:\n    /* \"#utility.yul\":8806:8811   */\n  0x00\n    /* \"#utility.yul\":8830:8853   */\n  tag_178\n    /* \"#utility.yul\":8848:8852   */\n  dup3\n    /* \"#utility.yul\":8830:8853   */\n  tag_54\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8822:8853   */\n  swap2\n  pop\n    /* \"#utility.yul\":8874:8899   */\n  tag_179\n    /* \"#utility.yul\":8890:8898   */\n  dup4\n    /* \"#utility.yul\":8874:8899   */\n  tag_70\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8862:8899   */\n  swap3\n  pop\n    /* \"#utility.yul\":8918:9022   */\n  tag_180\n    /* \"#utility.yul\":8955:9021   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8945:8953   */\n  dup5\n    /* \"#utility.yul\":8939:8943   */\n  dup5\n    /* \"#utility.yul\":8918:9022   */\n  tag_69\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8909:9022   */\n  swap1\n  pop\n    /* \"#utility.yul\":8748:9029   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9035:9445   */\ntag_17:\n    /* \"#utility.yul\":9075:9082   */\n  0x00\n    /* \"#utility.yul\":9098:9118   */\n  tag_182\n    /* \"#utility.yul\":9116:9117   */\n  dup3\n    /* \"#utility.yul\":9098:9118   */\n  tag_54\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":9093:9118   */\n  swap2\n  pop\n    /* \"#utility.yul\":9132:9152   */\n  tag_183\n    /* \"#utility.yul\":9150:9151   */\n  dup4\n    /* \"#utility.yul\":9132:9152   */\n  tag_54\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":9127:9152   */\n  swap3\n  pop\n    /* \"#utility.yul\":9187:9188   */\n  dup3\n    /* \"#utility.yul\":9184:9185   */\n  dup3\n    /* \"#utility.yul\":9180:9189   */\n  mul\n    /* \"#utility.yul\":9209:9239   */\n  tag_184\n    /* \"#utility.yul\":9227:9238   */\n  dup2\n    /* \"#utility.yul\":9209:9239   */\n  tag_54\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":9198:9239   */\n  swap2\n  pop\n    /* \"#utility.yul\":9388:9389   */\n  dup3\n    /* \"#utility.yul\":9379:9386   */\n  dup3\n    /* \"#utility.yul\":9375:9390   */\n  div\n    /* \"#utility.yul\":9372:9373   */\n  dup5\n    /* \"#utility.yul\":9369:9391   */\n  eq\n    /* \"#utility.yul\":9349:9350   */\n  dup4\n    /* \"#utility.yul\":9342:9351   */\n  iszero\n    /* \"#utility.yul\":9322:9405   */\n  or\n    /* \"#utility.yul\":9299:9438   */\n  tag_185\n  jumpi\n    /* \"#utility.yul\":9418:9436   */\n  tag_186\n  tag_66\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":9299:9438   */\ntag_185:\n    /* \"#utility.yul\":9083:9445   */\n  pop\n    /* \"#utility.yul\":9035:9445   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9451:9569   */\ntag_71:\n    /* \"#utility.yul\":9538:9562   */\n  tag_188\n    /* \"#utility.yul\":9556:9561   */\n  dup2\n    /* \"#utility.yul\":9538:9562   */\n  tag_43\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9533:9536   */\n  dup3\n    /* \"#utility.yul\":9526:9563   */\n  mstore\n    /* \"#utility.yul\":9451:9569   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9575:9797   */\ntag_24:\n    /* \"#utility.yul\":9668:9672   */\n  0x00\n    /* \"#utility.yul\":9706:9708   */\n  0x20\n    /* \"#utility.yul\":9695:9704   */\n  dup3\n    /* \"#utility.yul\":9691:9709   */\n  add\n    /* \"#utility.yul\":9683:9709   */\n  swap1\n  pop\n    /* \"#utility.yul\":9719:9790   */\n  tag_190\n    /* \"#utility.yul\":9787:9788   */\n  0x00\n    /* \"#utility.yul\":9776:9785   */\n  dup4\n    /* \"#utility.yul\":9772:9789   */\n  add\n    /* \"#utility.yul\":9763:9769   */\n  dup5\n    /* \"#utility.yul\":9719:9790   */\n  tag_71\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9575:9797   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9803:9994   */\ntag_30:\n    /* \"#utility.yul\":9843:9846   */\n  0x00\n    /* \"#utility.yul\":9862:9882   */\n  tag_192\n    /* \"#utility.yul\":9880:9881   */\n  dup3\n    /* \"#utility.yul\":9862:9882   */\n  tag_54\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9857:9882   */\n  swap2\n  pop\n    /* \"#utility.yul\":9896:9916   */\n  tag_193\n    /* \"#utility.yul\":9914:9915   */\n  dup4\n    /* \"#utility.yul\":9896:9916   */\n  tag_54\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9891:9916   */\n  swap3\n  pop\n    /* \"#utility.yul\":9939:9940   */\n  dup3\n    /* \"#utility.yul\":9936:9937   */\n  dup3\n    /* \"#utility.yul\":9932:9941   */\n  add\n    /* \"#utility.yul\":9925:9941   */\n  swap1\n  pop\n    /* \"#utility.yul\":9960:9963   */\n  dup1\n    /* \"#utility.yul\":9957:9958   */\n  dup3\n    /* \"#utility.yul\":9954:9964   */\n  gt\n    /* \"#utility.yul\":9951:9987   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":9967:9985   */\n  tag_195\n  tag_66\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9951:9987   */\ntag_194:\n    /* \"#utility.yul\":9803:9994   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10000:10118   */\ntag_72:\n    /* \"#utility.yul\":10087:10111   */\n  tag_197\n    /* \"#utility.yul\":10105:10110   */\n  dup2\n    /* \"#utility.yul\":10087:10111   */\n  tag_54\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":10082:10085   */\n  dup3\n    /* \"#utility.yul\":10075:10112   */\n  mstore\n    /* \"#utility.yul\":10000:10118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10124:10566   */\ntag_34:\n    /* \"#utility.yul\":10273:10277   */\n  0x00\n    /* \"#utility.yul\":10311:10313   */\n  0x60\n    /* \"#utility.yul\":10300:10309   */\n  dup3\n    /* \"#utility.yul\":10296:10314   */\n  add\n    /* \"#utility.yul\":10288:10314   */\n  swap1\n  pop\n    /* \"#utility.yul\":10324:10395   */\n  tag_199\n    /* \"#utility.yul\":10392:10393   */\n  0x00\n    /* \"#utility.yul\":10381:10390   */\n  dup4\n    /* \"#utility.yul\":10377:10394   */\n  add\n    /* \"#utility.yul\":10368:10374   */\n  dup7\n    /* \"#utility.yul\":10324:10395   */\n  tag_71\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":10405:10477   */\n  tag_200\n    /* \"#utility.yul\":10473:10475   */\n  0x20\n    /* \"#utility.yul\":10462:10471   */\n  dup4\n    /* \"#utility.yul\":10458:10476   */\n  add\n    /* \"#utility.yul\":10449:10455   */\n  dup6\n    /* \"#utility.yul\":10405:10477   */\n  tag_72\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":10487:10559   */\n  tag_201\n    /* \"#utility.yul\":10555:10557   */\n  0x40\n    /* \"#utility.yul\":10544:10553   */\n  dup4\n    /* \"#utility.yul\":10540:10558   */\n  add\n    /* \"#utility.yul\":10531:10537   */\n  dup5\n    /* \"#utility.yul\":10487:10559   */\n  tag_72\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":10124:10566   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10572:10794   */\ntag_38:\n    /* \"#utility.yul\":10665:10669   */\n  0x00\n    /* \"#utility.yul\":10703:10705   */\n  0x20\n    /* \"#utility.yul\":10692:10701   */\n  dup3\n    /* \"#utility.yul\":10688:10706   */\n  add\n    /* \"#utility.yul\":10680:10706   */\n  swap1\n  pop\n    /* \"#utility.yul\":10716:10787   */\n  tag_203\n    /* \"#utility.yul\":10784:10785   */\n  0x00\n    /* \"#utility.yul\":10773:10782   */\n  dup4\n    /* \"#utility.yul\":10769:10786   */\n  add\n    /* \"#utility.yul\":10760:10766   */\n  dup5\n    /* \"#utility.yul\":10716:10787   */\n  tag_72\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10572:10794   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"MYFIRSTTOKEN/RealToken.sol\":200:1037  contract MyFirstToken is ERC20 {... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MYFIRSTTOKEN/RealToken.sol\":200:1037  contract MyFirstToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"MYFIRSTTOKEN/ERC20.sol\":2102:2193  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4393:4581  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3204:3303  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5159:5406  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3055:3139  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MYFIRSTTOKEN/RealToken.sol\":939:1034  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3366:3484  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MYFIRSTTOKEN/RealToken.sol\":542:621  function owner() public view returns (address) {... */\n    tag_10:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MYFIRSTTOKEN/ERC20.sol\":2312:2407  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3689:3869  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_12:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3932:4074  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MYFIRSTTOKEN/ERC20.sol\":2102:2193  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":2147:2160  string memory */\n      0x60\n        /* \"MYFIRSTTOKEN/ERC20.sol\":2180:2185  _name */\n      0x03\n        /* \"MYFIRSTTOKEN/ERC20.sol\":2173:2185  return _name */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":2102:2193  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4393:4581  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_22:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4466:4470  bool */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4483:4496  address owner */\n      dup1\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4499:4509  msg.sender */\n      caller\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4483:4509  address owner = msg.sender */\n      swap1\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4520:4551  _approve(owner, spender, value) */\n      tag_70\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4529:4534  owner */\n      dup2\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4536:4543  spender */\n      dup6\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4545:4550  value */\n      dup6\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4520:4528  _approve */\n      tag_71\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4520:4551  _approve(owner, spender, value) */\n      jump\t// in\n    tag_70:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4569:4573  true */\n      0x01\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4562:4573  return true */\n      swap2\n      pop\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4393:4581  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3204:3303  function totalSupply() public view virtual returns (uint256) {... */\n    tag_26:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3256:3263  uint256 */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3283:3295  _totalSupply */\n      sload(0x02)\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3276:3295  return _totalSupply */\n      swap1\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3204:3303  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5159:5406  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5246:5250  bool */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5263:5278  address spender */\n      dup1\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5281:5291  msg.sender */\n      caller\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5263:5291  address spender = msg.sender */\n      swap1\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5302:5339  _spendAllowance(from, spender, value) */\n      tag_74\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5318:5322  from */\n      dup6\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5324:5331  spender */\n      dup3\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5333:5338  value */\n      dup6\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5302:5317  _spendAllowance */\n      tag_75\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5302:5339  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_74:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5350:5376  _transfer(from, to, value) */\n      tag_76\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5360:5364  from */\n      dup6\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5366:5368  to */\n      dup6\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5370:5375  value */\n      dup6\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5350:5359  _transfer */\n      tag_77\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5350:5376  _transfer(from, to, value) */\n      jump\t// in\n    tag_76:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5394:5398  true */\n      0x01\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5387:5398  return true */\n      swap2\n      pop\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5159:5406  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3055:3139  function decimals() public view virtual returns (uint8) {... */\n    tag_35:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3104:3109  uint8 */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3129:3131  18 */\n      0x12\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3122:3131  return 18 */\n      swap1\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3055:3139  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"MYFIRSTTOKEN/RealToken.sol\":939:1034  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_40:\n        /* \"MYFIRSTTOKEN/RealToken.sol\":898:911  _checkOwner() */\n      tag_80\n        /* \"MYFIRSTTOKEN/RealToken.sol\":898:909  _checkOwner */\n      tag_81\n        /* \"MYFIRSTTOKEN/RealToken.sol\":898:911  _checkOwner() */\n      jump\t// in\n    tag_80:\n        /* \"MYFIRSTTOKEN/RealToken.sol\":1009:1026  _mint(to, amount) */\n      tag_83\n        /* \"MYFIRSTTOKEN/RealToken.sol\":1015:1017  to */\n      dup3\n        /* \"MYFIRSTTOKEN/RealToken.sol\":1019:1025  amount */\n      dup3\n        /* \"MYFIRSTTOKEN/RealToken.sol\":1009:1014  _mint */\n      tag_84\n        /* \"MYFIRSTTOKEN/RealToken.sol\":1009:1026  _mint(to, amount) */\n      jump\t// in\n    tag_83:\n        /* \"MYFIRSTTOKEN/RealToken.sol\":939:1034  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3366:3484  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_44:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3431:3438  uint256 */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3458:3467  _balances */\n      dup1\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3458:3476  _balances[account] */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3468:3475  account */\n      dup4\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3458:3476  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3451:3476  return _balances[account] */\n      swap1\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3366:3484  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MYFIRSTTOKEN/RealToken.sol\":542:621  function owner() public view returns (address) {... */\n    tag_47:\n        /* \"MYFIRSTTOKEN/RealToken.sol\":580:587  address */\n      0x00\n        /* \"MYFIRSTTOKEN/RealToken.sol\":607:613  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MYFIRSTTOKEN/RealToken.sol\":600:613  return _owner */\n      swap1\n      pop\n        /* \"MYFIRSTTOKEN/RealToken.sol\":542:621  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"MYFIRSTTOKEN/ERC20.sol\":2312:2407  function symbol() public view virtual returns (string memory) {... */\n    tag_51:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":2359:2372  string memory */\n      0x60\n        /* \"MYFIRSTTOKEN/ERC20.sol\":2392:2399  _symbol */\n      0x04\n        /* \"MYFIRSTTOKEN/ERC20.sol\":2385:2399  return _symbol */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_64\n      jump\t// in\n    tag_88:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_64\n      jump\t// in\n    tag_89:\n      dup1\n      iszero\n      tag_90\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_91\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_90)\n    tag_91:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_92:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_92\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":2312:2407  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3689:3869  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_55:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3758:3762  bool */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3775:3788  address owner */\n      dup1\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3791:3801  msg.sender */\n      caller\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3775:3801  address owner = msg.sender */\n      swap1\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3812:3839  _transfer(owner, to, value) */\n      tag_94\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3822:3827  owner */\n      dup2\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3829:3831  to */\n      dup6\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3833:3838  value */\n      dup6\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3812:3821  _transfer */\n      tag_77\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3812:3839  _transfer(owner, to, value) */\n      jump\t// in\n    tag_94:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3857:3861  true */\n      0x01\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3850:3861  return true */\n      swap2\n      pop\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3689:3869  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3932:4074  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_60:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4012:4019  uint256 */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4039:4050  _allowances */\n      0x01\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4039:4057  _allowances[owner] */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4051:4056  owner */\n      dup5\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4039:4057  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4039:4066  _allowances[owner][spender] */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4058:4065  spender */\n      dup4\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4039:4066  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MYFIRSTTOKEN/ERC20.sol\":4032:4066  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":3932:4074  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MYFIRSTTOKEN/ERC20.sol\":9216:9346  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_71:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":9301:9338  _approve(owner, spender, value, true) */\n      tag_97\n        /* \"MYFIRSTTOKEN/ERC20.sol\":9310:9315  owner */\n      dup4\n        /* \"MYFIRSTTOKEN/ERC20.sol\":9317:9324  spender */\n      dup4\n        /* \"MYFIRSTTOKEN/ERC20.sol\":9326:9331  value */\n      dup4\n        /* \"MYFIRSTTOKEN/ERC20.sol\":9333:9337  true */\n      0x01\n        /* \"MYFIRSTTOKEN/ERC20.sol\":9301:9309  _approve */\n      tag_98\n        /* \"MYFIRSTTOKEN/ERC20.sol\":9301:9338  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_97:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":9216:9346  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10932:11419  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_75:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11032:11056  uint256 currentAllowance */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11059:11084  allowance(owner, spender) */\n      tag_100\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11069:11074  owner */\n      dup5\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11076:11083  spender */\n      dup5\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11059:11068  allowance */\n      tag_60\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11059:11084  allowance(owner, spender) */\n      jump\t// in\n    tag_100:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11032:11084  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11119:11136  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11099:11115  currentAllowance */\n      dup2\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11099:11136  currentAllowance != type(uint256).max */\n      eq\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11095:11412  if (currentAllowance != type(uint256).max) {... */\n      tag_101\n      jumpi\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11176:11181  value */\n      dup2\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11157:11173  currentAllowance */\n      dup2\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11157:11181  currentAllowance < value */\n      lt\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11153:11285  if (currentAllowance < value) {... */\n      iszero\n      tag_102\n      jumpi\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11236:11243  spender */\n      dup3\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11245:11261  currentAllowance */\n      dup2\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11263:11268  value */\n      dup4\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11209:11269  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11153:11285  if (currentAllowance < value) {... */\n    tag_102:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11328:11385  _approve(owner, spender, currentAllowance - value, false) */\n      tag_105\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11337:11342  owner */\n      dup5\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11344:11351  spender */\n      dup5\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11372:11377  value */\n      dup5\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11353:11369  currentAllowance */\n      dup5\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11353:11377  currentAllowance - value */\n      sub\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11379:11384  false */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11328:11336  _approve */\n      tag_98\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11328:11385  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_105:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11095:11412  if (currentAllowance != type(uint256).max) {... */\n    tag_101:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":11021:11419  {... */\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10932:11419  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5791:6099  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_77:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5891:5892  0 */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5875:5893  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5875:5879  from */\n      dup4\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5875:5893  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5871:5959  if (from == address(0)) {... */\n      tag_107\n      jumpi\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5944:5945  0 */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5917:5947  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5871:5959  if (from == address(0)) {... */\n    tag_107:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5987:5988  0 */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5973:5989  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5973:5975  to */\n      dup3\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5973:5989  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5969:6057  if (to == address(0)) {... */\n      tag_109\n      jumpi\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6042:6043  0 */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6013:6045  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5969:6057  if (to == address(0)) {... */\n    tag_109:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6067:6091  _update(from, to, value) */\n      tag_111\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6075:6079  from */\n      dup4\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6081:6083  to */\n      dup4\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6085:6090  value */\n      dup4\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6067:6074  _update */\n      tag_112\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6067:6091  _update(from, to, value) */\n      jump\t// in\n    tag_111:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":5791:6099  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MYFIRSTTOKEN/RealToken.sol\":699:854  function _checkOwner() internal view virtual {... */\n    tag_81:\n        /* \"MYFIRSTTOKEN/RealToken.sol\":770:780  msg.sender */\n      caller\n        /* \"MYFIRSTTOKEN/RealToken.sol\":759:780  owner() != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MYFIRSTTOKEN/RealToken.sol\":759:766  owner() */\n      tag_114\n        /* \"MYFIRSTTOKEN/RealToken.sol\":759:764  owner */\n      tag_47\n        /* \"MYFIRSTTOKEN/RealToken.sol\":759:766  owner() */\n      jump\t// in\n    tag_114:\n        /* \"MYFIRSTTOKEN/RealToken.sol\":759:780  owner() != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"MYFIRSTTOKEN/RealToken.sol\":755:847  if (owner() != msg.sender) {... */\n      tag_115\n      jumpi\n        /* \"MYFIRSTTOKEN/RealToken.sol\":824:834  msg.sender */\n      caller\n        /* \"MYFIRSTTOKEN/RealToken.sol\":804:835  UnauthorizedAccount(msg.sender) */\n      mload(0x40)\n      0x32b2baa300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"MYFIRSTTOKEN/RealToken.sol\":755:847  if (owner() != msg.sender) {... */\n    tag_115:\n        /* \"MYFIRSTTOKEN/RealToken.sol\":699:854  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7911:8124  function _mint(address account, uint256 value) internal {... */\n    tag_84:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":8001:8002  0 */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7982:8003  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7982:7989  account */\n      dup3\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7982:8003  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7978:8071  if (account == address(0)) {... */\n      tag_118\n      jumpi\n        /* \"MYFIRSTTOKEN/ERC20.sol\":8056:8057  0 */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":8027:8059  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7978:8071  if (account == address(0)) {... */\n    tag_118:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":8081:8116  _update(address(0), account, value) */\n      tag_120\n        /* \"MYFIRSTTOKEN/ERC20.sol\":8097:8098  0 */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":8101:8108  account */\n      dup4\n        /* \"MYFIRSTTOKEN/ERC20.sol\":8110:8115  value */\n      dup4\n        /* \"MYFIRSTTOKEN/ERC20.sol\":8081:8088  _update */\n      tag_112\n        /* \"MYFIRSTTOKEN/ERC20.sol\":8081:8116  _update(address(0), account, value) */\n      jump\t// in\n    tag_120:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7911:8124  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10197:10640  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_98:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10327:10328  0 */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10310:10329  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10310:10315  owner */\n      dup5\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10310:10329  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10306:10397  if (owner == address(0)) {... */\n      tag_122\n      jumpi\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10382:10383  0 */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10353:10385  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10306:10397  if (owner == address(0)) {... */\n    tag_122:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10430:10431  0 */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10411:10432  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10411:10418  spender */\n      dup4\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10411:10432  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10407:10499  if (spender == address(0)) {... */\n      tag_124\n      jumpi\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10484:10485  0 */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10456:10487  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10407:10499  if (spender == address(0)) {... */\n    tag_124:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10539:10544  value */\n      dup2\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10509:10520  _allowances */\n      0x01\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10509:10527  _allowances[owner] */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10521:10526  owner */\n      dup7\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10509:10527  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10509:10536  _allowances[owner][spender] */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10528:10535  spender */\n      dup6\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10509:10536  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10509:10544  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10559:10568  emitEvent */\n      dup1\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10555:10633  if (emitEvent) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10606:10613  spender */\n      dup3\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10590:10621  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10599:10604  owner */\n      dup5\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10590:10621  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10615:10620  value */\n      dup5\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10590:10621  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10555:10633  if (emitEvent) {... */\n    tag_126:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":10197:10640  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6423:7558  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_112:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6529:6530  0 */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6513:6531  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6513:6517  from */\n      dup4\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6513:6531  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6509:7061  if (from == address(0)) {... */\n      tag_129\n      jumpi\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6667:6672  value */\n      dup1\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6651:6663  _totalSupply */\n      0x02\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6651:6672  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6509:7061  if (from == address(0)) {... */\n      jump(tag_132)\n    tag_129:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6705:6724  uint256 fromBalance */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6727:6736  _balances */\n      dup1\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6727:6742  _balances[from] */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6737:6741  from */\n      dup6\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6727:6742  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6705:6742  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6775:6780  value */\n      dup2\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6761:6772  fromBalance */\n      dup2\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6761:6780  fromBalance < value */\n      lt\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6757:6874  if (fromBalance < value) {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6833:6837  from */\n      dup4\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6839:6850  fromBalance */\n      dup2\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6852:6857  value */\n      dup4\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6808:6858  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6757:6874  if (fromBalance < value) {... */\n    tag_133:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7029:7034  value */\n      dup2\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7015:7026  fromBalance */\n      dup2\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7015:7034  fromBalance - value */\n      sub\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6997:7006  _balances */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6997:7012  _balances[from] */\n      dup1\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7007:7011  from */\n      dup7\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6997:7012  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6997:7034  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6690:7061  {... */\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6509:7061  if (from == address(0)) {... */\n    tag_132:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7091:7092  0 */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7077:7093  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7077:7079  to */\n      dup3\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7077:7093  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7073:7508  if (to == address(0)) {... */\n      tag_135\n      jumpi\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7259:7264  value */\n      dup1\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7243:7255  _totalSupply */\n      0x02\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7243:7264  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7073:7508  if (to == address(0)) {... */\n      jump(tag_136)\n    tag_135:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7476:7481  value */\n      dup1\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7459:7468  _balances */\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7459:7472  _balances[to] */\n      dup1\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7469:7471  to */\n      dup5\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7459:7472  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7459:7481  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7073:7508  if (to == address(0)) {... */\n    tag_136:\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7540:7542  to */\n      dup2\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7525:7550  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7534:7538  from */\n      dup4\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7525:7550  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7544:7549  value */\n      dup4\n        /* \"MYFIRSTTOKEN/ERC20.sol\":7525:7550  Transfer(from, to, value) */\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MYFIRSTTOKEN/ERC20.sol\":6423:7558  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_138:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_139:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_140:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_165:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_165)\n    tag_167:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_141:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_142:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_170\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_138\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":818:889   */\n      tag_171\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_139\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_172\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_140\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":988:1017   */\n      tag_173\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_141\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_18:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_175\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_142\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_144:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_146:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_147:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_181\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_146\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_148:\n        /* \"#utility.yul\":1983:2007   */\n      tag_183\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_147\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_184\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_184:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_149:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_186\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_148\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_150:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_151:\n        /* \"#utility.yul\":2339:2363   */\n      tag_189\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_150\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_190:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_152:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_192\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_151\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_21:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_195\n      tag_144\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2632:2751   */\n    tag_194:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_196\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_149\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_197\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_152\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_153:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_154:\n        /* \"#utility.yul\":3196:3217   */\n      tag_200\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_153\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_24:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_202\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_154\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_155:\n        /* \"#utility.yul\":3533:3557   */\n      tag_204\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_150\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_28:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_206\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_155\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_31:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_209\n      tag_144\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3908:4027   */\n    tag_208:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_210\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_149\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_211\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_149\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_212\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_152\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_156:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_157:\n        /* \"#utility.yul\":4598:4620   */\n      tag_215\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_156\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_37:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_217\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_157\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_43:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_220\n      tag_144\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":4929:5048   */\n    tag_219:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_221\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_149\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5306   */\n    tag_158:\n        /* \"#utility.yul\":5275:5299   */\n      tag_223\n        /* \"#utility.yul\":5293:5298   */\n      dup2\n        /* \"#utility.yul\":5275:5299   */\n      tag_147\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":5270:5273   */\n      dup3\n        /* \"#utility.yul\":5263:5300   */\n      mstore\n        /* \"#utility.yul\":5188:5306   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5312:5534   */\n    tag_49:\n        /* \"#utility.yul\":5405:5409   */\n      0x00\n        /* \"#utility.yul\":5443:5445   */\n      0x20\n        /* \"#utility.yul\":5432:5441   */\n      dup3\n        /* \"#utility.yul\":5428:5446   */\n      add\n        /* \"#utility.yul\":5420:5446   */\n      swap1\n      pop\n        /* \"#utility.yul\":5456:5527   */\n      tag_225\n        /* \"#utility.yul\":5524:5525   */\n      0x00\n        /* \"#utility.yul\":5513:5522   */\n      dup4\n        /* \"#utility.yul\":5509:5526   */\n      add\n        /* \"#utility.yul\":5500:5506   */\n      dup5\n        /* \"#utility.yul\":5456:5527   */\n      tag_158\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":5312:5534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:6014   */\n    tag_59:\n        /* \"#utility.yul\":5608:5614   */\n      0x00\n        /* \"#utility.yul\":5616:5622   */\n      dup1\n        /* \"#utility.yul\":5665:5667   */\n      0x40\n        /* \"#utility.yul\":5653:5662   */\n      dup4\n        /* \"#utility.yul\":5644:5651   */\n      dup6\n        /* \"#utility.yul\":5640:5663   */\n      sub\n        /* \"#utility.yul\":5636:5668   */\n      slt\n        /* \"#utility.yul\":5633:5752   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":5671:5750   */\n      tag_228\n      tag_144\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5633:5752   */\n    tag_227:\n        /* \"#utility.yul\":5791:5792   */\n      0x00\n        /* \"#utility.yul\":5816:5869   */\n      tag_229\n        /* \"#utility.yul\":5861:5868   */\n      dup6\n        /* \"#utility.yul\":5852:5858   */\n      dup3\n        /* \"#utility.yul\":5841:5850   */\n      dup7\n        /* \"#utility.yul\":5837:5859   */\n      add\n        /* \"#utility.yul\":5816:5869   */\n      tag_149\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":5806:5869   */\n      swap3\n      pop\n        /* \"#utility.yul\":5762:5879   */\n      pop\n        /* \"#utility.yul\":5918:5920   */\n      0x20\n        /* \"#utility.yul\":5944:5997   */\n      tag_230\n        /* \"#utility.yul\":5989:5996   */\n      dup6\n        /* \"#utility.yul\":5980:5986   */\n      dup3\n        /* \"#utility.yul\":5969:5978   */\n      dup7\n        /* \"#utility.yul\":5965:5987   */\n      add\n        /* \"#utility.yul\":5944:5997   */\n      tag_149\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5934:5997   */\n      swap2\n      pop\n        /* \"#utility.yul\":5889:6007   */\n      pop\n        /* \"#utility.yul\":5540:6014   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6020:6200   */\n    tag_159:\n        /* \"#utility.yul\":6068:6145   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6065:6066   */\n      0x00\n        /* \"#utility.yul\":6058:6146   */\n      mstore\n        /* \"#utility.yul\":6165:6169   */\n      0x22\n        /* \"#utility.yul\":6162:6163   */\n      0x04\n        /* \"#utility.yul\":6155:6170   */\n      mstore\n        /* \"#utility.yul\":6189:6193   */\n      0x24\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6179:6194   */\n      revert\n        /* \"#utility.yul\":6206:6526   */\n    tag_64:\n        /* \"#utility.yul\":6250:6256   */\n      0x00\n        /* \"#utility.yul\":6287:6288   */\n      0x02\n        /* \"#utility.yul\":6281:6285   */\n      dup3\n        /* \"#utility.yul\":6277:6289   */\n      div\n        /* \"#utility.yul\":6267:6289   */\n      swap1\n      pop\n        /* \"#utility.yul\":6334:6335   */\n      0x01\n        /* \"#utility.yul\":6328:6332   */\n      dup3\n        /* \"#utility.yul\":6324:6336   */\n      and\n        /* \"#utility.yul\":6355:6373   */\n      dup1\n        /* \"#utility.yul\":6345:6426   */\n      tag_233\n      jumpi\n        /* \"#utility.yul\":6411:6415   */\n      0x7f\n        /* \"#utility.yul\":6403:6409   */\n      dup3\n        /* \"#utility.yul\":6399:6416   */\n      and\n        /* \"#utility.yul\":6389:6416   */\n      swap2\n      pop\n        /* \"#utility.yul\":6345:6426   */\n    tag_233:\n        /* \"#utility.yul\":6473:6475   */\n      0x20\n        /* \"#utility.yul\":6465:6471   */\n      dup3\n        /* \"#utility.yul\":6462:6476   */\n      lt\n        /* \"#utility.yul\":6442:6460   */\n      dup2\n        /* \"#utility.yul\":6439:6477   */\n      sub\n        /* \"#utility.yul\":6436:6520   */\n      tag_234\n      jumpi\n        /* \"#utility.yul\":6492:6510   */\n      tag_235\n      tag_159\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":6436:6520   */\n    tag_234:\n        /* \"#utility.yul\":6257:6526   */\n      pop\n        /* \"#utility.yul\":6206:6526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6532:6974   */\n    tag_104:\n        /* \"#utility.yul\":6681:6685   */\n      0x00\n        /* \"#utility.yul\":6719:6721   */\n      0x60\n        /* \"#utility.yul\":6708:6717   */\n      dup3\n        /* \"#utility.yul\":6704:6722   */\n      add\n        /* \"#utility.yul\":6696:6722   */\n      swap1\n      pop\n        /* \"#utility.yul\":6732:6803   */\n      tag_237\n        /* \"#utility.yul\":6800:6801   */\n      0x00\n        /* \"#utility.yul\":6789:6798   */\n      dup4\n        /* \"#utility.yul\":6785:6802   */\n      add\n        /* \"#utility.yul\":6776:6782   */\n      dup7\n        /* \"#utility.yul\":6732:6803   */\n      tag_158\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":6813:6885   */\n      tag_238\n        /* \"#utility.yul\":6881:6883   */\n      0x20\n        /* \"#utility.yul\":6870:6879   */\n      dup4\n        /* \"#utility.yul\":6866:6884   */\n      add\n        /* \"#utility.yul\":6857:6863   */\n      dup6\n        /* \"#utility.yul\":6813:6885   */\n      tag_155\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":6895:6967   */\n      tag_239\n        /* \"#utility.yul\":6963:6965   */\n      0x40\n        /* \"#utility.yul\":6952:6961   */\n      dup4\n        /* \"#utility.yul\":6948:6966   */\n      add\n        /* \"#utility.yul\":6939:6945   */\n      dup5\n        /* \"#utility.yul\":6895:6967   */\n      tag_155\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":6532:6974   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6980:7160   */\n    tag_160:\n        /* \"#utility.yul\":7028:7105   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7025:7026   */\n      0x00\n        /* \"#utility.yul\":7018:7106   */\n      mstore\n        /* \"#utility.yul\":7125:7129   */\n      0x11\n        /* \"#utility.yul\":7122:7123   */\n      0x04\n        /* \"#utility.yul\":7115:7130   */\n      mstore\n        /* \"#utility.yul\":7149:7153   */\n      0x24\n        /* \"#utility.yul\":7146:7147   */\n      0x00\n        /* \"#utility.yul\":7139:7154   */\n      revert\n        /* \"#utility.yul\":7166:7357   */\n    tag_131:\n        /* \"#utility.yul\":7206:7209   */\n      0x00\n        /* \"#utility.yul\":7225:7245   */\n      tag_242\n        /* \"#utility.yul\":7243:7244   */\n      dup3\n        /* \"#utility.yul\":7225:7245   */\n      tag_150\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7220:7245   */\n      swap2\n      pop\n        /* \"#utility.yul\":7259:7279   */\n      tag_243\n        /* \"#utility.yul\":7277:7278   */\n      dup4\n        /* \"#utility.yul\":7259:7279   */\n      tag_150\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":7254:7279   */\n      swap3\n      pop\n        /* \"#utility.yul\":7302:7303   */\n      dup3\n        /* \"#utility.yul\":7299:7300   */\n      dup3\n        /* \"#utility.yul\":7295:7304   */\n      add\n        /* \"#utility.yul\":7288:7304   */\n      swap1\n      pop\n        /* \"#utility.yul\":7323:7326   */\n      dup1\n        /* \"#utility.yul\":7320:7321   */\n      dup3\n        /* \"#utility.yul\":7317:7327   */\n      gt\n        /* \"#utility.yul\":7314:7350   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":7330:7348   */\n      tag_245\n      tag_160\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":7314:7350   */\n    tag_244:\n        /* \"#utility.yul\":7166:7357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b3689c412751bf982667f77617a8f527ac9e14273e859d10a84f897bf3bf3c0364736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_47": {
									"entryPoint": null,
									"id": 47,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_650": {
									"entryPoint": null,
									"id": 650,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_350": {
									"entryPoint": 340,
									"id": 350,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_317": {
									"entryPoint": 478,
									"id": 317,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_74": {
									"entryPoint": 332,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2681,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2072,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2162,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1636,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2015,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1230,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1185,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1026,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1372,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1523,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1566,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10797:5",
										"nodeType": "YulBlock",
										"src": "0:10797:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "759:80:5",
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nativeSrc": "769:22:5",
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nativeSrc": "778:13:5",
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nativeSrc": "800:33:5",
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nativeSrc": "800:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:5",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:5",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:5",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nativeSrc": "922:274:5",
													"nodeType": "YulBlock",
													"src": "922:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:5",
																"nodeType": "YulBlock",
																"src": "968:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:5"
																			},
																			"nativeSrc": "970:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:5"
																		},
																		"nativeSrc": "970:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:5"
																		},
																		"nativeSrc": "939:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:5",
																		"nodeType": "YulLiteral",
																		"src": "964:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:5"
																},
																"nativeSrc": "935:32:5",
																"nodeType": "YulFunctionCall",
																"src": "935:32:5"
															},
															"nativeSrc": "932:119:5",
															"nodeType": "YulIf",
															"src": "932:119:5"
														},
														{
															"nativeSrc": "1061:128:5",
															"nodeType": "YulBlock",
															"src": "1061:128:5",
															"statements": [
																{
																	"nativeSrc": "1076:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:5"
																				},
																				"nativeSrc": "1147:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:5"
																		},
																		"nativeSrc": "1115:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:5",
														"nodeType": "YulTypedName",
														"src": "892:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:5",
														"nodeType": "YulTypedName",
														"src": "903:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:5",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													}
												],
												"src": "845:351:5"
											},
											{
												"body": {
													"nativeSrc": "1261:40:5",
													"nodeType": "YulBlock",
													"src": "1261:40:5",
													"statements": [
														{
															"nativeSrc": "1272:22:5",
															"nodeType": "YulAssignment",
															"src": "1272:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:5"
																},
																"nativeSrc": "1282:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:5",
														"nodeType": "YulTypedName",
														"src": "1244:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:5",
														"nodeType": "YulTypedName",
														"src": "1254:6:5",
														"type": ""
													}
												],
												"src": "1202:99:5"
											},
											{
												"body": {
													"nativeSrc": "1335:152:5",
													"nodeType": "YulBlock",
													"src": "1335:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:5",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:5"
																},
																"nativeSrc": "1345:88:5",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:5"
															},
															"nativeSrc": "1345:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:5"
																},
																"nativeSrc": "1442:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:5"
															},
															"nativeSrc": "1442:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:5"
																},
																"nativeSrc": "1466:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:5"
															},
															"nativeSrc": "1466:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:5"
											},
											{
												"body": {
													"nativeSrc": "1521:152:5",
													"nodeType": "YulBlock",
													"src": "1521:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:5",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:5"
																},
																"nativeSrc": "1531:88:5",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:5"
															},
															"nativeSrc": "1531:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:5"
																},
																"nativeSrc": "1628:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:5"
															},
															"nativeSrc": "1628:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:5"
																},
																"nativeSrc": "1652:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:5"
															},
															"nativeSrc": "1652:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:5"
											},
											{
												"body": {
													"nativeSrc": "1730:269:5",
													"nodeType": "YulBlock",
													"src": "1730:269:5",
													"statements": [
														{
															"nativeSrc": "1740:22:5",
															"nodeType": "YulAssignment",
															"src": "1740:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:5"
																},
																"nativeSrc": "1750:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:5"
																}
															]
														},
														{
															"nativeSrc": "1771:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:5"
																},
																"nativeSrc": "1797:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:5",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:5",
																"nodeType": "YulBlock",
																"src": "1848:51:5",
																"statements": [
																	{
																		"nativeSrc": "1862:27:5",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:5"
																			},
																			"nativeSrc": "1872:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:5"
																},
																"nativeSrc": "1821:26:5",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:5"
															},
															"nativeSrc": "1818:81:5",
															"nodeType": "YulIf",
															"src": "1818:81:5"
														},
														{
															"body": {
																"nativeSrc": "1951:42:5",
																"nodeType": "YulBlock",
																"src": "1951:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:5"
																			},
																			"nativeSrc": "1965:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:5"
																		},
																		"nativeSrc": "1965:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:5"
																		},
																		"nativeSrc": "1935:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:5"
																},
																"nativeSrc": "1912:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:5"
															},
															"nativeSrc": "1909:84:5",
															"nodeType": "YulIf",
															"src": "1909:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:5",
														"nodeType": "YulTypedName",
														"src": "1714:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:5",
														"nodeType": "YulTypedName",
														"src": "1723:6:5",
														"type": ""
													}
												],
												"src": "1679:320:5"
											},
											{
												"body": {
													"nativeSrc": "2059:87:5",
													"nodeType": "YulBlock",
													"src": "2059:87:5",
													"statements": [
														{
															"nativeSrc": "2069:11:5",
															"nodeType": "YulAssignment",
															"src": "2069:11:5",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:5",
																"nodeType": "YulIdentifier",
																"src": "2077:3:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:5"
																},
																"nativeSrc": "2090:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:5"
															},
															"nativeSrc": "2090:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:5"
														},
														{
															"nativeSrc": "2113:26:5",
															"nodeType": "YulAssignment",
															"src": "2113:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:5"
																},
																"nativeSrc": "2121:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:5",
														"nodeType": "YulTypedName",
														"src": "2046:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:5",
														"nodeType": "YulTypedName",
														"src": "2054:4:5",
														"type": ""
													}
												],
												"src": "2005:141:5"
											},
											{
												"body": {
													"nativeSrc": "2196:49:5",
													"nodeType": "YulBlock",
													"src": "2196:49:5",
													"statements": [
														{
															"nativeSrc": "2206:33:5",
															"nodeType": "YulAssignment",
															"src": "2206:33:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:5"
																		},
																		"nativeSrc": "2220:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:5"
																},
																"nativeSrc": "2216:23:5",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:5"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:5",
														"nodeType": "YulTypedName",
														"src": "2179:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:5",
														"nodeType": "YulTypedName",
														"src": "2189:6:5",
														"type": ""
													}
												],
												"src": "2152:93:5"
											},
											{
												"body": {
													"nativeSrc": "2304:54:5",
													"nodeType": "YulBlock",
													"src": "2304:54:5",
													"statements": [
														{
															"nativeSrc": "2314:37:5",
															"nodeType": "YulAssignment",
															"src": "2314:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:5"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:5"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:5"
																},
																"nativeSrc": "2335:16:5",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:5",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:5"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:5",
														"nodeType": "YulTypedName",
														"src": "2279:4:5",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:5",
														"nodeType": "YulTypedName",
														"src": "2285:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:5",
														"nodeType": "YulTypedName",
														"src": "2295:8:5",
														"type": ""
													}
												],
												"src": "2251:107:5"
											},
											{
												"body": {
													"nativeSrc": "2440:317:5",
													"nodeType": "YulBlock",
													"src": "2440:317:5",
													"statements": [
														{
															"nativeSrc": "2450:35:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:5",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:5"
																},
																"nativeSrc": "2467:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:5"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:5",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:5",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:5",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:5"
																},
																"nativeSrc": "2506:97:5",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:5"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:5",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:5",
															"nodeType": "YulAssignment",
															"src": "2612:51:5",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:5"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:5"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:5"
																},
																"nativeSrc": "2624:39:5",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:5"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:5",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:5"
																}
															]
														},
														{
															"nativeSrc": "2672:30:5",
															"nodeType": "YulAssignment",
															"src": "2672:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:5"
																		},
																		"nativeSrc": "2692:9:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:5"
																},
																"nativeSrc": "2681:21:5",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:5"
																}
															]
														},
														{
															"nativeSrc": "2711:40:5",
															"nodeType": "YulAssignment",
															"src": "2711:40:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:5"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:5"
																		},
																		"nativeSrc": "2731:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:5"
																},
																"nativeSrc": "2721:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:5"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:5",
														"nodeType": "YulTypedName",
														"src": "2401:5:5",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:5",
														"nodeType": "YulTypedName",
														"src": "2408:10:5",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:5",
														"nodeType": "YulTypedName",
														"src": "2420:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:5",
														"nodeType": "YulTypedName",
														"src": "2433:6:5",
														"type": ""
													}
												],
												"src": "2364:393:5"
											},
											{
												"body": {
													"nativeSrc": "2808:32:5",
													"nodeType": "YulBlock",
													"src": "2808:32:5",
													"statements": [
														{
															"nativeSrc": "2818:16:5",
															"nodeType": "YulAssignment",
															"src": "2818:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:5",
																"nodeType": "YulIdentifier",
																"src": "2829:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:5",
														"nodeType": "YulTypedName",
														"src": "2790:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:5",
														"nodeType": "YulTypedName",
														"src": "2800:7:5",
														"type": ""
													}
												],
												"src": "2763:77:5"
											},
											{
												"body": {
													"nativeSrc": "2878:28:5",
													"nodeType": "YulBlock",
													"src": "2878:28:5",
													"statements": [
														{
															"nativeSrc": "2888:12:5",
															"nodeType": "YulAssignment",
															"src": "2888:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:5",
																"nodeType": "YulIdentifier",
																"src": "2895:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:5",
														"nodeType": "YulTypedName",
														"src": "2864:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:5",
														"nodeType": "YulTypedName",
														"src": "2874:3:5",
														"type": ""
													}
												],
												"src": "2846:60:5"
											},
											{
												"body": {
													"nativeSrc": "2972:82:5",
													"nodeType": "YulBlock",
													"src": "2972:82:5",
													"statements": [
														{
															"nativeSrc": "2982:66:5",
															"nodeType": "YulAssignment",
															"src": "2982:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:5"
																				},
																				"nativeSrc": "3022:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:5"
																		},
																		"nativeSrc": "3013:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:5"
																},
																"nativeSrc": "2995:53:5",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:5",
														"nodeType": "YulTypedName",
														"src": "2952:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:5",
														"nodeType": "YulTypedName",
														"src": "2962:9:5",
														"type": ""
													}
												],
												"src": "2912:142:5"
											},
											{
												"body": {
													"nativeSrc": "3107:28:5",
													"nodeType": "YulBlock",
													"src": "3107:28:5",
													"statements": [
														{
															"nativeSrc": "3117:12:5",
															"nodeType": "YulAssignment",
															"src": "3117:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:5",
																"nodeType": "YulIdentifier",
																"src": "3124:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:5"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:5",
														"nodeType": "YulTypedName",
														"src": "3093:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:5",
														"nodeType": "YulTypedName",
														"src": "3103:3:5",
														"type": ""
													}
												],
												"src": "3060:75:5"
											},
											{
												"body": {
													"nativeSrc": "3217:193:5",
													"nodeType": "YulBlock",
													"src": "3217:193:5",
													"statements": [
														{
															"nativeSrc": "3227:63:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:5",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:5"
																},
																"nativeSrc": "3251:39:5",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:5"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:5",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:5"
																				},
																				"nativeSrc": "3340:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:5",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:5"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:5",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:5"
																				},
																				"nativeSrc": "3361:41:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:5"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:5",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:5"
																		},
																		"nativeSrc": "3312:91:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:5"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:5"
																},
																"nativeSrc": "3299:105:5",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:5"
															},
															"nativeSrc": "3299:105:5",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:5"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:5",
														"nodeType": "YulTypedName",
														"src": "3194:4:5",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:5",
														"nodeType": "YulTypedName",
														"src": "3200:6:5",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:5",
														"nodeType": "YulTypedName",
														"src": "3208:7:5",
														"type": ""
													}
												],
												"src": "3141:269:5"
											},
											{
												"body": {
													"nativeSrc": "3465:24:5",
													"nodeType": "YulBlock",
													"src": "3465:24:5",
													"statements": [
														{
															"nativeSrc": "3475:8:5",
															"nodeType": "YulAssignment",
															"src": "3475:8:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:5",
																"nodeType": "YulLiteral",
																"src": "3482:1:5",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:5"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:5",
														"nodeType": "YulTypedName",
														"src": "3461:3:5",
														"type": ""
													}
												],
												"src": "3416:73:5"
											},
											{
												"body": {
													"nativeSrc": "3548:136:5",
													"nodeType": "YulBlock",
													"src": "3548:136:5",
													"statements": [
														{
															"nativeSrc": "3558:46:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:5"
																},
																"nativeSrc": "3572:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:5"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:5",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:5"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:5"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:5"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:5"
																},
																"nativeSrc": "3613:65:5",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:5"
															},
															"nativeSrc": "3613:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:5"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:5",
														"nodeType": "YulTypedName",
														"src": "3534:4:5",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:5",
														"nodeType": "YulTypedName",
														"src": "3540:6:5",
														"type": ""
													}
												],
												"src": "3495:189:5"
											},
											{
												"body": {
													"nativeSrc": "3740:136:5",
													"nodeType": "YulBlock",
													"src": "3740:136:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:5",
																"nodeType": "YulBlock",
																"src": "3807:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:5",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:5"
																			},
																			"nativeSrc": "3821:39:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:5"
																		},
																		"nativeSrc": "3821:39:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:5"
																},
																"nativeSrc": "3757:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:5"
															},
															"nativeSrc": "3750:120:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:5",
																"nodeType": "YulBlock",
																"src": "3772:26:5",
																"statements": [
																	{
																		"nativeSrc": "3774:22:5",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:5"
																			},
																			"nativeSrc": "3783:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:5"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:5",
																"nodeType": "YulBlock",
																"src": "3754:2:5",
																"statements": []
															},
															"src": "3750:120:5"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:5",
														"nodeType": "YulTypedName",
														"src": "3728:5:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:5",
														"nodeType": "YulTypedName",
														"src": "3735:3:5",
														"type": ""
													}
												],
												"src": "3690:186:5"
											},
											{
												"body": {
													"nativeSrc": "3961:464:5",
													"nodeType": "YulBlock",
													"src": "3961:464:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:5",
																"nodeType": "YulBlock",
																"src": "3987:431:5",
																"statements": [
																	{
																		"nativeSrc": "4001:54:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:5"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:5",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:5"
																			},
																			"nativeSrc": "4017:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:5"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:5",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:5",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:5"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:5",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:5"
																					},
																					"nativeSrc": "4101:29:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:5"
																			},
																			"nativeSrc": "4087:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:5",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:5",
																			"nodeType": "YulBlock",
																			"src": "4288:27:5",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:5",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:5",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:5",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:5",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:5"
																			},
																			"nativeSrc": "4269:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:5"
																		},
																		"nativeSrc": "4266:49:5",
																		"nodeType": "YulIf",
																		"src": "4266:49:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:5",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:5",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:5"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:5",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:5"
																							},
																							"nativeSrc": "4384:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:5"
																					},
																					"nativeSrc": "4370:37:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:5"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:5",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:5"
																			},
																			"nativeSrc": "4328:80:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:5"
																		},
																		"nativeSrc": "4328:80:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:5"
																},
																"nativeSrc": "3975:11:5",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:5"
															},
															"nativeSrc": "3972:446:5",
															"nodeType": "YulIf",
															"src": "3972:446:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:5",
														"nodeType": "YulTypedName",
														"src": "3937:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:5",
														"nodeType": "YulTypedName",
														"src": "3944:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:5",
														"nodeType": "YulTypedName",
														"src": "3949:10:5",
														"type": ""
													}
												],
												"src": "3882:543:5"
											},
											{
												"body": {
													"nativeSrc": "4494:54:5",
													"nodeType": "YulBlock",
													"src": "4494:54:5",
													"statements": [
														{
															"nativeSrc": "4504:37:5",
															"nodeType": "YulAssignment",
															"src": "4504:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:5"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:5"
																},
																"nativeSrc": "4525:16:5",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:5",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:5"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:5",
														"nodeType": "YulTypedName",
														"src": "4469:4:5",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:5",
														"nodeType": "YulTypedName",
														"src": "4475:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:5",
														"nodeType": "YulTypedName",
														"src": "4485:8:5",
														"type": ""
													}
												],
												"src": "4431:117:5"
											},
											{
												"body": {
													"nativeSrc": "4605:118:5",
													"nodeType": "YulBlock",
													"src": "4605:118:5",
													"statements": [
														{
															"nativeSrc": "4615:68:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:5",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:5",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:5"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:5"
																				},
																				"nativeSrc": "4660:13:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:5",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:5"
																				},
																				"nativeSrc": "4675:6:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:5"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:5"
																		},
																		"nativeSrc": "4631:51:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:5"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:5"
																},
																"nativeSrc": "4627:56:5",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:5"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:5",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:5",
															"nodeType": "YulAssignment",
															"src": "4692:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:5"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:5"
																},
																"nativeSrc": "4702:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:5"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:5",
														"nodeType": "YulTypedName",
														"src": "4582:4:5",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:5",
														"nodeType": "YulTypedName",
														"src": "4588:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:5",
														"nodeType": "YulTypedName",
														"src": "4598:6:5",
														"type": ""
													}
												],
												"src": "4554:169:5"
											},
											{
												"body": {
													"nativeSrc": "4809:214:5",
													"nodeType": "YulBlock",
													"src": "4809:214:5",
													"statements": [
														{
															"nativeSrc": "4942:37:5",
															"nodeType": "YulAssignment",
															"src": "4942:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:5"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:5"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:5"
																},
																"nativeSrc": "4950:29:5",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:5"
																}
															]
														},
														{
															"nativeSrc": "4988:29:5",
															"nodeType": "YulAssignment",
															"src": "4988:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:5",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:5"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:5"
																		},
																		"nativeSrc": "5005:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:5"
																},
																"nativeSrc": "4996:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:5",
														"nodeType": "YulTypedName",
														"src": "4790:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:5",
														"nodeType": "YulTypedName",
														"src": "4796:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:5",
														"nodeType": "YulTypedName",
														"src": "4804:4:5",
														"type": ""
													}
												],
												"src": "4728:295:5"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:5",
													"nodeType": "YulBlock",
													"src": "5120:1303:5",
													"statements": [
														{
															"nativeSrc": "5131:51:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:5",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:5"
																},
																"nativeSrc": "5145:37:5",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:5",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:5",
																"nodeType": "YulBlock",
																"src": "5267:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:5"
																			},
																			"nativeSrc": "5269:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:5"
																		},
																		"nativeSrc": "5269:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:5",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:5"
																},
																"nativeSrc": "5236:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:5"
															},
															"nativeSrc": "5233:56:5",
															"nodeType": "YulIf",
															"src": "5233:56:5"
														},
														{
															"nativeSrc": "5299:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:5"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:5"
																		},
																		"nativeSrc": "5339:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:5"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:5",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:5"
																},
																"nativeSrc": "5313:38:5",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:5"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:5",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:5"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:5",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:5"
																},
																"nativeSrc": "5398:67:5",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:5"
															},
															"nativeSrc": "5398:67:5",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:5"
														},
														{
															"nativeSrc": "5475:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:5",
																"nodeType": "YulLiteral",
																"src": "5492:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:5",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:5",
															"nodeType": "YulAssignment",
															"src": "5503:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:5",
																"nodeType": "YulLiteral",
																"src": "5516:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:5",
																		"nodeType": "YulBlock",
																		"src": "5567:611:5",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:5",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:5",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:5"
																							},
																							"nativeSrc": "5608:9:5",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:5"
																					},
																					"nativeSrc": "5596:22:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:5",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:5",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:5"
																					},
																					"nativeSrc": "5646:37:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:5",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:5",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:5",
																					"nodeType": "YulBlock",
																					"src": "5764:163:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:5"
																												},
																												"nativeSrc": "5803:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:5"
																										},
																										"nativeSrc": "5797:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:5"
																								},
																								"nativeSrc": "5782:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:5"
																							},
																							"nativeSrc": "5782:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:5"
																						},
																						{
																							"nativeSrc": "5841:24:5",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:5",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:5"
																								},
																								"nativeSrc": "5851:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:5",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:5",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:5",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:5"
																								},
																								"nativeSrc": "5895:18:5",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:5"
																					},
																					"nativeSrc": "5727:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:5"
																				},
																				"nativeSrc": "5719:208:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:5",
																					"nodeType": "YulBlock",
																					"src": "5742:21:5",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:5",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:5",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:5"
																								},
																								"nativeSrc": "5749:12:5",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:5",
																					"nodeType": "YulBlock",
																					"src": "5723:3:5",
																					"statements": []
																				},
																				"src": "5719:208:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:5",
																					"nodeType": "YulBlock",
																					"src": "5963:156:5",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:5"
																										},
																										"nativeSrc": "6004:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:5"
																								},
																								"nativeSrc": "5998:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:5",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:5",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:5"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:5",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:5",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:5"
																												},
																												"nativeSrc": "6086:17:5",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:5"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:5",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:5"
																										},
																										"nativeSrc": "6056:48:5",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:5"
																								},
																								"nativeSrc": "6041:64:5",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:5"
																							},
																							"nativeSrc": "6041:64:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:5"
																					},
																					"nativeSrc": "5943:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:5"
																				},
																				"nativeSrc": "5940:179:5",
																				"nodeType": "YulIf",
																				"src": "5940:179:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:5"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:5",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:5",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:5"
																									},
																									"nativeSrc": "6149:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:5",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:5"
																							},
																							"nativeSrc": "6145:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:5"
																					},
																					"nativeSrc": "6132:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:5"
																				},
																				"nativeSrc": "6132:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:5"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:5",
																	"nodeType": "YulCase",
																	"src": "5560:618:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:5",
																		"nodeType": "YulBlock",
																		"src": "6195:222:5",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:5",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:5",
																					"nodeType": "YulBlock",
																					"src": "6246:67:5",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:5",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:5"
																										},
																										"nativeSrc": "6279:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:5"
																								},
																								"nativeSrc": "6273:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:5"
																				},
																				"nativeSrc": "6236:77:5",
																				"nodeType": "YulIf",
																				"src": "6236:77:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:5"
																							},
																							"nativeSrc": "6339:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:5"
																					},
																					"nativeSrc": "6326:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:5"
																				},
																				"nativeSrc": "6326:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:5"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:5",
																	"nodeType": "YulCase",
																	"src": "6187:230:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:5"
																},
																"nativeSrc": "5537:14:5",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:5"
															},
															"nativeSrc": "5530:887:5",
															"nodeType": "YulSwitch",
															"src": "5530:887:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:5",
														"nodeType": "YulTypedName",
														"src": "5109:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:5",
														"nodeType": "YulTypedName",
														"src": "5115:3:5",
														"type": ""
													}
												],
												"src": "5028:1395:5"
											},
											{
												"body": {
													"nativeSrc": "6457:152:5",
													"nodeType": "YulBlock",
													"src": "6457:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6474:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6474:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6477:77:5",
																		"nodeType": "YulLiteral",
																		"src": "6477:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6467:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6467:6:5"
																},
																"nativeSrc": "6467:88:5",
																"nodeType": "YulFunctionCall",
																"src": "6467:88:5"
															},
															"nativeSrc": "6467:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "6467:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6571:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6571:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6574:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6574:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6564:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6564:6:5"
																},
																"nativeSrc": "6564:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6564:15:5"
															},
															"nativeSrc": "6564:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6564:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6595:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6595:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6598:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6598:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6588:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6588:6:5"
																},
																"nativeSrc": "6588:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6588:15:5"
															},
															"nativeSrc": "6588:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6588:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6429:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "6429:180:5"
											},
											{
												"body": {
													"nativeSrc": "6666:51:5",
													"nodeType": "YulBlock",
													"src": "6666:51:5",
													"statements": [
														{
															"nativeSrc": "6676:34:5",
															"nodeType": "YulAssignment",
															"src": "6676:34:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6701:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6701:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6704:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6704:5:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6697:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6697:3:5"
																},
																"nativeSrc": "6697:13:5",
																"nodeType": "YulFunctionCall",
																"src": "6697:13:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6676:8:5",
																	"nodeType": "YulIdentifier",
																	"src": "6676:8:5"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6615:102:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6647:5:5",
														"nodeType": "YulTypedName",
														"src": "6647:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6657:8:5",
														"nodeType": "YulTypedName",
														"src": "6657:8:5",
														"type": ""
													}
												],
												"src": "6615:102:5"
											},
											{
												"body": {
													"nativeSrc": "6796:775:5",
													"nodeType": "YulBlock",
													"src": "6796:775:5",
													"statements": [
														{
															"nativeSrc": "6806:15:5",
															"nodeType": "YulAssignment",
															"src": "6806:15:5",
															"value": {
																"name": "_power",
																"nativeSrc": "6815:6:5",
																"nodeType": "YulIdentifier",
																"src": "6815:6:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6806:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6806:5:5"
																}
															]
														},
														{
															"nativeSrc": "6830:14:5",
															"nodeType": "YulAssignment",
															"src": "6830:14:5",
															"value": {
																"name": "_base",
																"nativeSrc": "6839:5:5",
																"nodeType": "YulIdentifier",
																"src": "6839:5:5"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "6830:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6830:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6888:677:5",
																"nodeType": "YulBlock",
																"src": "6888:677:5",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "6976:22:5",
																			"nodeType": "YulBlock",
																			"src": "6976:22:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "6978:16:5",
																							"nodeType": "YulIdentifier",
																							"src": "6978:16:5"
																						},
																						"nativeSrc": "6978:18:5",
																						"nodeType": "YulFunctionCall",
																						"src": "6978:18:5"
																					},
																					"nativeSrc": "6978:18:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "6978:18:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6954:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "6954:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "6964:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "6964:3:5"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "6969:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "6969:4:5"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "6960:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6960:3:5"
																					},
																					"nativeSrc": "6960:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6960:14:5"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "6951:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "6951:2:5"
																			},
																			"nativeSrc": "6951:24:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6951:24:5"
																		},
																		"nativeSrc": "6948:50:5",
																		"nodeType": "YulIf",
																		"src": "6948:50:5"
																	},
																	{
																		"body": {
																			"nativeSrc": "7043:419:5",
																			"nodeType": "YulBlock",
																			"src": "7043:419:5",
																			"statements": [
																				{
																					"nativeSrc": "7423:25:5",
																					"nodeType": "YulAssignment",
																					"src": "7423:25:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7436:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "7436:5:5"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7443:4:5",
																								"nodeType": "YulIdentifier",
																								"src": "7443:4:5"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7432:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "7432:3:5"
																						},
																						"nativeSrc": "7432:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "7432:16:5"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7423:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "7423:5:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7018:8:5",
																					"nodeType": "YulIdentifier",
																					"src": "7018:8:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7028:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7028:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7014:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "7014:3:5"
																			},
																			"nativeSrc": "7014:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7014:16:5"
																		},
																		"nativeSrc": "7011:451:5",
																		"nodeType": "YulIf",
																		"src": "7011:451:5"
																	},
																	{
																		"nativeSrc": "7475:23:5",
																		"nodeType": "YulAssignment",
																		"src": "7475:23:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7487:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "7487:4:5"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7493:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "7493:4:5"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7483:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "7483:3:5"
																			},
																			"nativeSrc": "7483:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7483:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7475:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7475:4:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7511:44:5",
																		"nodeType": "YulAssignment",
																		"src": "7511:44:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7546:8:5",
																					"nodeType": "YulIdentifier",
																					"src": "7546:8:5"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7523:22:5",
																				"nodeType": "YulIdentifier",
																				"src": "7523:22:5"
																			},
																			"nativeSrc": "7523:32:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7523:32:5"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7511:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "7511:8:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6864:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "6864:8:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6874:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6874:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6861:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6861:2:5"
																},
																"nativeSrc": "6861:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6861:15:5"
															},
															"nativeSrc": "6853:712:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6877:2:5",
																"nodeType": "YulBlock",
																"src": "6877:2:5",
																"statements": []
															},
															"pre": {
																"nativeSrc": "6857:3:5",
																"nodeType": "YulBlock",
																"src": "6857:3:5",
																"statements": []
															},
															"src": "6853:712:5"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "6723:848:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "6751:6:5",
														"nodeType": "YulTypedName",
														"src": "6751:6:5",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "6759:5:5",
														"nodeType": "YulTypedName",
														"src": "6759:5:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6766:8:5",
														"nodeType": "YulTypedName",
														"src": "6766:8:5",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6776:3:5",
														"nodeType": "YulTypedName",
														"src": "6776:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6784:5:5",
														"nodeType": "YulTypedName",
														"src": "6784:5:5",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "6791:4:5",
														"nodeType": "YulTypedName",
														"src": "6791:4:5",
														"type": ""
													}
												],
												"src": "6723:848:5"
											},
											{
												"body": {
													"nativeSrc": "7637:1013:5",
													"nodeType": "YulBlock",
													"src": "7637:1013:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7832:20:5",
																"nodeType": "YulBlock",
																"src": "7832:20:5",
																"statements": [
																	{
																		"nativeSrc": "7834:10:5",
																		"nodeType": "YulAssignment",
																		"src": "7834:10:5",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7843:1:5",
																			"nodeType": "YulLiteral",
																			"src": "7843:1:5",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7834:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7834:5:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7845:5:5",
																		"nodeType": "YulLeave",
																		"src": "7845:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7822:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "7822:8:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7815:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7815:6:5"
																},
																"nativeSrc": "7815:16:5",
																"nodeType": "YulFunctionCall",
																"src": "7815:16:5"
															},
															"nativeSrc": "7812:40:5",
															"nodeType": "YulIf",
															"src": "7812:40:5"
														},
														{
															"body": {
																"nativeSrc": "7877:20:5",
																"nodeType": "YulBlock",
																"src": "7877:20:5",
																"statements": [
																	{
																		"nativeSrc": "7879:10:5",
																		"nodeType": "YulAssignment",
																		"src": "7879:10:5",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7888:1:5",
																			"nodeType": "YulLiteral",
																			"src": "7888:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7879:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7879:5:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7890:5:5",
																		"nodeType": "YulLeave",
																		"src": "7890:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7871:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "7871:4:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7864:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7864:6:5"
																},
																"nativeSrc": "7864:12:5",
																"nodeType": "YulFunctionCall",
																"src": "7864:12:5"
															},
															"nativeSrc": "7861:36:5",
															"nodeType": "YulIf",
															"src": "7861:36:5"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8007:20:5",
																		"nodeType": "YulBlock",
																		"src": "8007:20:5",
																		"statements": [
																			{
																				"nativeSrc": "8009:10:5",
																				"nodeType": "YulAssignment",
																				"src": "8009:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8018:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8018:1:5",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8009:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "8009:5:5"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8020:5:5",
																				"nodeType": "YulLeave",
																				"src": "8020:5:5"
																			}
																		]
																	},
																	"nativeSrc": "8000:27:5",
																	"nodeType": "YulCase",
																	"src": "8000:27:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8005:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8005:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8051:176:5",
																		"nodeType": "YulBlock",
																		"src": "8051:176:5",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8086:22:5",
																					"nodeType": "YulBlock",
																					"src": "8086:22:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8088:16:5",
																									"nodeType": "YulIdentifier",
																									"src": "8088:16:5"
																								},
																								"nativeSrc": "8088:18:5",
																								"nodeType": "YulFunctionCall",
																								"src": "8088:18:5"
																							},
																							"nativeSrc": "8088:18:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "8088:18:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8071:8:5",
																							"nodeType": "YulIdentifier",
																							"src": "8071:8:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8081:3:5",
																							"nodeType": "YulLiteral",
																							"src": "8081:3:5",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8068:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "8068:2:5"
																					},
																					"nativeSrc": "8068:17:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8068:17:5"
																				},
																				"nativeSrc": "8065:43:5",
																				"nodeType": "YulIf",
																				"src": "8065:43:5"
																			},
																			{
																				"nativeSrc": "8121:25:5",
																				"nodeType": "YulAssignment",
																				"src": "8121:25:5",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8134:1:5",
																							"nodeType": "YulLiteral",
																							"src": "8134:1:5",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8137:8:5",
																							"nodeType": "YulIdentifier",
																							"src": "8137:8:5"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8130:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "8130:3:5"
																					},
																					"nativeSrc": "8130:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:5"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8121:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "8121:5:5"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8177:22:5",
																					"nodeType": "YulBlock",
																					"src": "8177:22:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8179:16:5",
																									"nodeType": "YulIdentifier",
																									"src": "8179:16:5"
																								},
																								"nativeSrc": "8179:18:5",
																								"nodeType": "YulFunctionCall",
																								"src": "8179:18:5"
																							},
																							"nativeSrc": "8179:18:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "8179:18:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8165:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "8165:5:5"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8172:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "8172:3:5"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8162:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "8162:2:5"
																					},
																					"nativeSrc": "8162:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8162:14:5"
																				},
																				"nativeSrc": "8159:40:5",
																				"nodeType": "YulIf",
																				"src": "8159:40:5"
																			},
																			{
																				"nativeSrc": "8212:5:5",
																				"nodeType": "YulLeave",
																				"src": "8212:5:5"
																			}
																		]
																	},
																	"nativeSrc": "8036:191:5",
																	"nodeType": "YulCase",
																	"src": "8036:191:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8041:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8041:1:5",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "7957:4:5",
																"nodeType": "YulIdentifier",
																"src": "7957:4:5"
															},
															"nativeSrc": "7950:277:5",
															"nodeType": "YulSwitch",
															"src": "7950:277:5"
														},
														{
															"body": {
																"nativeSrc": "8359:123:5",
																"nodeType": "YulBlock",
																"src": "8359:123:5",
																"statements": [
																	{
																		"nativeSrc": "8373:28:5",
																		"nodeType": "YulAssignment",
																		"src": "8373:28:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8386:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "8386:4:5"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8392:8:5",
																					"nodeType": "YulIdentifier",
																					"src": "8392:8:5"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8382:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "8382:3:5"
																			},
																			"nativeSrc": "8382:19:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8382:19:5"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8373:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8373:5:5"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8432:22:5",
																			"nodeType": "YulBlock",
																			"src": "8432:22:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8434:16:5",
																							"nodeType": "YulIdentifier",
																							"src": "8434:16:5"
																						},
																						"nativeSrc": "8434:18:5",
																						"nodeType": "YulFunctionCall",
																						"src": "8434:18:5"
																					},
																					"nativeSrc": "8434:18:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "8434:18:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8420:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "8420:5:5"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8427:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8427:3:5"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8417:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "8417:2:5"
																			},
																			"nativeSrc": "8417:14:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8417:14:5"
																		},
																		"nativeSrc": "8414:40:5",
																		"nodeType": "YulIf",
																		"src": "8414:40:5"
																	},
																	{
																		"nativeSrc": "8467:5:5",
																		"nodeType": "YulLeave",
																		"src": "8467:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8262:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "8262:4:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8268:2:5",
																						"nodeType": "YulLiteral",
																						"src": "8268:2:5",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8259:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "8259:2:5"
																				},
																				"nativeSrc": "8259:12:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8259:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8276:8:5",
																						"nodeType": "YulIdentifier",
																						"src": "8276:8:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8286:2:5",
																						"nodeType": "YulLiteral",
																						"src": "8286:2:5",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8273:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "8273:2:5"
																				},
																				"nativeSrc": "8273:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8273:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8255:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8255:3:5"
																		},
																		"nativeSrc": "8255:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8255:35:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8311:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "8311:4:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8317:3:5",
																						"nodeType": "YulLiteral",
																						"src": "8317:3:5",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8308:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "8308:2:5"
																				},
																				"nativeSrc": "8308:13:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8308:13:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8326:8:5",
																						"nodeType": "YulIdentifier",
																						"src": "8326:8:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8336:2:5",
																						"nodeType": "YulLiteral",
																						"src": "8336:2:5",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8323:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "8323:2:5"
																				},
																				"nativeSrc": "8323:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8323:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8304:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8304:3:5"
																		},
																		"nativeSrc": "8304:36:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8304:36:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8239:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "8239:2:5"
																},
																"nativeSrc": "8239:111:5",
																"nodeType": "YulFunctionCall",
																"src": "8239:111:5"
															},
															"nativeSrc": "8236:246:5",
															"nodeType": "YulIf",
															"src": "8236:246:5"
														},
														{
															"nativeSrc": "8492:57:5",
															"nodeType": "YulAssignment",
															"src": "8492:57:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8526:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8526:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8529:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8529:4:5"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8535:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "8535:8:5"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8545:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8545:3:5"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8507:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "8507:18:5"
																},
																"nativeSrc": "8507:42:5",
																"nodeType": "YulFunctionCall",
																"src": "8507:42:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8492:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8492:5:5"
																},
																{
																	"name": "base",
																	"nativeSrc": "8499:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8499:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8588:22:5",
																"nodeType": "YulBlock",
																"src": "8588:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8590:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "8590:16:5"
																			},
																			"nativeSrc": "8590:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8590:18:5"
																		},
																		"nativeSrc": "8590:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8590:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8565:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8565:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8576:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "8576:3:5"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8581:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8581:4:5"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8572:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8572:3:5"
																		},
																		"nativeSrc": "8572:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8572:14:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8562:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "8562:2:5"
																},
																"nativeSrc": "8562:25:5",
																"nodeType": "YulFunctionCall",
																"src": "8562:25:5"
															},
															"nativeSrc": "8559:51:5",
															"nodeType": "YulIf",
															"src": "8559:51:5"
														},
														{
															"nativeSrc": "8619:25:5",
															"nodeType": "YulAssignment",
															"src": "8619:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8632:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8632:5:5"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8639:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8639:4:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8628:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8628:3:5"
																},
																"nativeSrc": "8628:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8628:16:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8619:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8619:5:5"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7577:1073:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7607:4:5",
														"nodeType": "YulTypedName",
														"src": "7607:4:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7613:8:5",
														"nodeType": "YulTypedName",
														"src": "7613:8:5",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7623:3:5",
														"nodeType": "YulTypedName",
														"src": "7623:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7631:5:5",
														"nodeType": "YulTypedName",
														"src": "7631:5:5",
														"type": ""
													}
												],
												"src": "7577:1073:5"
											},
											{
												"body": {
													"nativeSrc": "8699:43:5",
													"nodeType": "YulBlock",
													"src": "8699:43:5",
													"statements": [
														{
															"nativeSrc": "8709:27:5",
															"nodeType": "YulAssignment",
															"src": "8709:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8724:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8724:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8731:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8731:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8720:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8720:3:5"
																},
																"nativeSrc": "8720:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8720:16:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8709:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "8709:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "8656:86:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8681:5:5",
														"nodeType": "YulTypedName",
														"src": "8681:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8691:7:5",
														"nodeType": "YulTypedName",
														"src": "8691:7:5",
														"type": ""
													}
												],
												"src": "8656:86:5"
											},
											{
												"body": {
													"nativeSrc": "8812:217:5",
													"nodeType": "YulBlock",
													"src": "8812:217:5",
													"statements": [
														{
															"nativeSrc": "8822:31:5",
															"nodeType": "YulAssignment",
															"src": "8822:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8848:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8848:4:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8830:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8830:17:5"
																},
																"nativeSrc": "8830:23:5",
																"nodeType": "YulFunctionCall",
																"src": "8830:23:5"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8822:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8822:4:5"
																}
															]
														},
														{
															"nativeSrc": "8862:37:5",
															"nodeType": "YulAssignment",
															"src": "8862:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8890:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "8890:8:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "8874:15:5",
																	"nodeType": "YulIdentifier",
																	"src": "8874:15:5"
																},
																"nativeSrc": "8874:25:5",
																"nodeType": "YulFunctionCall",
																"src": "8874:25:5"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "8862:8:5",
																	"nodeType": "YulIdentifier",
																	"src": "8862:8:5"
																}
															]
														},
														{
															"nativeSrc": "8909:113:5",
															"nodeType": "YulAssignment",
															"src": "8909:113:5",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8939:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8939:4:5"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8945:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "8945:8:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8955:66:5",
																		"nodeType": "YulLiteral",
																		"src": "8955:66:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "8918:20:5",
																	"nodeType": "YulIdentifier",
																	"src": "8918:20:5"
																},
																"nativeSrc": "8918:104:5",
																"nodeType": "YulFunctionCall",
																"src": "8918:104:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8909:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8909:5:5"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "8748:281:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8787:4:5",
														"nodeType": "YulTypedName",
														"src": "8787:4:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8793:8:5",
														"nodeType": "YulTypedName",
														"src": "8793:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8806:5:5",
														"nodeType": "YulTypedName",
														"src": "8806:5:5",
														"type": ""
													}
												],
												"src": "8748:281:5"
											},
											{
												"body": {
													"nativeSrc": "9083:362:5",
													"nodeType": "YulBlock",
													"src": "9083:362:5",
													"statements": [
														{
															"nativeSrc": "9093:25:5",
															"nodeType": "YulAssignment",
															"src": "9093:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9116:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9116:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9098:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9098:17:5"
																},
																"nativeSrc": "9098:20:5",
																"nodeType": "YulFunctionCall",
																"src": "9098:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9093:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "9093:1:5"
																}
															]
														},
														{
															"nativeSrc": "9127:25:5",
															"nodeType": "YulAssignment",
															"src": "9127:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9150:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9150:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9132:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9132:17:5"
																},
																"nativeSrc": "9132:20:5",
																"nodeType": "YulFunctionCall",
																"src": "9132:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9127:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "9127:1:5"
																}
															]
														},
														{
															"nativeSrc": "9161:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "9161:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9184:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9184:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9187:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9187:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9180:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9180:3:5"
																},
																"nativeSrc": "9180:9:5",
																"nodeType": "YulFunctionCall",
																"src": "9180:9:5"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9165:11:5",
																	"nodeType": "YulTypedName",
																	"src": "9165:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9198:41:5",
															"nodeType": "YulAssignment",
															"src": "9198:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9227:11:5",
																		"nodeType": "YulIdentifier",
																		"src": "9227:11:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9209:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9209:17:5"
																},
																"nativeSrc": "9209:30:5",
																"nodeType": "YulFunctionCall",
																"src": "9209:30:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9198:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9198:7:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9416:22:5",
																"nodeType": "YulBlock",
																"src": "9416:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9418:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "9418:16:5"
																			},
																			"nativeSrc": "9418:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9418:18:5"
																		},
																		"nativeSrc": "9418:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9418:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9349:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "9349:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9342:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "9342:6:5"
																				},
																				"nativeSrc": "9342:9:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9342:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9372:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "9372:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9379:7:5",
																								"nodeType": "YulIdentifier",
																								"src": "9379:7:5"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9388:1:5",
																								"nodeType": "YulIdentifier",
																								"src": "9388:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9375:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "9375:3:5"
																						},
																						"nativeSrc": "9375:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "9375:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9369:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "9369:2:5"
																				},
																				"nativeSrc": "9369:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9369:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9322:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "9322:2:5"
																		},
																		"nativeSrc": "9322:83:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9322:83:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9302:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9302:6:5"
																},
																"nativeSrc": "9302:113:5",
																"nodeType": "YulFunctionCall",
																"src": "9302:113:5"
															},
															"nativeSrc": "9299:139:5",
															"nodeType": "YulIf",
															"src": "9299:139:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9035:410:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9066:1:5",
														"nodeType": "YulTypedName",
														"src": "9066:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9069:1:5",
														"nodeType": "YulTypedName",
														"src": "9069:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9075:7:5",
														"nodeType": "YulTypedName",
														"src": "9075:7:5",
														"type": ""
													}
												],
												"src": "9035:410:5"
											},
											{
												"body": {
													"nativeSrc": "9516:53:5",
													"nodeType": "YulBlock",
													"src": "9516:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9533:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9533:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9556:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "9556:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9538:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "9538:17:5"
																		},
																		"nativeSrc": "9538:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9538:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9526:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9526:6:5"
																},
																"nativeSrc": "9526:37:5",
																"nodeType": "YulFunctionCall",
																"src": "9526:37:5"
															},
															"nativeSrc": "9526:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "9526:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9451:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9504:5:5",
														"nodeType": "YulTypedName",
														"src": "9504:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9511:3:5",
														"nodeType": "YulTypedName",
														"src": "9511:3:5",
														"type": ""
													}
												],
												"src": "9451:118:5"
											},
											{
												"body": {
													"nativeSrc": "9673:124:5",
													"nodeType": "YulBlock",
													"src": "9673:124:5",
													"statements": [
														{
															"nativeSrc": "9683:26:5",
															"nodeType": "YulAssignment",
															"src": "9683:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9695:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9695:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9706:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9706:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9691:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9691:3:5"
																},
																"nativeSrc": "9691:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9691:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9683:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9683:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9763:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9763:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9776:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9776:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9787:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9787:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9772:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9772:3:5"
																		},
																		"nativeSrc": "9772:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9772:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9719:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9719:43:5"
																},
																"nativeSrc": "9719:71:5",
																"nodeType": "YulFunctionCall",
																"src": "9719:71:5"
															},
															"nativeSrc": "9719:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "9719:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9575:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9645:9:5",
														"nodeType": "YulTypedName",
														"src": "9645:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9657:6:5",
														"nodeType": "YulTypedName",
														"src": "9657:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9668:4:5",
														"nodeType": "YulTypedName",
														"src": "9668:4:5",
														"type": ""
													}
												],
												"src": "9575:222:5"
											},
											{
												"body": {
													"nativeSrc": "9847:147:5",
													"nodeType": "YulBlock",
													"src": "9847:147:5",
													"statements": [
														{
															"nativeSrc": "9857:25:5",
															"nodeType": "YulAssignment",
															"src": "9857:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9880:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9880:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9862:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9862:17:5"
																},
																"nativeSrc": "9862:20:5",
																"nodeType": "YulFunctionCall",
																"src": "9862:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9857:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "9857:1:5"
																}
															]
														},
														{
															"nativeSrc": "9891:25:5",
															"nodeType": "YulAssignment",
															"src": "9891:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9914:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9914:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9896:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9896:17:5"
																},
																"nativeSrc": "9896:20:5",
																"nodeType": "YulFunctionCall",
																"src": "9896:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9891:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "9891:1:5"
																}
															]
														},
														{
															"nativeSrc": "9925:16:5",
															"nodeType": "YulAssignment",
															"src": "9925:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9936:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9936:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9939:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9939:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9932:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9932:3:5"
																},
																"nativeSrc": "9932:9:5",
																"nodeType": "YulFunctionCall",
																"src": "9932:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9925:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9925:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9965:22:5",
																"nodeType": "YulBlock",
																"src": "9965:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9967:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "9967:16:5"
																			},
																			"nativeSrc": "9967:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9967:18:5"
																		},
																		"nativeSrc": "9967:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9967:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9957:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9960:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9960:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9954:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "9954:2:5"
																},
																"nativeSrc": "9954:10:5",
																"nodeType": "YulFunctionCall",
																"src": "9954:10:5"
															},
															"nativeSrc": "9951:36:5",
															"nodeType": "YulIf",
															"src": "9951:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9803:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9834:1:5",
														"nodeType": "YulTypedName",
														"src": "9834:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9837:1:5",
														"nodeType": "YulTypedName",
														"src": "9837:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9843:3:5",
														"nodeType": "YulTypedName",
														"src": "9843:3:5",
														"type": ""
													}
												],
												"src": "9803:191:5"
											},
											{
												"body": {
													"nativeSrc": "10065:53:5",
													"nodeType": "YulBlock",
													"src": "10065:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10082:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10082:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10105:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "10105:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10087:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "10087:17:5"
																		},
																		"nativeSrc": "10087:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10087:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10075:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10075:6:5"
																},
																"nativeSrc": "10075:37:5",
																"nodeType": "YulFunctionCall",
																"src": "10075:37:5"
															},
															"nativeSrc": "10075:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "10075:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10000:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10053:5:5",
														"nodeType": "YulTypedName",
														"src": "10053:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10060:3:5",
														"nodeType": "YulTypedName",
														"src": "10060:3:5",
														"type": ""
													}
												],
												"src": "10000:118:5"
											},
											{
												"body": {
													"nativeSrc": "10278:288:5",
													"nodeType": "YulBlock",
													"src": "10278:288:5",
													"statements": [
														{
															"nativeSrc": "10288:26:5",
															"nodeType": "YulAssignment",
															"src": "10288:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10300:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10300:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10311:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10311:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10296:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10296:3:5"
																},
																"nativeSrc": "10296:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10296:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10288:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10288:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10368:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10368:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10381:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10381:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10392:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10392:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10377:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10377:3:5"
																		},
																		"nativeSrc": "10377:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10377:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10324:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10324:43:5"
																},
																"nativeSrc": "10324:71:5",
																"nodeType": "YulFunctionCall",
																"src": "10324:71:5"
															},
															"nativeSrc": "10324:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "10324:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10449:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10449:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10462:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10462:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10473:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10473:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10458:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10458:3:5"
																		},
																		"nativeSrc": "10458:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10458:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10405:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10405:43:5"
																},
																"nativeSrc": "10405:72:5",
																"nodeType": "YulFunctionCall",
																"src": "10405:72:5"
															},
															"nativeSrc": "10405:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "10405:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10531:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10531:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10544:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10544:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10555:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10555:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10540:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10540:3:5"
																		},
																		"nativeSrc": "10540:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10540:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10487:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10487:43:5"
																},
																"nativeSrc": "10487:72:5",
																"nodeType": "YulFunctionCall",
																"src": "10487:72:5"
															},
															"nativeSrc": "10487:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "10487:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10124:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10234:9:5",
														"nodeType": "YulTypedName",
														"src": "10234:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10246:6:5",
														"nodeType": "YulTypedName",
														"src": "10246:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10254:6:5",
														"nodeType": "YulTypedName",
														"src": "10254:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10262:6:5",
														"nodeType": "YulTypedName",
														"src": "10262:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10273:4:5",
														"nodeType": "YulTypedName",
														"src": "10273:4:5",
														"type": ""
													}
												],
												"src": "10124:442:5"
											},
											{
												"body": {
													"nativeSrc": "10670:124:5",
													"nodeType": "YulBlock",
													"src": "10670:124:5",
													"statements": [
														{
															"nativeSrc": "10680:26:5",
															"nodeType": "YulAssignment",
															"src": "10680:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10692:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10692:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10703:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10703:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10688:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10688:3:5"
																},
																"nativeSrc": "10688:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10688:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10680:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10680:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10760:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10760:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10773:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10773:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10784:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10784:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10769:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10769:3:5"
																		},
																		"nativeSrc": "10769:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10769:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10716:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10716:43:5"
																},
																"nativeSrc": "10716:71:5",
																"nodeType": "YulFunctionCall",
																"src": "10716:71:5"
															},
															"nativeSrc": "10716:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "10716:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10572:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10642:9:5",
														"nodeType": "YulTypedName",
														"src": "10642:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10654:6:5",
														"nodeType": "YulTypedName",
														"src": "10654:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10665:4:5",
														"nodeType": "YulTypedName",
														"src": "10665:4:5",
														"type": ""
													}
												],
												"src": "10572:222:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001a4238038062001a42833981810160405281019062000036919062000467565b6040518060400160405280600c81526020017f4d794669727374546f6b656e00000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d465400000000000000000000000000000000000000000000000000000000008152508160039081620000b39190620006fb565b508060049081620000c59190620006fb565b5050508060055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000145336200011d6200014c60201b60201c565b600a6200012b919062000968565b6064620001399190620009b8565b6200015460201b60201c565b5062000acf565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001c7575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620001be919062000a13565b60405180910390fd5b620001da5f8383620001de60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000232578060025f82825462000225919062000a2e565b9250508190555062000303565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015620002be578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620002b59392919062000a79565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200034c578060025f828254039250508190555062000396565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003f5919062000ab4565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620004318262000406565b9050919050565b620004438162000425565b81146200044e575f80fd5b50565b5f81519050620004618162000438565b92915050565b5f602082840312156200047f576200047e62000402565b5b5f6200048e8482850162000451565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200051357607f821691505b602082108103620005295762000528620004ce565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200058d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000550565b62000599868362000550565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620005e3620005dd620005d784620005b1565b620005ba565b620005b1565b9050919050565b5f819050919050565b620005fe83620005c3565b620006166200060d82620005ea565b8484546200055c565b825550505050565b5f90565b6200062c6200061e565b62000639818484620005f3565b505050565b5b818110156200066057620006545f8262000622565b6001810190506200063f565b5050565b601f821115620006af5762000679816200052f565b620006848462000541565b8101602085101562000694578190505b620006ac620006a38562000541565b8301826200063e565b50505b505050565b5f82821c905092915050565b5f620006d15f1984600802620006b4565b1980831691505092915050565b5f620006eb8383620006c0565b9150826002028217905092915050565b620007068262000497565b67ffffffffffffffff811115620007225762000721620004a1565b5b6200072e8254620004fb565b6200073b82828562000664565b5f60209050601f83116001811462000771575f84156200075c578287015190505b620007688582620006de565b865550620007d7565b601f19841662000781866200052f565b5f5b82811015620007aa5784890151825560018201915060208501945060208101905062000783565b86831015620007ca5784890151620007c6601f891682620006c0565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156200086957808604811115620008415762000840620007df565b5b6001851615620008515780820291505b808102905062000861856200080c565b945062000821565b94509492505050565b5f8262000883576001905062000955565b8162000892575f905062000955565b8160018114620008ab5760028114620008b657620008ec565b600191505062000955565b60ff841115620008cb57620008ca620007df565b5b8360020a915084821115620008e557620008e4620007df565b5b5062000955565b5060208310610133831016604e8410600b8410161715620009265782820a90508381111562000920576200091f620007df565b5b62000955565b62000935848484600162000818565b925090508184048111156200094f576200094e620007df565b5b81810290505b9392505050565b5f60ff82169050919050565b5f6200097482620005b1565b915062000981836200095c565b9250620009b07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000872565b905092915050565b5f620009c482620005b1565b9150620009d183620005b1565b9250828202620009e181620005b1565b91508282048414831517620009fb57620009fa620007df565b5b5092915050565b62000a0d8162000425565b82525050565b5f60208201905062000a285f83018462000a02565b92915050565b5f62000a3a82620005b1565b915062000a4783620005b1565b925082820190508082111562000a625762000a61620007df565b5b92915050565b62000a7381620005b1565b82525050565b5f60608201905062000a8e5f83018662000a02565b62000a9d602083018562000a68565b62000aac604083018462000a68565b949350505050565b5f60208201905062000ac95f83018462000a68565b92915050565b610f658062000add5f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c806340c10f191161006f57806340c10f191461016557806370a08231146101815780638da5cb5b146101b157806395d89b41146101cf578063a9059cbb146101ed578063dd62ed3e1461021d576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b361024d565b6040516100c09190610bde565b60405180910390f35b6100e360048036038101906100de9190610c8f565b6102dd565b6040516100f09190610ce7565b60405180910390f35b6101016102f8565b60405161010e9190610d0f565b60405180910390f35b610131600480360381019061012c9190610d28565b610301565b60405161013e9190610ce7565b60405180910390f35b61014f610328565b60405161015c9190610d93565b60405180910390f35b61017f600480360381019061017a9190610c8f565b610330565b005b61019b60048036038101906101969190610dac565b610346565b6040516101a89190610d0f565b60405180910390f35b6101b961038b565b6040516101c69190610de6565b60405180910390f35b6101d76103b3565b6040516101e49190610bde565b60405180910390f35b61020760048036038101906102029190610c8f565b610443565b6040516102149190610ce7565b60405180910390f35b61023760048036038101906102329190610dff565b61045e565b6040516102449190610d0f565b60405180910390f35b60606003805461025c90610e6a565b80601f016020809104026020016040519081016040528092919081815260200182805461028890610e6a565b80156102d35780601f106102aa576101008083540402835291602001916102d3565b820191905f5260205f20905b8154815290600101906020018083116102b657829003601f168201915b5050505050905090565b5f803390506102ed8185856104e0565b600191505092915050565b5f600254905090565b5f803390506103118582856104f2565b61031c858585610584565b60019150509392505050565b5f6012905090565b610338610674565b61034282826106ed565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546103c290610e6a565b80601f01602080910402602001604051908101604052809291908181526020018280546103ee90610e6a565b80156104395780601f1061041057610100808354040283529160200191610439565b820191905f5260205f20905b81548152906001019060200180831161041c57829003601f168201915b5050505050905090565b5f80339050610453818585610584565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6104ed838383600161076c565b505050565b5f6104fd848461045e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461057e578181101561056f578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161056693929190610e9a565b60405180910390fd5b61057d84848484035f61076c565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105f4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105eb9190610de6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610664575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161065b9190610de6565b60405180910390fd5b61066f83838361093b565b505050565b3373ffffffffffffffffffffffffffffffffffffffff1661069361038b565b73ffffffffffffffffffffffffffffffffffffffff16146106eb57336040517f32b2baa30000000000000000000000000000000000000000000000000000000081526004016106e29190610de6565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361075d575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107549190610de6565b60405180910390fd5b6107685f838361093b565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107dc575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107d39190610de6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084c575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108439190610de6565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610935578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161092c9190610d0f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361098b578060025f82825461097f9190610efc565b92505081905550610a59565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610a14578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a0b93929190610e9a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aa0578060025f8282540392505081905550610aea565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b479190610d0f565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610b8b578082015181840152602081019050610b70565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610bb082610b54565b610bba8185610b5e565b9350610bca818560208601610b6e565b610bd381610b96565b840191505092915050565b5f6020820190508181035f830152610bf68184610ba6565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c2b82610c02565b9050919050565b610c3b81610c21565b8114610c45575f80fd5b50565b5f81359050610c5681610c32565b92915050565b5f819050919050565b610c6e81610c5c565b8114610c78575f80fd5b50565b5f81359050610c8981610c65565b92915050565b5f8060408385031215610ca557610ca4610bfe565b5b5f610cb285828601610c48565b9250506020610cc385828601610c7b565b9150509250929050565b5f8115159050919050565b610ce181610ccd565b82525050565b5f602082019050610cfa5f830184610cd8565b92915050565b610d0981610c5c565b82525050565b5f602082019050610d225f830184610d00565b92915050565b5f805f60608486031215610d3f57610d3e610bfe565b5b5f610d4c86828701610c48565b9350506020610d5d86828701610c48565b9250506040610d6e86828701610c7b565b9150509250925092565b5f60ff82169050919050565b610d8d81610d78565b82525050565b5f602082019050610da65f830184610d84565b92915050565b5f60208284031215610dc157610dc0610bfe565b5b5f610dce84828501610c48565b91505092915050565b610de081610c21565b82525050565b5f602082019050610df95f830184610dd7565b92915050565b5f8060408385031215610e1557610e14610bfe565b5b5f610e2285828601610c48565b9250506020610e3385828601610c48565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e8157607f821691505b602082108103610e9457610e93610e3d565b5b50919050565b5f606082019050610ead5f830186610dd7565b610eba6020830185610d00565b610ec76040830184610d00565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f0682610c5c565b9150610f1183610c5c565b9250828201905080821115610f2957610f28610ecf565b5b9291505056fea2646970667358221220b3689c412751bf982667f77617a8f527ac9e14273e859d10a84f897bf3bf3c0364736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1A42 CODESIZE SUB DUP1 PUSH3 0x1A42 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D794669727374546F6B656E0000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D46540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB3 SWAP2 SWAP1 PUSH3 0x6FB JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC5 SWAP2 SWAP1 PUSH3 0x6FB JUMP JUMPDEST POP POP POP DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x145 CALLER PUSH3 0x11D PUSH3 0x14C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x12B SWAP2 SWAP1 PUSH3 0x968 JUMP JUMPDEST PUSH1 0x64 PUSH3 0x139 SWAP2 SWAP1 PUSH3 0x9B8 JUMP JUMPDEST PUSH3 0x154 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xACF JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1C7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1BE SWAP2 SWAP1 PUSH3 0xA13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1DA PUSH0 DUP4 DUP4 PUSH3 0x1DE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x232 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x225 SWAP2 SWAP1 PUSH3 0xA2E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x303 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x2BE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2B5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xA79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x34C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x396 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x3F5 SWAP2 SWAP1 PUSH3 0xAB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x431 DUP3 PUSH3 0x406 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x443 DUP2 PUSH3 0x425 JUMP JUMPDEST DUP2 EQ PUSH3 0x44E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x461 DUP2 PUSH3 0x438 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x47F JUMPI PUSH3 0x47E PUSH3 0x402 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x48E DUP5 DUP3 DUP6 ADD PUSH3 0x451 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x513 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x529 JUMPI PUSH3 0x528 PUSH3 0x4CE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x58D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x550 JUMP JUMPDEST PUSH3 0x599 DUP7 DUP4 PUSH3 0x550 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x5E3 PUSH3 0x5DD PUSH3 0x5D7 DUP5 PUSH3 0x5B1 JUMP JUMPDEST PUSH3 0x5BA JUMP JUMPDEST PUSH3 0x5B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5FE DUP4 PUSH3 0x5C3 JUMP JUMPDEST PUSH3 0x616 PUSH3 0x60D DUP3 PUSH3 0x5EA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x55C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x62C PUSH3 0x61E JUMP JUMPDEST PUSH3 0x639 DUP2 DUP5 DUP5 PUSH3 0x5F3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x660 JUMPI PUSH3 0x654 PUSH0 DUP3 PUSH3 0x622 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x63F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x6AF JUMPI PUSH3 0x679 DUP2 PUSH3 0x52F JUMP JUMPDEST PUSH3 0x684 DUP5 PUSH3 0x541 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x694 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x6AC PUSH3 0x6A3 DUP6 PUSH3 0x541 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x63E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x6D1 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x6B4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x6EB DUP4 DUP4 PUSH3 0x6C0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x706 DUP3 PUSH3 0x497 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x722 JUMPI PUSH3 0x721 PUSH3 0x4A1 JUMP JUMPDEST JUMPDEST PUSH3 0x72E DUP3 SLOAD PUSH3 0x4FB JUMP JUMPDEST PUSH3 0x73B DUP3 DUP3 DUP6 PUSH3 0x664 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x771 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x75C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x768 DUP6 DUP3 PUSH3 0x6DE JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x7D7 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x781 DUP7 PUSH3 0x52F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x7AA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x783 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x7CA JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x7C6 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x6C0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x869 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x841 JUMPI PUSH3 0x840 PUSH3 0x7DF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x851 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x861 DUP6 PUSH3 0x80C JUMP JUMPDEST SWAP5 POP PUSH3 0x821 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x883 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x955 JUMP JUMPDEST DUP2 PUSH3 0x892 JUMPI PUSH0 SWAP1 POP PUSH3 0x955 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x8AB JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x8B6 JUMPI PUSH3 0x8EC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x955 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x8CB JUMPI PUSH3 0x8CA PUSH3 0x7DF JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x8E5 JUMPI PUSH3 0x8E4 PUSH3 0x7DF JUMP JUMPDEST JUMPDEST POP PUSH3 0x955 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x926 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x920 JUMPI PUSH3 0x91F PUSH3 0x7DF JUMP JUMPDEST JUMPDEST PUSH3 0x955 JUMP JUMPDEST PUSH3 0x935 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x818 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x94F JUMPI PUSH3 0x94E PUSH3 0x7DF JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x974 DUP3 PUSH3 0x5B1 JUMP JUMPDEST SWAP2 POP PUSH3 0x981 DUP4 PUSH3 0x95C JUMP JUMPDEST SWAP3 POP PUSH3 0x9B0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x872 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x9C4 DUP3 PUSH3 0x5B1 JUMP JUMPDEST SWAP2 POP PUSH3 0x9D1 DUP4 PUSH3 0x5B1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x9E1 DUP2 PUSH3 0x5B1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x9FB JUMPI PUSH3 0x9FA PUSH3 0x7DF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA0D DUP2 PUSH3 0x425 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA28 PUSH0 DUP4 ADD DUP5 PUSH3 0xA02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xA3A DUP3 PUSH3 0x5B1 JUMP JUMPDEST SWAP2 POP PUSH3 0xA47 DUP4 PUSH3 0x5B1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xA62 JUMPI PUSH3 0xA61 PUSH3 0x7DF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA73 DUP2 PUSH3 0x5B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xA8E PUSH0 DUP4 ADD DUP7 PUSH3 0xA02 JUMP JUMPDEST PUSH3 0xA9D PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xA68 JUMP JUMPDEST PUSH3 0xAAC PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xA68 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xAC9 PUSH0 DUP4 ADD DUP5 PUSH3 0xA68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF65 DUP1 PUSH3 0xADD PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x21D JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xDAC JUMP JUMPDEST PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25C SWAP1 PUSH2 0xE6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x288 SWAP1 PUSH2 0xE6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH2 0x2ED DUP2 DUP6 DUP6 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH2 0x311 DUP6 DUP3 DUP6 PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x31C DUP6 DUP6 DUP6 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x674 JUMP JUMPDEST PUSH2 0x342 DUP3 DUP3 PUSH2 0x6ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3C2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3EE SWAP1 PUSH2 0xE6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x439 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x410 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x439 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x41C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH2 0x453 DUP2 DUP6 DUP6 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4ED DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x76C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4FD DUP5 DUP5 PUSH2 0x45E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x57E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x56F JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x566 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57D DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x76C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5F4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x664 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65B SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66F DUP4 DUP4 DUP4 PUSH2 0x93B JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x693 PUSH2 0x38B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6EB JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x32B2BAA300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x75D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x754 SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x768 PUSH0 DUP4 DUP4 PUSH2 0x93B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7DC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D3 SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x843 SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x935 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x92C SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x98B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x97F SWAP2 SWAP1 PUSH2 0xEFC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA59 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA14 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAA0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAEA JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB47 SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB8B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB70 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBB0 DUP3 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0xBBA DUP2 DUP6 PUSH2 0xB5E JUMP JUMPDEST SWAP4 POP PUSH2 0xBCA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB6E JUMP JUMPDEST PUSH2 0xBD3 DUP2 PUSH2 0xB96 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBF6 DUP2 DUP5 PUSH2 0xBA6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC2B DUP3 PUSH2 0xC02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3B DUP2 PUSH2 0xC21 JUMP JUMPDEST DUP2 EQ PUSH2 0xC45 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC56 DUP2 PUSH2 0xC32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6E DUP2 PUSH2 0xC5C JUMP JUMPDEST DUP2 EQ PUSH2 0xC78 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC89 DUP2 PUSH2 0xC65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCA5 JUMPI PUSH2 0xCA4 PUSH2 0xBFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCB2 DUP6 DUP3 DUP7 ADD PUSH2 0xC48 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCC3 DUP6 DUP3 DUP7 ADD PUSH2 0xC7B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE1 DUP2 PUSH2 0xCCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCFA PUSH0 DUP4 ADD DUP5 PUSH2 0xCD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD09 DUP2 PUSH2 0xC5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD22 PUSH0 DUP4 ADD DUP5 PUSH2 0xD00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD3F JUMPI PUSH2 0xD3E PUSH2 0xBFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD4C DUP7 DUP3 DUP8 ADD PUSH2 0xC48 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD5D DUP7 DUP3 DUP8 ADD PUSH2 0xC48 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD6E DUP7 DUP3 DUP8 ADD PUSH2 0xC7B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8D DUP2 PUSH2 0xD78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA6 PUSH0 DUP4 ADD DUP5 PUSH2 0xD84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDC1 JUMPI PUSH2 0xDC0 PUSH2 0xBFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDCE DUP5 DUP3 DUP6 ADD PUSH2 0xC48 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDE0 DUP2 PUSH2 0xC21 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDF9 PUSH0 DUP4 ADD DUP5 PUSH2 0xDD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE15 JUMPI PUSH2 0xE14 PUSH2 0xBFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE22 DUP6 DUP3 DUP7 ADD PUSH2 0xC48 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE33 DUP6 DUP3 DUP7 ADD PUSH2 0xC48 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE81 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE94 JUMPI PUSH2 0xE93 PUSH2 0xE3D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEAD PUSH0 DUP4 ADD DUP7 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0xEBA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD00 JUMP JUMPDEST PUSH2 0xEC7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD00 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF06 DUP3 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP PUSH2 0xF11 DUP4 PUSH2 0xC5C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF29 JUMPI PUSH2 0xF28 PUSH2 0xECF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 PUSH9 0x9C412751BF982667F7 PUSH23 0x17A8F527AC9E14273E859D10A84F897BF3BF3C0364736F PUSH13 0x63430008160033000000000000 ",
							"sourceMap": "200:837:3:-:0;;;320:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1916:116:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1991:5;1983;:13;;;;;;:::i;:::-;;2017:7;2007;:17;;;;;;:::i;:::-;;1916:116;;462:12:3::1;453:6;;:21;;;;;;;;;;;;;;;;;;485:41;491:10;515;:8;;;:10;;:::i;:::-;509:2;:16;;;;:::i;:::-;503:3;:22;;;;:::i;:::-;485:5;;;:41;;:::i;:::-;320:214:::0;200:837;;3055:84:0;3104:5;3129:2;3122:9;;3055:84;:::o;7911:213::-;8001:1;7982:21;;:7;:21;;;7978:93;;8056:1;8027:32;;;;;;;;;;;:::i;:::-;;;;;;;;7978:93;8081:35;8097:1;8101:7;8110:5;8081:7;;;:35;;:::i;:::-;7911:213;;:::o;6423:1135::-;6529:1;6513:18;;:4;:18;;;6509:552;;6667:5;6651:12;;:21;;;;;;;:::i;:::-;;;;;;;;6509:552;;;6705:19;6727:9;:15;6737:4;6727:15;;;;;;;;;;;;;;;;6705:37;;6775:5;6761:11;:19;6757:117;;;6833:4;6839:11;6852:5;6808:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6757:117;7029:5;7015:11;:19;6997:9;:15;7007:4;6997:15;;;;;;;;;;;;;;;:37;;;;6690:371;6509:552;7091:1;7077:16;;:2;:16;;;7073:435;;7259:5;7243:12;;:21;;;;;;;;;;;7073:435;;;7476:5;7459:9;:13;7469:2;7459:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;7073:435;7540:2;7525:25;;7534:4;7525:25;;;7544:5;7525:25;;;;;;:::i;:::-;;;;;;;;6423:1135;;;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:180::-;6477:77;6474:1;6467:88;6574:4;6571:1;6564:15;6598:4;6595:1;6588:15;6615:102;6657:8;6704:5;6701:1;6697:13;6676:34;;6615:102;;;:::o;6723:848::-;6784:5;6791:4;6815:6;6806:15;;6839:5;6830:14;;6853:712;6874:1;6864:8;6861:15;6853:712;;;6969:4;6964:3;6960:14;6954:4;6951:24;6948:50;;;6978:18;;:::i;:::-;6948:50;7028:1;7018:8;7014:16;7011:451;;;7443:4;7436:5;7432:16;7423:25;;7011:451;7493:4;7487;7483:15;7475:23;;7523:32;7546:8;7523:32;:::i;:::-;7511:44;;6853:712;;;6723:848;;;;;;;:::o;7577:1073::-;7631:5;7822:8;7812:40;;7843:1;7834:10;;7845:5;;7812:40;7871:4;7861:36;;7888:1;7879:10;;7890:5;;7861:36;7957:4;8005:1;8000:27;;;;8041:1;8036:191;;;;7950:277;;8000:27;8018:1;8009:10;;8020:5;;;8036:191;8081:3;8071:8;8068:17;8065:43;;;8088:18;;:::i;:::-;8065:43;8137:8;8134:1;8130:16;8121:25;;8172:3;8165:5;8162:14;8159:40;;;8179:18;;:::i;:::-;8159:40;8212:5;;;7950:277;;8336:2;8326:8;8323:16;8317:3;8311:4;8308:13;8304:36;8286:2;8276:8;8273:16;8268:2;8262:4;8259:12;8255:35;8239:111;8236:246;;;8392:8;8386:4;8382:19;8373:28;;8427:3;8420:5;8417:14;8414:40;;;8434:18;;:::i;:::-;8414:40;8467:5;;8236:246;8507:42;8545:3;8535:8;8529:4;8526:1;8507:42;:::i;:::-;8492:57;;;;8581:4;8576:3;8572:14;8565:5;8562:25;8559:51;;;8590:18;;:::i;:::-;8559:51;8639:4;8632:5;8628:16;8619:25;;7577:1073;;;;;;:::o;8656:86::-;8691:7;8731:4;8724:5;8720:16;8709:27;;8656:86;;;:::o;8748:281::-;8806:5;8830:23;8848:4;8830:23;:::i;:::-;8822:31;;8874:25;8890:8;8874:25;:::i;:::-;8862:37;;8918:104;8955:66;8945:8;8939:4;8918:104;:::i;:::-;8909:113;;8748:281;;;;:::o;9035:410::-;9075:7;9098:20;9116:1;9098:20;:::i;:::-;9093:25;;9132:20;9150:1;9132:20;:::i;:::-;9127:25;;9187:1;9184;9180:9;9209:30;9227:11;9209:30;:::i;:::-;9198:41;;9388:1;9379:7;9375:15;9372:1;9369:22;9349:1;9342:9;9322:83;9299:139;;9418:18;;:::i;:::-;9299:139;9083:362;9035:410;;;;:::o;9451:118::-;9538:24;9556:5;9538:24;:::i;:::-;9533:3;9526:37;9451:118;;:::o;9575:222::-;9668:4;9706:2;9695:9;9691:18;9683:26;;9719:71;9787:1;9776:9;9772:17;9763:6;9719:71;:::i;:::-;9575:222;;;;:::o;9803:191::-;9843:3;9862:20;9880:1;9862:20;:::i;:::-;9857:25;;9896:20;9914:1;9896:20;:::i;:::-;9891:25;;9939:1;9936;9932:9;9925:16;;9960:3;9957:1;9954:10;9951:36;;;9967:18;;:::i;:::-;9951:36;9803:191;;;;:::o;10000:118::-;10087:24;10105:5;10087:24;:::i;:::-;10082:3;10075:37;10000:118;;:::o;10124:442::-;10273:4;10311:2;10300:9;10296:18;10288:26;;10324:71;10392:1;10381:9;10377:17;10368:6;10324:71;:::i;:::-;10405:72;10473:2;10462:9;10458:18;10449:6;10405:72;:::i;:::-;10487;10555:2;10544:9;10540:18;10531:6;10487:72;:::i;:::-;10124:442;;;;;;:::o;10572:222::-;10665:4;10703:2;10692:9;10688:18;10680:26;;10716:71;10784:1;10773:9;10769:17;10760:6;10716:71;:::i;:::-;10572:222;;;;:::o;200:837:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_401": {
									"entryPoint": 1248,
									"id": 401,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_461": {
									"entryPoint": 1900,
									"id": 461,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_675": {
									"entryPoint": 1652,
									"id": 675,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_350": {
									"entryPoint": 1773,
									"id": 350,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_spendAllowance_509": {
									"entryPoint": 1266,
									"id": 509,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_240": {
									"entryPoint": 1412,
									"id": 240,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_317": {
									"entryPoint": 2363,
									"id": 317,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_137": {
									"entryPoint": 1118,
									"id": 137,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_161": {
									"entryPoint": 733,
									"id": 161,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_96": {
									"entryPoint": 838,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": 808,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_697": {
									"entryPoint": 816,
									"id": 697,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_56": {
									"entryPoint": 589,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_658": {
									"entryPoint": 907,
									"id": 658,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_65": {
									"entryPoint": 947,
									"id": 65,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_83": {
									"entryPoint": 760,
									"id": 83,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_193": {
									"entryPoint": 769,
									"id": 193,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_120": {
									"entryPoint": 1091,
									"id": 120,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3738,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2926,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3791,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3645,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3070,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7360:5",
										"nodeType": "YulBlock",
										"src": "0:7360:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:5",
													"nodeType": "YulBlock",
													"src": "66:40:5",
													"statements": [
														{
															"nativeSrc": "77:22:5",
															"nodeType": "YulAssignment",
															"src": "77:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:5"
																},
																"nativeSrc": "87:12:5",
																"nodeType": "YulFunctionCall",
																"src": "87:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:5",
														"nodeType": "YulTypedName",
														"src": "49:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:5",
														"nodeType": "YulTypedName",
														"src": "59:6:5",
														"type": ""
													}
												],
												"src": "7:99:5"
											},
											{
												"body": {
													"nativeSrc": "208:73:5",
													"nodeType": "YulBlock",
													"src": "208:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:5"
																},
																"nativeSrc": "218:19:5",
																"nodeType": "YulFunctionCall",
																"src": "218:19:5"
															},
															"nativeSrc": "218:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:5"
														},
														{
															"nativeSrc": "246:29:5",
															"nodeType": "YulAssignment",
															"src": "246:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:5",
																		"nodeType": "YulLiteral",
																		"src": "270:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:5"
																},
																"nativeSrc": "261:14:5",
																"nodeType": "YulFunctionCall",
																"src": "261:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:5",
														"nodeType": "YulTypedName",
														"src": "180:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:5",
														"nodeType": "YulTypedName",
														"src": "185:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:5",
														"nodeType": "YulTypedName",
														"src": "196:11:5",
														"type": ""
													}
												],
												"src": "112:169:5"
											},
											{
												"body": {
													"nativeSrc": "349:184:5",
													"nodeType": "YulBlock",
													"src": "349:184:5",
													"statements": [
														{
															"nativeSrc": "359:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:5",
																"nodeType": "YulLiteral",
																"src": "368:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:5",
																	"nodeType": "YulTypedName",
																	"src": "363:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:5",
																"nodeType": "YulBlock",
																"src": "428:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:5"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:5"
																					},
																					"nativeSrc": "449:11:5",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:5"
																							},
																							"nativeSrc": "468:11:5",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:5"
																					},
																					"nativeSrc": "462:18:5",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:5"
																			},
																			"nativeSrc": "442:39:5",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:5"
																		},
																		"nativeSrc": "442:39:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:5"
																},
																"nativeSrc": "386:13:5",
																"nodeType": "YulFunctionCall",
																"src": "386:13:5"
															},
															"nativeSrc": "378:113:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:5",
																"nodeType": "YulBlock",
																"src": "400:19:5",
																"statements": [
																	{
																		"nativeSrc": "402:15:5",
																		"nodeType": "YulAssignment",
																		"src": "402:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:5",
																					"nodeType": "YulLiteral",
																					"src": "414:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:5"
																			},
																			"nativeSrc": "407:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:5",
																"nodeType": "YulBlock",
																"src": "382:3:5",
																"statements": []
															},
															"src": "378:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:5"
																		},
																		"nativeSrc": "507:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:5",
																		"nodeType": "YulLiteral",
																		"src": "525:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:5"
																},
																"nativeSrc": "500:27:5",
																"nodeType": "YulFunctionCall",
																"src": "500:27:5"
															},
															"nativeSrc": "500:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:5",
														"nodeType": "YulTypedName",
														"src": "331:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:5",
														"nodeType": "YulTypedName",
														"src": "336:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:5",
														"nodeType": "YulTypedName",
														"src": "341:6:5",
														"type": ""
													}
												],
												"src": "287:246:5"
											},
											{
												"body": {
													"nativeSrc": "587:54:5",
													"nodeType": "YulBlock",
													"src": "587:54:5",
													"statements": [
														{
															"nativeSrc": "597:38:5",
															"nodeType": "YulAssignment",
															"src": "597:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:5",
																				"nodeType": "YulLiteral",
																				"src": "622:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:5"
																		},
																		"nativeSrc": "611:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:5",
																				"nodeType": "YulLiteral",
																				"src": "631:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:5"
																		},
																		"nativeSrc": "627:7:5",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:5"
																},
																"nativeSrc": "607:28:5",
																"nodeType": "YulFunctionCall",
																"src": "607:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:5",
														"nodeType": "YulTypedName",
														"src": "570:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:5",
														"nodeType": "YulTypedName",
														"src": "580:6:5",
														"type": ""
													}
												],
												"src": "539:102:5"
											},
											{
												"body": {
													"nativeSrc": "739:285:5",
													"nodeType": "YulBlock",
													"src": "739:285:5",
													"statements": [
														{
															"nativeSrc": "749:53:5",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:5",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:5"
																},
																"nativeSrc": "763:39:5",
																"nodeType": "YulFunctionCall",
																"src": "763:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:5",
																	"nodeType": "YulTypedName",
																	"src": "753:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:5",
															"nodeType": "YulAssignment",
															"src": "811:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:5"
																},
																"nativeSrc": "818:71:5",
																"nodeType": "YulFunctionCall",
																"src": "818:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:5",
																				"nodeType": "YulLiteral",
																				"src": "944:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:5"
																		},
																		"nativeSrc": "933:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:5"
																},
																"nativeSrc": "898:65:5",
																"nodeType": "YulFunctionCall",
																"src": "898:65:5"
															},
															"nativeSrc": "898:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:5"
														},
														{
															"nativeSrc": "972:46:5",
															"nodeType": "YulAssignment",
															"src": "972:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:5",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:5"
																		},
																		"nativeSrc": "988:29:5",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:5"
																},
																"nativeSrc": "979:39:5",
																"nodeType": "YulFunctionCall",
																"src": "979:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:5",
														"nodeType": "YulTypedName",
														"src": "720:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:5",
														"nodeType": "YulTypedName",
														"src": "727:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:5",
														"nodeType": "YulTypedName",
														"src": "735:3:5",
														"type": ""
													}
												],
												"src": "647:377:5"
											},
											{
												"body": {
													"nativeSrc": "1148:195:5",
													"nodeType": "YulBlock",
													"src": "1148:195:5",
													"statements": [
														{
															"nativeSrc": "1158:26:5",
															"nodeType": "YulAssignment",
															"src": "1158:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:5"
																},
																"nativeSrc": "1166:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:5"
																		},
																		"nativeSrc": "1201:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:5"
																		},
																		"nativeSrc": "1220:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:5"
																},
																"nativeSrc": "1194:47:5",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:5"
															},
															"nativeSrc": "1194:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:5"
														},
														{
															"nativeSrc": "1250:86:5",
															"nodeType": "YulAssignment",
															"src": "1250:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:5"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:5",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:5"
																},
																"nativeSrc": "1258:78:5",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:5",
														"nodeType": "YulTypedName",
														"src": "1120:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:5",
														"nodeType": "YulTypedName",
														"src": "1132:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:5",
														"nodeType": "YulTypedName",
														"src": "1143:4:5",
														"type": ""
													}
												],
												"src": "1030:313:5"
											},
											{
												"body": {
													"nativeSrc": "1389:35:5",
													"nodeType": "YulBlock",
													"src": "1389:35:5",
													"statements": [
														{
															"nativeSrc": "1399:19:5",
															"nodeType": "YulAssignment",
															"src": "1399:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:5"
																},
																"nativeSrc": "1409:9:5",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:5",
														"nodeType": "YulTypedName",
														"src": "1382:6:5",
														"type": ""
													}
												],
												"src": "1349:75:5"
											},
											{
												"body": {
													"nativeSrc": "1519:28:5",
													"nodeType": "YulBlock",
													"src": "1519:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:5"
																},
																"nativeSrc": "1529:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:5"
															},
															"nativeSrc": "1529:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:5"
											},
											{
												"body": {
													"nativeSrc": "1642:28:5",
													"nodeType": "YulBlock",
													"src": "1642:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:5"
																},
																"nativeSrc": "1652:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:5"
															},
															"nativeSrc": "1652:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:5"
											},
											{
												"body": {
													"nativeSrc": "1721:81:5",
													"nodeType": "YulBlock",
													"src": "1721:81:5",
													"statements": [
														{
															"nativeSrc": "1731:65:5",
															"nodeType": "YulAssignment",
															"src": "1731:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:5",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:5"
																},
																"nativeSrc": "1742:54:5",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:5",
														"nodeType": "YulTypedName",
														"src": "1703:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:5",
														"nodeType": "YulTypedName",
														"src": "1713:7:5",
														"type": ""
													}
												],
												"src": "1676:126:5"
											},
											{
												"body": {
													"nativeSrc": "1853:51:5",
													"nodeType": "YulBlock",
													"src": "1853:51:5",
													"statements": [
														{
															"nativeSrc": "1863:35:5",
															"nodeType": "YulAssignment",
															"src": "1863:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:5"
																},
																"nativeSrc": "1874:24:5",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:5",
														"nodeType": "YulTypedName",
														"src": "1835:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:5",
														"nodeType": "YulTypedName",
														"src": "1845:7:5",
														"type": ""
													}
												],
												"src": "1808:96:5"
											},
											{
												"body": {
													"nativeSrc": "1953:79:5",
													"nodeType": "YulBlock",
													"src": "1953:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:5",
																"nodeType": "YulBlock",
																"src": "2010:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:5"
																			},
																			"nativeSrc": "2012:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:5"
																		},
																		"nativeSrc": "2012:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:5"
																				},
																				"nativeSrc": "1983:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:5"
																		},
																		"nativeSrc": "1973:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:5"
																},
																"nativeSrc": "1966:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:5"
															},
															"nativeSrc": "1963:63:5",
															"nodeType": "YulIf",
															"src": "1963:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:5",
														"nodeType": "YulTypedName",
														"src": "1946:5:5",
														"type": ""
													}
												],
												"src": "1910:122:5"
											},
											{
												"body": {
													"nativeSrc": "2090:87:5",
													"nodeType": "YulBlock",
													"src": "2090:87:5",
													"statements": [
														{
															"nativeSrc": "2100:29:5",
															"nodeType": "YulAssignment",
															"src": "2100:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:5"
																},
																"nativeSrc": "2109:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:5"
																},
																"nativeSrc": "2138:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:5"
															},
															"nativeSrc": "2138:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:5",
														"nodeType": "YulTypedName",
														"src": "2068:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:5",
														"nodeType": "YulTypedName",
														"src": "2076:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:5",
														"nodeType": "YulTypedName",
														"src": "2084:5:5",
														"type": ""
													}
												],
												"src": "2038:139:5"
											},
											{
												"body": {
													"nativeSrc": "2228:32:5",
													"nodeType": "YulBlock",
													"src": "2228:32:5",
													"statements": [
														{
															"nativeSrc": "2238:16:5",
															"nodeType": "YulAssignment",
															"src": "2238:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:5",
																"nodeType": "YulIdentifier",
																"src": "2249:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:5",
														"nodeType": "YulTypedName",
														"src": "2210:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:5",
														"nodeType": "YulTypedName",
														"src": "2220:7:5",
														"type": ""
													}
												],
												"src": "2183:77:5"
											},
											{
												"body": {
													"nativeSrc": "2309:79:5",
													"nodeType": "YulBlock",
													"src": "2309:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:5",
																"nodeType": "YulBlock",
																"src": "2366:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:5"
																			},
																			"nativeSrc": "2368:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:5"
																		},
																		"nativeSrc": "2368:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:5"
																				},
																				"nativeSrc": "2339:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:5"
																		},
																		"nativeSrc": "2329:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:5"
																},
																"nativeSrc": "2322:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:5"
															},
															"nativeSrc": "2319:63:5",
															"nodeType": "YulIf",
															"src": "2319:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:5",
														"nodeType": "YulTypedName",
														"src": "2302:5:5",
														"type": ""
													}
												],
												"src": "2266:122:5"
											},
											{
												"body": {
													"nativeSrc": "2446:87:5",
													"nodeType": "YulBlock",
													"src": "2446:87:5",
													"statements": [
														{
															"nativeSrc": "2456:29:5",
															"nodeType": "YulAssignment",
															"src": "2456:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:5"
																},
																"nativeSrc": "2465:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:5"
																},
																"nativeSrc": "2494:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:5"
															},
															"nativeSrc": "2494:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:5",
														"nodeType": "YulTypedName",
														"src": "2424:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:5",
														"nodeType": "YulTypedName",
														"src": "2432:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:5",
														"nodeType": "YulTypedName",
														"src": "2440:5:5",
														"type": ""
													}
												],
												"src": "2394:139:5"
											},
											{
												"body": {
													"nativeSrc": "2622:391:5",
													"nodeType": "YulBlock",
													"src": "2622:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:5",
																"nodeType": "YulBlock",
																"src": "2668:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:5"
																			},
																			"nativeSrc": "2670:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:5"
																		},
																		"nativeSrc": "2670:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:5"
																		},
																		"nativeSrc": "2639:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:5"
																},
																"nativeSrc": "2635:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:5"
															},
															"nativeSrc": "2632:119:5",
															"nodeType": "YulIf",
															"src": "2632:119:5"
														},
														{
															"nativeSrc": "2761:117:5",
															"nodeType": "YulBlock",
															"src": "2761:117:5",
															"statements": [
																{
																	"nativeSrc": "2776:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:5"
																				},
																				"nativeSrc": "2836:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:5"
																		},
																		"nativeSrc": "2815:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:5",
															"nodeType": "YulBlock",
															"src": "2888:118:5",
															"statements": [
																{
																	"nativeSrc": "2903:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:5"
																				},
																				"nativeSrc": "2964:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:5"
																		},
																		"nativeSrc": "2943:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:5",
														"nodeType": "YulTypedName",
														"src": "2584:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:5",
														"nodeType": "YulTypedName",
														"src": "2595:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:5",
														"nodeType": "YulTypedName",
														"src": "2607:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:5",
														"nodeType": "YulTypedName",
														"src": "2615:6:5",
														"type": ""
													}
												],
												"src": "2539:474:5"
											},
											{
												"body": {
													"nativeSrc": "3061:48:5",
													"nodeType": "YulBlock",
													"src": "3061:48:5",
													"statements": [
														{
															"nativeSrc": "3071:32:5",
															"nodeType": "YulAssignment",
															"src": "3071:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:5"
																		},
																		"nativeSrc": "3089:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:5"
																},
																"nativeSrc": "3082:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:5",
														"nodeType": "YulTypedName",
														"src": "3043:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:5",
														"nodeType": "YulTypedName",
														"src": "3053:7:5",
														"type": ""
													}
												],
												"src": "3019:90:5"
											},
											{
												"body": {
													"nativeSrc": "3174:50:5",
													"nodeType": "YulBlock",
													"src": "3174:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:5",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:5"
																		},
																		"nativeSrc": "3196:21:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:5"
																},
																"nativeSrc": "3184:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:5"
															},
															"nativeSrc": "3184:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:5",
														"nodeType": "YulTypedName",
														"src": "3162:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:5",
														"nodeType": "YulTypedName",
														"src": "3169:3:5",
														"type": ""
													}
												],
												"src": "3115:109:5"
											},
											{
												"body": {
													"nativeSrc": "3322:118:5",
													"nodeType": "YulBlock",
													"src": "3322:118:5",
													"statements": [
														{
															"nativeSrc": "3332:26:5",
															"nodeType": "YulAssignment",
															"src": "3332:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:5"
																},
																"nativeSrc": "3340:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:5"
																		},
																		"nativeSrc": "3415:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:5",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:5"
																},
																"nativeSrc": "3368:65:5",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:5"
															},
															"nativeSrc": "3368:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:5",
														"nodeType": "YulTypedName",
														"src": "3294:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:5",
														"nodeType": "YulTypedName",
														"src": "3306:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:5",
														"nodeType": "YulTypedName",
														"src": "3317:4:5",
														"type": ""
													}
												],
												"src": "3230:210:5"
											},
											{
												"body": {
													"nativeSrc": "3511:53:5",
													"nodeType": "YulBlock",
													"src": "3511:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:5"
																		},
																		"nativeSrc": "3533:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:5"
																},
																"nativeSrc": "3521:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:5"
															},
															"nativeSrc": "3521:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:5",
														"nodeType": "YulTypedName",
														"src": "3499:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:5",
														"nodeType": "YulTypedName",
														"src": "3506:3:5",
														"type": ""
													}
												],
												"src": "3446:118:5"
											},
											{
												"body": {
													"nativeSrc": "3668:124:5",
													"nodeType": "YulBlock",
													"src": "3668:124:5",
													"statements": [
														{
															"nativeSrc": "3678:26:5",
															"nodeType": "YulAssignment",
															"src": "3678:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:5"
																},
																"nativeSrc": "3686:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:5"
																		},
																		"nativeSrc": "3767:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:5"
																},
																"nativeSrc": "3714:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:5"
															},
															"nativeSrc": "3714:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:5",
														"nodeType": "YulTypedName",
														"src": "3640:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:5",
														"nodeType": "YulTypedName",
														"src": "3652:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:5",
														"nodeType": "YulTypedName",
														"src": "3663:4:5",
														"type": ""
													}
												],
												"src": "3570:222:5"
											},
											{
												"body": {
													"nativeSrc": "3898:519:5",
													"nodeType": "YulBlock",
													"src": "3898:519:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:5",
																"nodeType": "YulBlock",
																"src": "3944:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:5"
																			},
																			"nativeSrc": "3946:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:5"
																		},
																		"nativeSrc": "3946:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:5"
																		},
																		"nativeSrc": "3915:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:5"
																},
																"nativeSrc": "3911:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:5"
															},
															"nativeSrc": "3908:119:5",
															"nodeType": "YulIf",
															"src": "3908:119:5"
														},
														{
															"nativeSrc": "4037:117:5",
															"nodeType": "YulBlock",
															"src": "4037:117:5",
															"statements": [
																{
																	"nativeSrc": "4052:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:5"
																				},
																				"nativeSrc": "4112:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:5"
																		},
																		"nativeSrc": "4091:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:5",
															"nodeType": "YulBlock",
															"src": "4164:118:5",
															"statements": [
																{
																	"nativeSrc": "4179:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:5"
																				},
																				"nativeSrc": "4240:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:5"
																		},
																		"nativeSrc": "4219:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:5",
															"nodeType": "YulBlock",
															"src": "4292:118:5",
															"statements": [
																{
																	"nativeSrc": "4307:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:5"
																				},
																				"nativeSrc": "4368:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:5"
																		},
																		"nativeSrc": "4347:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:5",
														"nodeType": "YulTypedName",
														"src": "3852:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:5",
														"nodeType": "YulTypedName",
														"src": "3863:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:5",
														"nodeType": "YulTypedName",
														"src": "3875:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:5",
														"nodeType": "YulTypedName",
														"src": "3883:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:5",
														"nodeType": "YulTypedName",
														"src": "3891:6:5",
														"type": ""
													}
												],
												"src": "3798:619:5"
											},
											{
												"body": {
													"nativeSrc": "4466:43:5",
													"nodeType": "YulBlock",
													"src": "4466:43:5",
													"statements": [
														{
															"nativeSrc": "4476:27:5",
															"nodeType": "YulAssignment",
															"src": "4476:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:5"
																},
																"nativeSrc": "4487:16:5",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:5",
														"nodeType": "YulTypedName",
														"src": "4448:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:5",
														"nodeType": "YulTypedName",
														"src": "4458:7:5",
														"type": ""
													}
												],
												"src": "4423:86:5"
											},
											{
												"body": {
													"nativeSrc": "4576:51:5",
													"nodeType": "YulBlock",
													"src": "4576:51:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:5",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:5"
																		},
																		"nativeSrc": "4598:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:5"
																},
																"nativeSrc": "4586:35:5",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:5"
															},
															"nativeSrc": "4586:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:5"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:5",
														"nodeType": "YulTypedName",
														"src": "4564:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:5",
														"nodeType": "YulTypedName",
														"src": "4571:3:5",
														"type": ""
													}
												],
												"src": "4515:112:5"
											},
											{
												"body": {
													"nativeSrc": "4727:120:5",
													"nodeType": "YulBlock",
													"src": "4727:120:5",
													"statements": [
														{
															"nativeSrc": "4737:26:5",
															"nodeType": "YulAssignment",
															"src": "4737:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:5"
																},
																"nativeSrc": "4745:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:5"
																		},
																		"nativeSrc": "4822:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:5",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:5"
																},
																"nativeSrc": "4773:67:5",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:5"
															},
															"nativeSrc": "4773:67:5",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:5",
														"nodeType": "YulTypedName",
														"src": "4699:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:5",
														"nodeType": "YulTypedName",
														"src": "4711:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:5",
														"nodeType": "YulTypedName",
														"src": "4722:4:5",
														"type": ""
													}
												],
												"src": "4633:214:5"
											},
											{
												"body": {
													"nativeSrc": "4919:263:5",
													"nodeType": "YulBlock",
													"src": "4919:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4965:83:5",
																"nodeType": "YulBlock",
																"src": "4965:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4967:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:5"
																			},
																			"nativeSrc": "4967:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:5"
																		},
																		"nativeSrc": "4967:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4936:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:5"
																		},
																		"nativeSrc": "4936:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4932:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:5"
																},
																"nativeSrc": "4932:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4932:32:5"
															},
															"nativeSrc": "4929:119:5",
															"nodeType": "YulIf",
															"src": "4929:119:5"
														},
														{
															"nativeSrc": "5058:117:5",
															"nodeType": "YulBlock",
															"src": "5058:117:5",
															"statements": [
																{
																	"nativeSrc": "5073:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5087:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5077:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5102:63:5",
																	"nodeType": "YulAssignment",
																	"src": "5102:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5137:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5148:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5133:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:5"
																				},
																				"nativeSrc": "5133:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5157:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5112:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:5"
																		},
																		"nativeSrc": "5112:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5102:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4853:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4889:9:5",
														"nodeType": "YulTypedName",
														"src": "4889:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4900:7:5",
														"nodeType": "YulTypedName",
														"src": "4900:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4912:6:5",
														"nodeType": "YulTypedName",
														"src": "4912:6:5",
														"type": ""
													}
												],
												"src": "4853:329:5"
											},
											{
												"body": {
													"nativeSrc": "5253:53:5",
													"nodeType": "YulBlock",
													"src": "5253:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5270:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5270:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5293:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5293:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5275:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "5275:17:5"
																		},
																		"nativeSrc": "5275:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5275:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5263:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:5"
																},
																"nativeSrc": "5263:37:5",
																"nodeType": "YulFunctionCall",
																"src": "5263:37:5"
															},
															"nativeSrc": "5263:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "5263:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5188:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5241:5:5",
														"nodeType": "YulTypedName",
														"src": "5241:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5248:3:5",
														"nodeType": "YulTypedName",
														"src": "5248:3:5",
														"type": ""
													}
												],
												"src": "5188:118:5"
											},
											{
												"body": {
													"nativeSrc": "5410:124:5",
													"nodeType": "YulBlock",
													"src": "5410:124:5",
													"statements": [
														{
															"nativeSrc": "5420:26:5",
															"nodeType": "YulAssignment",
															"src": "5420:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5432:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5432:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5443:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5443:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5428:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:5"
																},
																"nativeSrc": "5428:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5428:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5420:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5420:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5500:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5500:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5513:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5524:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5509:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:5"
																		},
																		"nativeSrc": "5509:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5509:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5456:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5456:43:5"
																},
																"nativeSrc": "5456:71:5",
																"nodeType": "YulFunctionCall",
																"src": "5456:71:5"
															},
															"nativeSrc": "5456:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "5456:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5312:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5382:9:5",
														"nodeType": "YulTypedName",
														"src": "5382:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5394:6:5",
														"nodeType": "YulTypedName",
														"src": "5394:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5405:4:5",
														"nodeType": "YulTypedName",
														"src": "5405:4:5",
														"type": ""
													}
												],
												"src": "5312:222:5"
											},
											{
												"body": {
													"nativeSrc": "5623:391:5",
													"nodeType": "YulBlock",
													"src": "5623:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5669:83:5",
																"nodeType": "YulBlock",
																"src": "5669:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5671:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "5671:77:5"
																			},
																			"nativeSrc": "5671:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5671:79:5"
																		},
																		"nativeSrc": "5671:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5671:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5644:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5644:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5653:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5653:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5640:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5640:3:5"
																		},
																		"nativeSrc": "5640:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5640:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5665:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5665:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5636:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5636:3:5"
																},
																"nativeSrc": "5636:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5636:32:5"
															},
															"nativeSrc": "5633:119:5",
															"nodeType": "YulIf",
															"src": "5633:119:5"
														},
														{
															"nativeSrc": "5762:117:5",
															"nodeType": "YulBlock",
															"src": "5762:117:5",
															"statements": [
																{
																	"nativeSrc": "5777:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5777:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5791:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5791:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5781:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5781:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5806:63:5",
																	"nodeType": "YulAssignment",
																	"src": "5806:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5841:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5841:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5852:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5852:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5837:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5837:3:5"
																				},
																				"nativeSrc": "5837:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5837:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5861:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5861:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5816:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "5816:20:5"
																		},
																		"nativeSrc": "5816:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5816:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5806:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5806:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5889:118:5",
															"nodeType": "YulBlock",
															"src": "5889:118:5",
															"statements": [
																{
																	"nativeSrc": "5904:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5904:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5918:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5918:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5908:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5908:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5934:63:5",
																	"nodeType": "YulAssignment",
																	"src": "5934:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5969:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5969:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5980:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5980:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5965:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5965:3:5"
																				},
																				"nativeSrc": "5965:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5965:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5989:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5989:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5944:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "5944:20:5"
																		},
																		"nativeSrc": "5944:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5944:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5934:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5934:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5540:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5585:9:5",
														"nodeType": "YulTypedName",
														"src": "5585:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5596:7:5",
														"nodeType": "YulTypedName",
														"src": "5596:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5608:6:5",
														"nodeType": "YulTypedName",
														"src": "5608:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5616:6:5",
														"nodeType": "YulTypedName",
														"src": "5616:6:5",
														"type": ""
													}
												],
												"src": "5540:474:5"
											},
											{
												"body": {
													"nativeSrc": "6048:152:5",
													"nodeType": "YulBlock",
													"src": "6048:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6065:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6065:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6068:77:5",
																		"nodeType": "YulLiteral",
																		"src": "6068:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6058:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:5"
																},
																"nativeSrc": "6058:88:5",
																"nodeType": "YulFunctionCall",
																"src": "6058:88:5"
															},
															"nativeSrc": "6058:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "6058:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6162:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6162:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6165:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6165:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6155:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:5"
																},
																"nativeSrc": "6155:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6155:15:5"
															},
															"nativeSrc": "6155:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6155:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6186:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6186:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6189:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6189:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6179:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6179:6:5"
																},
																"nativeSrc": "6179:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6179:15:5"
															},
															"nativeSrc": "6179:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6179:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6020:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "6020:180:5"
											},
											{
												"body": {
													"nativeSrc": "6257:269:5",
													"nodeType": "YulBlock",
													"src": "6257:269:5",
													"statements": [
														{
															"nativeSrc": "6267:22:5",
															"nodeType": "YulAssignment",
															"src": "6267:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6281:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6281:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6287:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6287:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6277:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6277:3:5"
																},
																"nativeSrc": "6277:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6277:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6267:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6267:6:5"
																}
															]
														},
														{
															"nativeSrc": "6298:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6298:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6328:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6328:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6334:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6334:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6324:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6324:3:5"
																},
																"nativeSrc": "6324:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6324:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6302:18:5",
																	"nodeType": "YulTypedName",
																	"src": "6302:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6375:51:5",
																"nodeType": "YulBlock",
																"src": "6375:51:5",
																"statements": [
																	{
																		"nativeSrc": "6389:27:5",
																		"nodeType": "YulAssignment",
																		"src": "6389:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6403:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "6403:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6411:4:5",
																					"nodeType": "YulLiteral",
																					"src": "6411:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6399:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6399:3:5"
																			},
																			"nativeSrc": "6399:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6399:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6389:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6389:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6355:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "6355:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6348:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6348:6:5"
																},
																"nativeSrc": "6348:26:5",
																"nodeType": "YulFunctionCall",
																"src": "6348:26:5"
															},
															"nativeSrc": "6345:81:5",
															"nodeType": "YulIf",
															"src": "6345:81:5"
														},
														{
															"body": {
																"nativeSrc": "6478:42:5",
																"nodeType": "YulBlock",
																"src": "6478:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6492:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6492:16:5"
																			},
																			"nativeSrc": "6492:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6492:18:5"
																		},
																		"nativeSrc": "6492:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6492:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6442:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "6442:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6465:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6465:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6473:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6473:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6462:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "6462:2:5"
																		},
																		"nativeSrc": "6462:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6462:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6439:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6439:2:5"
																},
																"nativeSrc": "6439:38:5",
																"nodeType": "YulFunctionCall",
																"src": "6439:38:5"
															},
															"nativeSrc": "6436:84:5",
															"nodeType": "YulIf",
															"src": "6436:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6206:320:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6241:4:5",
														"nodeType": "YulTypedName",
														"src": "6241:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6250:6:5",
														"nodeType": "YulTypedName",
														"src": "6250:6:5",
														"type": ""
													}
												],
												"src": "6206:320:5"
											},
											{
												"body": {
													"nativeSrc": "6686:288:5",
													"nodeType": "YulBlock",
													"src": "6686:288:5",
													"statements": [
														{
															"nativeSrc": "6696:26:5",
															"nodeType": "YulAssignment",
															"src": "6696:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6708:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6708:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6719:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6719:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6704:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6704:3:5"
																},
																"nativeSrc": "6704:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6704:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6696:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6696:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6776:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6776:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6789:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6789:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6800:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6800:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6785:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6785:3:5"
																		},
																		"nativeSrc": "6785:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6785:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6732:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6732:43:5"
																},
																"nativeSrc": "6732:71:5",
																"nodeType": "YulFunctionCall",
																"src": "6732:71:5"
															},
															"nativeSrc": "6732:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "6732:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6857:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6857:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6870:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6870:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6881:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6881:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6866:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6866:3:5"
																		},
																		"nativeSrc": "6866:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6866:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6813:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6813:43:5"
																},
																"nativeSrc": "6813:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6813:72:5"
															},
															"nativeSrc": "6813:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6813:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6939:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6939:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6952:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6952:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6963:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6963:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6948:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6948:3:5"
																		},
																		"nativeSrc": "6948:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6948:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6895:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6895:43:5"
																},
																"nativeSrc": "6895:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6895:72:5"
															},
															"nativeSrc": "6895:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6895:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6532:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6642:9:5",
														"nodeType": "YulTypedName",
														"src": "6642:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6654:6:5",
														"nodeType": "YulTypedName",
														"src": "6654:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6662:6:5",
														"nodeType": "YulTypedName",
														"src": "6662:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6670:6:5",
														"nodeType": "YulTypedName",
														"src": "6670:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6681:4:5",
														"nodeType": "YulTypedName",
														"src": "6681:4:5",
														"type": ""
													}
												],
												"src": "6532:442:5"
											},
											{
												"body": {
													"nativeSrc": "7008:152:5",
													"nodeType": "YulBlock",
													"src": "7008:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7025:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7025:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7028:77:5",
																		"nodeType": "YulLiteral",
																		"src": "7028:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7018:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7018:6:5"
																},
																"nativeSrc": "7018:88:5",
																"nodeType": "YulFunctionCall",
																"src": "7018:88:5"
															},
															"nativeSrc": "7018:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "7018:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7122:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7122:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7125:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7125:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7115:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7115:6:5"
																},
																"nativeSrc": "7115:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7115:15:5"
															},
															"nativeSrc": "7115:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "7115:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7146:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7146:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7149:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7149:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7139:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7139:6:5"
																},
																"nativeSrc": "7139:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7139:15:5"
															},
															"nativeSrc": "7139:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "7139:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6980:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "6980:180:5"
											},
											{
												"body": {
													"nativeSrc": "7210:147:5",
													"nodeType": "YulBlock",
													"src": "7210:147:5",
													"statements": [
														{
															"nativeSrc": "7220:25:5",
															"nodeType": "YulAssignment",
															"src": "7220:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7243:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7243:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7225:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7225:17:5"
																},
																"nativeSrc": "7225:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7225:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7220:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7220:1:5"
																}
															]
														},
														{
															"nativeSrc": "7254:25:5",
															"nodeType": "YulAssignment",
															"src": "7254:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7277:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7277:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7259:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7259:17:5"
																},
																"nativeSrc": "7259:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7259:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7254:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7254:1:5"
																}
															]
														},
														{
															"nativeSrc": "7288:16:5",
															"nodeType": "YulAssignment",
															"src": "7288:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7299:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7299:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7302:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7302:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7295:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7295:3:5"
																},
																"nativeSrc": "7295:9:5",
																"nodeType": "YulFunctionCall",
																"src": "7295:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7288:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7288:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7328:22:5",
																"nodeType": "YulBlock",
																"src": "7328:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7330:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "7330:16:5"
																			},
																			"nativeSrc": "7330:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7330:18:5"
																		},
																		"nativeSrc": "7330:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7330:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7320:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7320:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7323:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7323:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7317:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "7317:2:5"
																},
																"nativeSrc": "7317:10:5",
																"nodeType": "YulFunctionCall",
																"src": "7317:10:5"
															},
															"nativeSrc": "7314:36:5",
															"nodeType": "YulIf",
															"src": "7314:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7166:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7197:1:5",
														"nodeType": "YulTypedName",
														"src": "7197:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7200:1:5",
														"nodeType": "YulTypedName",
														"src": "7200:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7206:3:5",
														"nodeType": "YulTypedName",
														"src": "7206:3:5",
														"type": ""
													}
												],
												"src": "7166:191:5"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a7575f3560e01c806340c10f191161006f57806340c10f191461016557806370a08231146101815780638da5cb5b146101b157806395d89b41146101cf578063a9059cbb146101ed578063dd62ed3e1461021d576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b361024d565b6040516100c09190610bde565b60405180910390f35b6100e360048036038101906100de9190610c8f565b6102dd565b6040516100f09190610ce7565b60405180910390f35b6101016102f8565b60405161010e9190610d0f565b60405180910390f35b610131600480360381019061012c9190610d28565b610301565b60405161013e9190610ce7565b60405180910390f35b61014f610328565b60405161015c9190610d93565b60405180910390f35b61017f600480360381019061017a9190610c8f565b610330565b005b61019b60048036038101906101969190610dac565b610346565b6040516101a89190610d0f565b60405180910390f35b6101b961038b565b6040516101c69190610de6565b60405180910390f35b6101d76103b3565b6040516101e49190610bde565b60405180910390f35b61020760048036038101906102029190610c8f565b610443565b6040516102149190610ce7565b60405180910390f35b61023760048036038101906102329190610dff565b61045e565b6040516102449190610d0f565b60405180910390f35b60606003805461025c90610e6a565b80601f016020809104026020016040519081016040528092919081815260200182805461028890610e6a565b80156102d35780601f106102aa576101008083540402835291602001916102d3565b820191905f5260205f20905b8154815290600101906020018083116102b657829003601f168201915b5050505050905090565b5f803390506102ed8185856104e0565b600191505092915050565b5f600254905090565b5f803390506103118582856104f2565b61031c858585610584565b60019150509392505050565b5f6012905090565b610338610674565b61034282826106ed565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546103c290610e6a565b80601f01602080910402602001604051908101604052809291908181526020018280546103ee90610e6a565b80156104395780601f1061041057610100808354040283529160200191610439565b820191905f5260205f20905b81548152906001019060200180831161041c57829003601f168201915b5050505050905090565b5f80339050610453818585610584565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6104ed838383600161076c565b505050565b5f6104fd848461045e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461057e578181101561056f578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161056693929190610e9a565b60405180910390fd5b61057d84848484035f61076c565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105f4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105eb9190610de6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610664575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161065b9190610de6565b60405180910390fd5b61066f83838361093b565b505050565b3373ffffffffffffffffffffffffffffffffffffffff1661069361038b565b73ffffffffffffffffffffffffffffffffffffffff16146106eb57336040517f32b2baa30000000000000000000000000000000000000000000000000000000081526004016106e29190610de6565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361075d575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107549190610de6565b60405180910390fd5b6107685f838361093b565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107dc575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107d39190610de6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084c575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108439190610de6565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610935578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161092c9190610d0f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361098b578060025f82825461097f9190610efc565b92505081905550610a59565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610a14578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a0b93929190610e9a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aa0578060025f8282540392505081905550610aea565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b479190610d0f565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610b8b578082015181840152602081019050610b70565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610bb082610b54565b610bba8185610b5e565b9350610bca818560208601610b6e565b610bd381610b96565b840191505092915050565b5f6020820190508181035f830152610bf68184610ba6565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c2b82610c02565b9050919050565b610c3b81610c21565b8114610c45575f80fd5b50565b5f81359050610c5681610c32565b92915050565b5f819050919050565b610c6e81610c5c565b8114610c78575f80fd5b50565b5f81359050610c8981610c65565b92915050565b5f8060408385031215610ca557610ca4610bfe565b5b5f610cb285828601610c48565b9250506020610cc385828601610c7b565b9150509250929050565b5f8115159050919050565b610ce181610ccd565b82525050565b5f602082019050610cfa5f830184610cd8565b92915050565b610d0981610c5c565b82525050565b5f602082019050610d225f830184610d00565b92915050565b5f805f60608486031215610d3f57610d3e610bfe565b5b5f610d4c86828701610c48565b9350506020610d5d86828701610c48565b9250506040610d6e86828701610c7b565b9150509250925092565b5f60ff82169050919050565b610d8d81610d78565b82525050565b5f602082019050610da65f830184610d84565b92915050565b5f60208284031215610dc157610dc0610bfe565b5b5f610dce84828501610c48565b91505092915050565b610de081610c21565b82525050565b5f602082019050610df95f830184610dd7565b92915050565b5f8060408385031215610e1557610e14610bfe565b5b5f610e2285828601610c48565b9250506020610e3385828601610c48565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e8157607f821691505b602082108103610e9457610e93610e3d565b5b50919050565b5f606082019050610ead5f830186610dd7565b610eba6020830185610d00565b610ec76040830184610d00565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f0682610c5c565b9150610f1183610c5c565b9250828201905080821115610f2957610f28610ecf565b5b9291505056fea2646970667358221220b3689c412751bf982667f77617a8f527ac9e14273e859d10a84f897bf3bf3c0364736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x21D JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xDAC JUMP JUMPDEST PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25C SWAP1 PUSH2 0xE6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x288 SWAP1 PUSH2 0xE6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH2 0x2ED DUP2 DUP6 DUP6 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH2 0x311 DUP6 DUP3 DUP6 PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x31C DUP6 DUP6 DUP6 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x674 JUMP JUMPDEST PUSH2 0x342 DUP3 DUP3 PUSH2 0x6ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3C2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3EE SWAP1 PUSH2 0xE6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x439 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x410 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x439 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x41C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH2 0x453 DUP2 DUP6 DUP6 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4ED DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x76C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4FD DUP5 DUP5 PUSH2 0x45E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x57E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x56F JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x566 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57D DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x76C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5F4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x664 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65B SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66F DUP4 DUP4 DUP4 PUSH2 0x93B JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x693 PUSH2 0x38B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6EB JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x32B2BAA300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x75D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x754 SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x768 PUSH0 DUP4 DUP4 PUSH2 0x93B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7DC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D3 SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x843 SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x935 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x92C SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x98B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x97F SWAP2 SWAP1 PUSH2 0xEFC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA59 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA14 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAA0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAEA JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB47 SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB8B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB70 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBB0 DUP3 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0xBBA DUP2 DUP6 PUSH2 0xB5E JUMP JUMPDEST SWAP4 POP PUSH2 0xBCA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB6E JUMP JUMPDEST PUSH2 0xBD3 DUP2 PUSH2 0xB96 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBF6 DUP2 DUP5 PUSH2 0xBA6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC2B DUP3 PUSH2 0xC02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3B DUP2 PUSH2 0xC21 JUMP JUMPDEST DUP2 EQ PUSH2 0xC45 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC56 DUP2 PUSH2 0xC32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6E DUP2 PUSH2 0xC5C JUMP JUMPDEST DUP2 EQ PUSH2 0xC78 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC89 DUP2 PUSH2 0xC65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCA5 JUMPI PUSH2 0xCA4 PUSH2 0xBFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCB2 DUP6 DUP3 DUP7 ADD PUSH2 0xC48 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCC3 DUP6 DUP3 DUP7 ADD PUSH2 0xC7B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE1 DUP2 PUSH2 0xCCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCFA PUSH0 DUP4 ADD DUP5 PUSH2 0xCD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD09 DUP2 PUSH2 0xC5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD22 PUSH0 DUP4 ADD DUP5 PUSH2 0xD00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD3F JUMPI PUSH2 0xD3E PUSH2 0xBFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD4C DUP7 DUP3 DUP8 ADD PUSH2 0xC48 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD5D DUP7 DUP3 DUP8 ADD PUSH2 0xC48 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD6E DUP7 DUP3 DUP8 ADD PUSH2 0xC7B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8D DUP2 PUSH2 0xD78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA6 PUSH0 DUP4 ADD DUP5 PUSH2 0xD84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDC1 JUMPI PUSH2 0xDC0 PUSH2 0xBFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDCE DUP5 DUP3 DUP6 ADD PUSH2 0xC48 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDE0 DUP2 PUSH2 0xC21 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDF9 PUSH0 DUP4 ADD DUP5 PUSH2 0xDD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE15 JUMPI PUSH2 0xE14 PUSH2 0xBFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE22 DUP6 DUP3 DUP7 ADD PUSH2 0xC48 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE33 DUP6 DUP3 DUP7 ADD PUSH2 0xC48 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE81 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE94 JUMPI PUSH2 0xE93 PUSH2 0xE3D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEAD PUSH0 DUP4 ADD DUP7 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0xEBA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD00 JUMP JUMPDEST PUSH2 0xEC7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD00 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF06 DUP3 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP PUSH2 0xF11 DUP4 PUSH2 0xC5C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF29 JUMPI PUSH2 0xF28 PUSH2 0xECF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 PUSH9 0x9C412751BF982667F7 PUSH23 0x17A8F527AC9E14273E859D10A84F897BF3BF3C0364736F PUSH13 0x63430008160033000000000000 ",
							"sourceMap": "200:837:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2102:91:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4393:188;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3204:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5159:247;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3055:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;939:95:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3366:118:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;542:79:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2312:95:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3689:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3932:142;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2102:91;2147:13;2180:5;2173:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2102:91;:::o;4393:188::-;4466:4;4483:13;4499:10;4483:26;;4520:31;4529:5;4536:7;4545:5;4520:8;:31::i;:::-;4569:4;4562:11;;;4393:188;;;;:::o;3204:99::-;3256:7;3283:12;;3276:19;;3204:99;:::o;5159:247::-;5246:4;5263:15;5281:10;5263:28;;5302:37;5318:4;5324:7;5333:5;5302:15;:37::i;:::-;5350:26;5360:4;5366:2;5370:5;5350:9;:26::i;:::-;5394:4;5387:11;;;5159:247;;;;;:::o;3055:84::-;3104:5;3129:2;3122:9;;3055:84;:::o;939:95:3:-;898:13;:11;:13::i;:::-;1009:17:::1;1015:2;1019:6;1009:5;:17::i;:::-;939:95:::0;;:::o;3366:118:0:-;3431:7;3458:9;:18;3468:7;3458:18;;;;;;;;;;;;;;;;3451:25;;3366:118;;;:::o;542:79:3:-;580:7;607:6;;;;;;;;;;;600:13;;542:79;:::o;2312:95:0:-;2359:13;2392:7;2385:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2312:95;:::o;3689:180::-;3758:4;3775:13;3791:10;3775:26;;3812:27;3822:5;3829:2;3833:5;3812:9;:27::i;:::-;3857:4;3850:11;;;3689:180;;;;:::o;3932:142::-;4012:7;4039:11;:18;4051:5;4039:18;;;;;;;;;;;;;;;:27;4058:7;4039:27;;;;;;;;;;;;;;;;4032:34;;3932:142;;;;:::o;9216:130::-;9301:37;9310:5;9317:7;9326:5;9333:4;9301:8;:37::i;:::-;9216:130;;;:::o;10932:487::-;11032:24;11059:25;11069:5;11076:7;11059:9;:25::i;:::-;11032:52;;11119:17;11099:16;:37;11095:317;;11176:5;11157:16;:24;11153:132;;;11236:7;11245:16;11263:5;11209:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11153:132;11328:57;11337:5;11344:7;11372:5;11353:16;:24;11379:5;11328:8;:57::i;:::-;11095:317;11021:398;10932:487;;;:::o;5791:308::-;5891:1;5875:18;;:4;:18;;;5871:88;;5944:1;5917:30;;;;;;;;;;;:::i;:::-;;;;;;;;5871:88;5987:1;5973:16;;:2;:16;;;5969:88;;6042:1;6013:32;;;;;;;;;;;:::i;:::-;;;;;;;;5969:88;6067:24;6075:4;6081:2;6085:5;6067:7;:24::i;:::-;5791:308;;;:::o;699:155:3:-;770:10;759:21;;:7;:5;:7::i;:::-;:21;;;755:92;;824:10;804:31;;;;;;;;;;;:::i;:::-;;;;;;;;755:92;699:155::o;7911:213:0:-;8001:1;7982:21;;:7;:21;;;7978:93;;8056:1;8027:32;;;;;;;;;;;:::i;:::-;;;;;;;;7978:93;8081:35;8097:1;8101:7;8110:5;8081:7;:35::i;:::-;7911:213;;:::o;10197:443::-;10327:1;10310:19;;:5;:19;;;10306:91;;10382:1;10353:32;;;;;;;;;;;:::i;:::-;;;;;;;;10306:91;10430:1;10411:21;;:7;:21;;;10407:92;;10484:1;10456:31;;;;;;;;;;;:::i;:::-;;;;;;;;10407:92;10539:5;10509:11;:18;10521:5;10509:18;;;;;;;;;;;;;;;:27;10528:7;10509:27;;;;;;;;;;;;;;;:35;;;;10559:9;10555:78;;;10606:7;10590:31;;10599:5;10590:31;;;10615:5;10590:31;;;;;;:::i;:::-;;;;;;;;10555:78;10197:443;;;;:::o;6423:1135::-;6529:1;6513:18;;:4;:18;;;6509:552;;6667:5;6651:12;;:21;;;;;;;:::i;:::-;;;;;;;;6509:552;;;6705:19;6727:9;:15;6737:4;6727:15;;;;;;;;;;;;;;;;6705:37;;6775:5;6761:11;:19;6757:117;;;6833:4;6839:11;6852:5;6808:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6757:117;7029:5;7015:11;:19;6997:9;:15;7007:4;6997:15;;;;;;;;;;;;;;;:37;;;;6690:371;6509:552;7091:1;7077:16;;:2;:16;;;7073:435;;7259:5;7243:12;;:21;;;;;;;;;;;7073:435;;;7476:5;7459:9;:13;7469:2;7459:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;7073:435;7540:2;7525:25;;7534:4;7525:25;;;7544:5;7525:25;;;;;;:::i;:::-;;;;;;;;6423:1135;;;:::o;7:99:5:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:118::-;5275:24;5293:5;5275:24;:::i;:::-;5270:3;5263:37;5188:118;;:::o;5312:222::-;5405:4;5443:2;5432:9;5428:18;5420:26;;5456:71;5524:1;5513:9;5509:17;5500:6;5456:71;:::i;:::-;5312:222;;;;:::o;5540:474::-;5608:6;5616;5665:2;5653:9;5644:7;5640:23;5636:32;5633:119;;;5671:79;;:::i;:::-;5633:119;5791:1;5816:53;5861:7;5852:6;5841:9;5837:22;5816:53;:::i;:::-;5806:63;;5762:117;5918:2;5944:53;5989:7;5980:6;5969:9;5965:22;5944:53;:::i;:::-;5934:63;;5889:118;5540:474;;;;;:::o;6020:180::-;6068:77;6065:1;6058:88;6165:4;6162:1;6155:15;6189:4;6186:1;6179:15;6206:320;6250:6;6287:1;6281:4;6277:12;6267:22;;6334:1;6328:4;6324:12;6355:18;6345:81;;6411:4;6403:6;6399:17;6389:27;;6345:81;6473:2;6465:6;6462:14;6442:18;6439:38;6436:84;;6492:18;;:::i;:::-;6436:84;6257:269;6206:320;;;:::o;6532:442::-;6681:4;6719:2;6708:9;6704:18;6696:26;;6732:71;6800:1;6789:9;6785:17;6776:6;6732:71;:::i;:::-;6813:72;6881:2;6870:9;6866:18;6857:6;6813:72;:::i;:::-;6895;6963:2;6952:9;6948:18;6939:6;6895:72;:::i;:::-;6532:442;;;;;;:::o;6980:180::-;7028:77;7025:1;7018:88;7125:4;7122:1;7115:15;7149:4;7146:1;7139:15;7166:191;7206:3;7225:20;7243:1;7225:20;:::i;:::-;7220:25;;7259:20;7277:1;7259:20;:::i;:::-;7254:25;;7302:1;7299;7295:9;7288:16;;7323:3;7320:1;7317:10;7314:36;;;7330:18;;:::i;:::-;7314:36;7166:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "788200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "427",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2559",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_checkOwner()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 200,
									"end": 1037,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 200,
									"end": 1037,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 200,
									"end": 1037,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 320,
									"end": 534,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 320,
									"end": 534,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 320,
									"end": 534,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 320,
									"end": 534,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 320,
									"end": 534,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 320,
									"end": 534,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 320,
									"end": 534,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 320,
									"end": 534,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "PUSH",
									"source": 0,
									"value": "4D794669727374546F6B656E0000000000000000000000000000000000000000"
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "PUSH",
									"source": 0,
									"value": "4D46540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1991,
									"end": 1996,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1983,
									"end": 1988,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1983,
									"end": 1996,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1983,
									"end": 1996,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1983,
									"end": 1996,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1983,
									"end": 1996,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1983,
									"end": 1996,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1983,
									"end": 1996,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1983,
									"end": 1996,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1983,
									"end": 1996,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1983,
									"end": 1996,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1983,
									"end": 1996,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2024,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2007,
									"end": 2014,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2007,
									"end": 2024,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2007,
									"end": 2024,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2007,
									"end": 2024,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2007,
									"end": 2024,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2007,
									"end": 2024,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2007,
									"end": 2024,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2007,
									"end": 2024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2007,
									"end": 2024,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2007,
									"end": 2024,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2007,
									"end": 2024,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1916,
									"end": 2032,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 462,
									"end": 474,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 453,
									"end": 459,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 453,
									"end": 459,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 453,
									"end": 474,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 453,
									"end": 474,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 453,
									"end": 474,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 453,
									"end": 474,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 453,
									"end": 474,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 453,
									"end": 474,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 453,
									"end": 474,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 453,
									"end": 474,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 453,
									"end": 474,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 453,
									"end": 474,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 453,
									"end": 474,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 453,
									"end": 474,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 453,
									"end": 474,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 453,
									"end": 474,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 453,
									"end": 474,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 453,
									"end": 474,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 453,
									"end": 474,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 453,
									"end": 474,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 485,
									"end": 526,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 491,
									"end": 501,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 515,
									"end": 525,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 515,
									"end": 523,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 515,
									"end": 523,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 515,
									"end": 523,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 515,
									"end": 525,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 515,
									"end": 525,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 515,
									"end": 525,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 515,
									"end": 525,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 515,
									"end": 525,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 509,
									"end": 511,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 509,
									"end": 525,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 509,
									"end": 525,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 509,
									"end": 525,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 509,
									"end": 525,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 509,
									"end": 525,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 525,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 509,
									"end": 525,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 506,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 503,
									"end": 525,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 503,
									"end": 525,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 503,
									"end": 525,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 503,
									"end": 525,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 503,
									"end": 525,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 503,
									"end": 525,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 503,
									"end": 525,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 485,
									"end": 490,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 485,
									"end": 490,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 490,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 485,
									"end": 526,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 526,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 485,
									"end": 526,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 485,
									"end": 526,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 485,
									"end": 526,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 320,
									"end": 534,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 200,
									"end": 1037,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 200,
									"end": 1037,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3055,
									"end": 3139,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 3055,
									"end": 3139,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3104,
									"end": 3109,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3129,
									"end": 3131,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 3122,
									"end": 3131,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3122,
									"end": 3131,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3055,
									"end": 3139,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3055,
									"end": 3139,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7911,
									"end": 8124,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 7911,
									"end": 8124,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8001,
									"end": 8002,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7982,
									"end": 8003,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7982,
									"end": 8003,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7982,
									"end": 7989,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7982,
									"end": 8003,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7982,
									"end": 8003,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7982,
									"end": 8003,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7978,
									"end": 8071,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 7978,
									"end": 8071,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8056,
									"end": 8057,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 8027,
									"end": 8059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8027,
									"end": 8059,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7978,
									"end": 8071,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 7978,
									"end": 8071,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8081,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 8097,
									"end": 8098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8101,
									"end": 8108,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8110,
									"end": 8115,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8081,
									"end": 8088,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 8081,
									"end": 8088,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8081,
									"end": 8088,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 8081,
									"end": 8116,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8081,
									"end": 8116,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 8081,
									"end": 8116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8081,
									"end": 8116,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 8081,
									"end": 8116,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7911,
									"end": 8124,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7911,
									"end": 8124,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7911,
									"end": 8124,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6423,
									"end": 7558,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6423,
									"end": 7558,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6529,
									"end": 6530,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6513,
									"end": 6531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6513,
									"end": 6531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6513,
									"end": 6517,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6513,
									"end": 6531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6513,
									"end": 6531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6513,
									"end": 6531,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6509,
									"end": 7061,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 6509,
									"end": 7061,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6667,
									"end": 6672,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6651,
									"end": 6663,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6651,
									"end": 6663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6651,
									"end": 6672,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6651,
									"end": 6672,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6651,
									"end": 6672,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6651,
									"end": 6672,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6651,
									"end": 6672,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6651,
									"end": 6672,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6651,
									"end": 6672,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6651,
									"end": 6672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6651,
									"end": 6672,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6651,
									"end": 6672,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6651,
									"end": 6672,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6651,
									"end": 6672,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6651,
									"end": 6672,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6651,
									"end": 6672,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6651,
									"end": 6672,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6651,
									"end": 6672,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6651,
									"end": 6672,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6509,
									"end": 7061,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 6509,
									"end": 7061,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6509,
									"end": 7061,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 6509,
									"end": 7061,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6705,
									"end": 6724,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6727,
									"end": 6736,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6727,
									"end": 6742,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6737,
									"end": 6741,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6727,
									"end": 6742,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6727,
									"end": 6742,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6727,
									"end": 6742,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6727,
									"end": 6742,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6727,
									"end": 6742,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6727,
									"end": 6742,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6727,
									"end": 6742,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6727,
									"end": 6742,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6727,
									"end": 6742,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6727,
									"end": 6742,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6727,
									"end": 6742,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6727,
									"end": 6742,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6727,
									"end": 6742,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6727,
									"end": 6742,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6727,
									"end": 6742,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6727,
									"end": 6742,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6705,
									"end": 6742,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6705,
									"end": 6742,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6775,
									"end": 6780,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6761,
									"end": 6772,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6761,
									"end": 6780,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 6757,
									"end": 6874,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6757,
									"end": 6874,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 6757,
									"end": 6874,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6833,
									"end": 6837,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6839,
									"end": 6850,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 6857,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 6808,
									"end": 6858,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6808,
									"end": 6858,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6757,
									"end": 6874,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 6757,
									"end": 6874,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7029,
									"end": 7034,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7015,
									"end": 7026,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7015,
									"end": 7034,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6997,
									"end": 7006,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6997,
									"end": 7012,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7007,
									"end": 7011,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6997,
									"end": 7012,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6997,
									"end": 7012,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6997,
									"end": 7012,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6997,
									"end": 7012,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6997,
									"end": 7012,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6997,
									"end": 7012,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6997,
									"end": 7012,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6997,
									"end": 7012,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6997,
									"end": 7012,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6997,
									"end": 7012,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6997,
									"end": 7012,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6997,
									"end": 7012,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6997,
									"end": 7012,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6997,
									"end": 7012,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6997,
									"end": 7012,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6997,
									"end": 7034,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6997,
									"end": 7034,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6997,
									"end": 7034,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6997,
									"end": 7034,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6690,
									"end": 7061,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6509,
									"end": 7061,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 6509,
									"end": 7061,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7091,
									"end": 7092,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7077,
									"end": 7093,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7077,
									"end": 7093,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7077,
									"end": 7079,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7077,
									"end": 7093,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7077,
									"end": 7093,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7077,
									"end": 7093,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7073,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 7073,
									"end": 7508,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7259,
									"end": 7264,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7243,
									"end": 7255,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7243,
									"end": 7255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7243,
									"end": 7264,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7243,
									"end": 7264,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7243,
									"end": 7264,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7243,
									"end": 7264,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7243,
									"end": 7264,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 7243,
									"end": 7264,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7243,
									"end": 7264,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7243,
									"end": 7264,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7243,
									"end": 7264,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7243,
									"end": 7264,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7243,
									"end": 7264,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7073,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 7073,
									"end": 7508,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7073,
									"end": 7508,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 7073,
									"end": 7508,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7476,
									"end": 7481,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7468,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7459,
									"end": 7472,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7469,
									"end": 7471,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7472,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7459,
									"end": 7472,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7472,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7459,
									"end": 7472,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7472,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7472,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7472,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7459,
									"end": 7472,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7472,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7472,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7472,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7472,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7459,
									"end": 7472,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7472,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7459,
									"end": 7472,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7472,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7459,
									"end": 7481,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7481,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7481,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7481,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7481,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7481,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7481,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7481,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7481,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7481,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7459,
									"end": 7481,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7073,
									"end": 7508,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 7073,
									"end": 7508,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7540,
									"end": 7542,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7534,
									"end": 7538,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7544,
									"end": 7549,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 7525,
									"end": 7550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7525,
									"end": 7550,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 6423,
									"end": 7558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6423,
									"end": 7558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6423,
									"end": 7558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6423,
									"end": 7558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "81"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "81"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "82"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "82"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "86"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "87"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 5,
									"value": "87"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 5,
									"value": "86"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "93"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 5,
									"value": "93"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "94"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "95"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 5,
									"value": "95"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 5,
									"value": "94"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "101"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 5,
									"value": "101"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "105"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "106"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "107"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 5,
									"value": "107"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 5,
									"value": "106"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 5,
									"value": "105"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "110"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 5,
									"value": "110"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "111"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "112"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 5,
									"value": "112"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 5,
									"value": "111"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "115"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 5,
									"value": "115"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "116"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 5,
									"value": "116"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 5,
									"value": "118"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "120"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "121"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 5,
									"value": "121"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "118"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 5,
									"value": "120"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "123"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "124"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 5,
									"value": "124"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "125"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 5,
									"value": "125"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "126"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 5,
									"value": "126"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "127"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "128"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 5,
									"value": "128"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 5,
									"value": "127"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 5,
									"value": "123"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "131"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 5,
									"value": "131"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "133"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 5,
									"value": "133"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "135"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 5,
									"value": "135"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "136"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "137"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 5,
									"value": "137"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 5,
									"value": "136"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "138"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 5,
									"value": "138"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "139"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 5,
									"value": "139"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "141"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "142"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 5,
									"value": "142"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "143"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 5,
									"value": "143"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "140"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 5,
									"value": "141"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "144"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 5,
									"value": "144"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 5,
									"value": "145"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "147"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "145"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 5,
									"value": "147"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "148"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "149"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 5,
									"value": "149"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 5,
									"value": "148"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 5,
									"value": "140"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6429,
									"end": 6609,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 6429,
									"end": 6609,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6477,
									"end": 6554,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6474,
									"end": 6475,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6467,
									"end": 6555,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6574,
									"end": 6578,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 6571,
									"end": 6572,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 6564,
									"end": 6579,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6598,
									"end": 6602,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 6595,
									"end": 6596,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6588,
									"end": 6603,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 6615,
									"end": 6717,
									"name": "tag",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 6615,
									"end": 6717,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6657,
									"end": 6665,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6704,
									"end": 6709,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6701,
									"end": 6702,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 6697,
									"end": 6710,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 6676,
									"end": 6710,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6676,
									"end": 6710,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6615,
									"end": 6717,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6615,
									"end": 6717,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6615,
									"end": 6717,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6615,
									"end": 6717,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "tag",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6784,
									"end": 6789,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6795,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6815,
									"end": 6821,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6806,
									"end": 6821,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6806,
									"end": 6821,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6839,
									"end": 6844,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6830,
									"end": 6844,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6830,
									"end": 6844,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "tag",
									"source": 5,
									"value": "153"
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6874,
									"end": 6875,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 6864,
									"end": 6872,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 6861,
									"end": 6876,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "155"
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6969,
									"end": 6973,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6964,
									"end": 6967,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 6960,
									"end": 6974,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 6954,
									"end": 6958,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6951,
									"end": 6975,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 6948,
									"end": 6998,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 6948,
									"end": 6998,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "156"
								},
								{
									"begin": 6948,
									"end": 6998,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6978,
									"end": 6996,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "157"
								},
								{
									"begin": 6978,
									"end": 6996,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 6978,
									"end": 6996,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6978,
									"end": 6996,
									"name": "tag",
									"source": 5,
									"value": "157"
								},
								{
									"begin": 6978,
									"end": 6996,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6948,
									"end": 6998,
									"name": "tag",
									"source": 5,
									"value": "156"
								},
								{
									"begin": 6948,
									"end": 6998,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7028,
									"end": 7029,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 7018,
									"end": 7026,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 7014,
									"end": 7030,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7011,
									"end": 7462,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 7011,
									"end": 7462,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "158"
								},
								{
									"begin": 7011,
									"end": 7462,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 7443,
									"end": 7447,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7436,
									"end": 7441,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7432,
									"end": 7448,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 7423,
									"end": 7448,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7423,
									"end": 7448,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7011,
									"end": 7462,
									"name": "tag",
									"source": 5,
									"value": "158"
								},
								{
									"begin": 7011,
									"end": 7462,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7487,
									"end": 7491,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7483,
									"end": 7498,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 7475,
									"end": 7498,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7475,
									"end": 7498,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7523,
									"end": 7555,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "159"
								},
								{
									"begin": 7546,
									"end": 7554,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 7523,
									"end": 7555,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 7523,
									"end": 7555,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7523,
									"end": 7555,
									"name": "tag",
									"source": 5,
									"value": "159"
								},
								{
									"begin": 7523,
									"end": 7555,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7511,
									"end": 7555,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 7511,
									"end": 7555,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "153"
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "tag",
									"source": 5,
									"value": "155"
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6723,
									"end": 7571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "tag",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7631,
									"end": 7636,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7822,
									"end": 7830,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7812,
									"end": 7852,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "161"
								},
								{
									"begin": 7812,
									"end": 7852,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 7843,
									"end": 7844,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 7834,
									"end": 7844,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7834,
									"end": 7844,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7845,
									"end": 7850,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "160"
								},
								{
									"begin": 7845,
									"end": 7850,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7812,
									"end": 7852,
									"name": "tag",
									"source": 5,
									"value": "161"
								},
								{
									"begin": 7812,
									"end": 7852,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7871,
									"end": 7875,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7861,
									"end": 7897,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "162"
								},
								{
									"begin": 7861,
									"end": 7897,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 7888,
									"end": 7889,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7879,
									"end": 7889,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7879,
									"end": 7889,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7890,
									"end": 7895,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "160"
								},
								{
									"begin": 7890,
									"end": 7895,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7861,
									"end": 7897,
									"name": "tag",
									"source": 5,
									"value": "162"
								},
								{
									"begin": 7861,
									"end": 7897,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7957,
									"end": 7961,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8005,
									"end": 8006,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 8000,
									"end": 8027,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8000,
									"end": 8027,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 8000,
									"end": 8027,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "164"
								},
								{
									"begin": 8000,
									"end": 8027,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 8041,
									"end": 8042,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 8036,
									"end": 8227,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8036,
									"end": 8227,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 8036,
									"end": 8227,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "165"
								},
								{
									"begin": 8036,
									"end": 8227,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 7950,
									"end": 8227,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "163"
								},
								{
									"begin": 7950,
									"end": 8227,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8000,
									"end": 8027,
									"name": "tag",
									"source": 5,
									"value": "164"
								},
								{
									"begin": 8000,
									"end": 8027,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8018,
									"end": 8019,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 8009,
									"end": 8019,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 8009,
									"end": 8019,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8020,
									"end": 8025,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8020,
									"end": 8025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "160"
								},
								{
									"begin": 8020,
									"end": 8025,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8036,
									"end": 8227,
									"name": "tag",
									"source": 5,
									"value": "165"
								},
								{
									"begin": 8036,
									"end": 8227,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8081,
									"end": 8084,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 8071,
									"end": 8079,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 8068,
									"end": 8085,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 8065,
									"end": 8108,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 8065,
									"end": 8108,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "166"
								},
								{
									"begin": 8065,
									"end": 8108,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 8088,
									"end": 8106,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "167"
								},
								{
									"begin": 8088,
									"end": 8106,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 8088,
									"end": 8106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8088,
									"end": 8106,
									"name": "tag",
									"source": 5,
									"value": "167"
								},
								{
									"begin": 8088,
									"end": 8106,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8065,
									"end": 8108,
									"name": "tag",
									"source": 5,
									"value": "166"
								},
								{
									"begin": 8065,
									"end": 8108,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8137,
									"end": 8145,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 8134,
									"end": 8135,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 8130,
									"end": 8146,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 8121,
									"end": 8146,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 8121,
									"end": 8146,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8172,
									"end": 8175,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 8165,
									"end": 8170,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8162,
									"end": 8176,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 8159,
									"end": 8199,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 8159,
									"end": 8199,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "168"
								},
								{
									"begin": 8159,
									"end": 8199,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 8179,
									"end": 8197,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "169"
								},
								{
									"begin": 8179,
									"end": 8197,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 8179,
									"end": 8197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8179,
									"end": 8197,
									"name": "tag",
									"source": 5,
									"value": "169"
								},
								{
									"begin": 8179,
									"end": 8197,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8159,
									"end": 8199,
									"name": "tag",
									"source": 5,
									"value": "168"
								},
								{
									"begin": 8159,
									"end": 8199,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8212,
									"end": 8217,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8212,
									"end": 8217,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "160"
								},
								{
									"begin": 8212,
									"end": 8217,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7950,
									"end": 8227,
									"name": "tag",
									"source": 5,
									"value": "163"
								},
								{
									"begin": 7950,
									"end": 8227,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7950,
									"end": 8227,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8336,
									"end": 8338,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 8326,
									"end": 8334,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 8323,
									"end": 8339,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 8317,
									"end": 8320,
									"name": "PUSH",
									"source": 5,
									"value": "133"
								},
								{
									"begin": 8311,
									"end": 8315,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 8304,
									"end": 8340,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 8286,
									"end": 8288,
									"name": "PUSH",
									"source": 5,
									"value": "4E"
								},
								{
									"begin": 8276,
									"end": 8284,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 8273,
									"end": 8289,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 8268,
									"end": 8270,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 8262,
									"end": 8266,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 8259,
									"end": 8271,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 8255,
									"end": 8290,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 8239,
									"end": 8350,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 8236,
									"end": 8482,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 8236,
									"end": 8482,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "170"
								},
								{
									"begin": 8236,
									"end": 8482,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 8392,
									"end": 8400,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8386,
									"end": 8390,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8382,
									"end": 8401,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 8373,
									"end": 8401,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8373,
									"end": 8401,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8427,
									"end": 8430,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 8420,
									"end": 8425,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8417,
									"end": 8431,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 8414,
									"end": 8454,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 8414,
									"end": 8454,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "171"
								},
								{
									"begin": 8414,
									"end": 8454,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 8434,
									"end": 8452,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "172"
								},
								{
									"begin": 8434,
									"end": 8452,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 8434,
									"end": 8452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8434,
									"end": 8452,
									"name": "tag",
									"source": 5,
									"value": "172"
								},
								{
									"begin": 8434,
									"end": 8452,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8414,
									"end": 8454,
									"name": "tag",
									"source": 5,
									"value": "171"
								},
								{
									"begin": 8414,
									"end": 8454,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8467,
									"end": 8472,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "160"
								},
								{
									"begin": 8467,
									"end": 8472,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8236,
									"end": 8482,
									"name": "tag",
									"source": 5,
									"value": "170"
								},
								{
									"begin": 8236,
									"end": 8482,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8507,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "173"
								},
								{
									"begin": 8545,
									"end": 8548,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 8535,
									"end": 8543,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 8529,
									"end": 8533,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 8526,
									"end": 8527,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 8507,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 8507,
									"end": 8549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8507,
									"end": 8549,
									"name": "tag",
									"source": 5,
									"value": "173"
								},
								{
									"begin": 8507,
									"end": 8549,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8492,
									"end": 8549,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 8492,
									"end": 8549,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8492,
									"end": 8549,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8492,
									"end": 8549,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8581,
									"end": 8585,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8576,
									"end": 8579,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 8572,
									"end": 8586,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 8565,
									"end": 8570,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8562,
									"end": 8587,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 8559,
									"end": 8610,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 8559,
									"end": 8610,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "174"
								},
								{
									"begin": 8559,
									"end": 8610,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 8590,
									"end": 8608,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "175"
								},
								{
									"begin": 8590,
									"end": 8608,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 8590,
									"end": 8608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8590,
									"end": 8608,
									"name": "tag",
									"source": 5,
									"value": "175"
								},
								{
									"begin": 8590,
									"end": 8608,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8559,
									"end": 8610,
									"name": "tag",
									"source": 5,
									"value": "174"
								},
								{
									"begin": 8559,
									"end": 8610,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8639,
									"end": 8643,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8632,
									"end": 8637,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8628,
									"end": 8644,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 8619,
									"end": 8644,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8619,
									"end": 8644,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "tag",
									"source": 5,
									"value": "160"
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7577,
									"end": 8650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8656,
									"end": 8742,
									"name": "tag",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 8656,
									"end": 8742,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8691,
									"end": 8698,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8731,
									"end": 8735,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 8724,
									"end": 8729,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8720,
									"end": 8736,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 8709,
									"end": 8736,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8709,
									"end": 8736,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8656,
									"end": 8742,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 8656,
									"end": 8742,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8656,
									"end": 8742,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8656,
									"end": 8742,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8748,
									"end": 9029,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 8748,
									"end": 9029,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8806,
									"end": 8811,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8830,
									"end": 8853,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "178"
								},
								{
									"begin": 8848,
									"end": 8852,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8830,
									"end": 8853,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 8830,
									"end": 8853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8830,
									"end": 8853,
									"name": "tag",
									"source": 5,
									"value": "178"
								},
								{
									"begin": 8830,
									"end": 8853,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8822,
									"end": 8853,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 8822,
									"end": 8853,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8874,
									"end": 8899,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "179"
								},
								{
									"begin": 8890,
									"end": 8898,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 8874,
									"end": 8899,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 8874,
									"end": 8899,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8874,
									"end": 8899,
									"name": "tag",
									"source": 5,
									"value": "179"
								},
								{
									"begin": 8874,
									"end": 8899,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8862,
									"end": 8899,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 8862,
									"end": 8899,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8918,
									"end": 9022,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "180"
								},
								{
									"begin": 8955,
									"end": 9021,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8945,
									"end": 8953,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 8939,
									"end": 8943,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 8918,
									"end": 9022,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 8918,
									"end": 9022,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8918,
									"end": 9022,
									"name": "tag",
									"source": 5,
									"value": "180"
								},
								{
									"begin": 8918,
									"end": 9022,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8909,
									"end": 9022,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8909,
									"end": 9022,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8748,
									"end": 9029,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 8748,
									"end": 9029,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 8748,
									"end": 9029,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8748,
									"end": 9029,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8748,
									"end": 9029,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9035,
									"end": 9445,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 9035,
									"end": 9445,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9075,
									"end": 9082,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 9098,
									"end": 9118,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "182"
								},
								{
									"begin": 9116,
									"end": 9117,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9098,
									"end": 9118,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 9098,
									"end": 9118,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9098,
									"end": 9118,
									"name": "tag",
									"source": 5,
									"value": "182"
								},
								{
									"begin": 9098,
									"end": 9118,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9093,
									"end": 9118,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 9093,
									"end": 9118,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9132,
									"end": 9152,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "183"
								},
								{
									"begin": 9150,
									"end": 9151,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 9132,
									"end": 9152,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 9132,
									"end": 9152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9132,
									"end": 9152,
									"name": "tag",
									"source": 5,
									"value": "183"
								},
								{
									"begin": 9132,
									"end": 9152,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9127,
									"end": 9152,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 9127,
									"end": 9152,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9187,
									"end": 9188,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9184,
									"end": 9185,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9180,
									"end": 9189,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 9209,
									"end": 9239,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "184"
								},
								{
									"begin": 9227,
									"end": 9238,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 9209,
									"end": 9239,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 9209,
									"end": 9239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9209,
									"end": 9239,
									"name": "tag",
									"source": 5,
									"value": "184"
								},
								{
									"begin": 9209,
									"end": 9239,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9198,
									"end": 9239,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 9198,
									"end": 9239,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9388,
									"end": 9389,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9379,
									"end": 9386,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9375,
									"end": 9390,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 9372,
									"end": 9373,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 9369,
									"end": 9391,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 9349,
									"end": 9350,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 9342,
									"end": 9351,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 9322,
									"end": 9405,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 9299,
									"end": 9438,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "185"
								},
								{
									"begin": 9299,
									"end": 9438,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 9418,
									"end": 9436,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "186"
								},
								{
									"begin": 9418,
									"end": 9436,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 9418,
									"end": 9436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9418,
									"end": 9436,
									"name": "tag",
									"source": 5,
									"value": "186"
								},
								{
									"begin": 9418,
									"end": 9436,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9299,
									"end": 9438,
									"name": "tag",
									"source": 5,
									"value": "185"
								},
								{
									"begin": 9299,
									"end": 9438,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9083,
									"end": 9445,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9035,
									"end": 9445,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 9035,
									"end": 9445,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 9035,
									"end": 9445,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9035,
									"end": 9445,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9035,
									"end": 9445,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "tag",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "188"
								},
								{
									"begin": 9556,
									"end": 9561,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 9538,
									"end": 9562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "tag",
									"source": 5,
									"value": "188"
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9533,
									"end": 9536,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9526,
									"end": 9563,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9451,
									"end": 9569,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9668,
									"end": 9672,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 9706,
									"end": 9708,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 9695,
									"end": 9704,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9691,
									"end": 9709,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9683,
									"end": 9709,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 9683,
									"end": 9709,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "190"
								},
								{
									"begin": 9787,
									"end": 9788,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 9776,
									"end": 9785,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 9772,
									"end": 9789,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9763,
									"end": 9769,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 9719,
									"end": 9790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "tag",
									"source": 5,
									"value": "190"
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9575,
									"end": 9797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9843,
									"end": 9846,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "192"
								},
								{
									"begin": 9880,
									"end": 9881,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 9862,
									"end": 9882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "tag",
									"source": 5,
									"value": "192"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "193"
								},
								{
									"begin": 9914,
									"end": 9915,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 9896,
									"end": 9916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "tag",
									"source": 5,
									"value": "193"
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9939,
									"end": 9940,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9936,
									"end": 9937,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9932,
									"end": 9941,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9960,
									"end": 9963,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 9957,
									"end": 9958,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9954,
									"end": 9964,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "194"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "195"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 9967,
									"end": 9985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "tag",
									"source": 5,
									"value": "195"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "tag",
									"source": 5,
									"value": "194"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9803,
									"end": 9994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "tag",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "197"
								},
								{
									"begin": 10105,
									"end": 10110,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 10087,
									"end": 10111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "tag",
									"source": 5,
									"value": "197"
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10082,
									"end": 10085,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 10075,
									"end": 10112,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10000,
									"end": 10118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10273,
									"end": 10277,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 10311,
									"end": 10313,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 10300,
									"end": 10309,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 10296,
									"end": 10314,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "199"
								},
								{
									"begin": 10392,
									"end": 10393,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 10381,
									"end": 10390,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 10377,
									"end": 10394,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 10368,
									"end": 10374,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 10324,
									"end": 10395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "tag",
									"source": 5,
									"value": "199"
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "200"
								},
								{
									"begin": 10473,
									"end": 10475,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 10462,
									"end": 10471,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 10458,
									"end": 10476,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 10449,
									"end": 10455,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 10405,
									"end": 10477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "tag",
									"source": 5,
									"value": "200"
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "201"
								},
								{
									"begin": 10555,
									"end": 10557,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 10544,
									"end": 10553,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 10540,
									"end": 10558,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 10531,
									"end": 10537,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 10487,
									"end": 10559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "tag",
									"source": 5,
									"value": "201"
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10124,
									"end": 10566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10665,
									"end": 10669,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 10703,
									"end": 10705,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 10692,
									"end": 10701,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "203"
								},
								{
									"begin": 10784,
									"end": 10785,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 10773,
									"end": 10782,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 10769,
									"end": 10786,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 10760,
									"end": 10766,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 10716,
									"end": 10787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "tag",
									"source": 5,
									"value": "203"
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10572,
									"end": 10794,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 200,
									"end": 1037,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 200,
									"end": 1037,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 200,
									"end": 1037,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 200,
									"end": 1037,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 200,
									"end": 1037,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 200,
									"end": 1037,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 1037,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 200,
									"end": 1037,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 1037,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b3689c412751bf982667f77617a8f527ac9e14273e859d10a84f897bf3bf3c0364736f6c63430008160033",
									".code": [
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "40C10F19"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "40C10F19"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 200,
											"end": 1037,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2102,
											"end": 2193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2102,
											"end": 2193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4393,
											"end": 4581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4393,
											"end": 4581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4393,
											"end": 4581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3204,
											"end": 3303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3204,
											"end": 3303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5159,
											"end": 5406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5159,
											"end": 5406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5159,
											"end": 5406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3055,
											"end": 3139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3055,
											"end": 3139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 939,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3366,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3366,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3366,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 542,
											"end": 621,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 542,
											"end": 621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 542,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 542,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 542,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 542,
											"end": 621,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 542,
											"end": 621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 542,
											"end": 621,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 542,
											"end": 621,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 542,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 542,
											"end": 621,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 542,
											"end": 621,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 542,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 542,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 542,
											"end": 621,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 542,
											"end": 621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 542,
											"end": 621,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 542,
											"end": 621,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 542,
											"end": 621,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 542,
											"end": 621,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 542,
											"end": 621,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 542,
											"end": 621,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 542,
											"end": 621,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2312,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2312,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3689,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3689,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3689,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3932,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3932,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3932,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2160,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2180,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2173,
											"end": 2185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2173,
											"end": 2185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4466,
											"end": 4470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4483,
											"end": 4496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4499,
											"end": 4509,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4483,
											"end": 4509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4483,
											"end": 4509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4529,
											"end": 4534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 4543,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4545,
											"end": 4550,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4520,
											"end": 4551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4551,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4520,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4569,
											"end": 4573,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4562,
											"end": 4573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4562,
											"end": 4573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4562,
											"end": 4573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3295,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3283,
											"end": 3295,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5263,
											"end": 5278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5281,
											"end": 5291,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5318,
											"end": 5322,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5338,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5302,
											"end": 5339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 5339,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5302,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5360,
											"end": 5364,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5366,
											"end": 5368,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5375,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5350,
											"end": 5376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5376,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5350,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5394,
											"end": 5398,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5387,
											"end": 5398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5387,
											"end": 5398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5387,
											"end": 5398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3129,
											"end": 3131,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3122,
											"end": 3131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 898,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 898,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 898,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 898,
											"end": 911,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 898,
											"end": 911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1015,
											"end": 1017,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1025,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1014,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1009,
											"end": 1026,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1026,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1009,
											"end": 1026,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1034,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3431,
											"end": 3438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3458,
											"end": 3467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3468,
											"end": 3475,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3451,
											"end": 3476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3451,
											"end": 3476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 542,
											"end": 621,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 542,
											"end": 621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 580,
											"end": 587,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 613,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 607,
											"end": 613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 613,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 613,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 607,
											"end": 613,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 607,
											"end": 613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 613,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 607,
											"end": 613,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 607,
											"end": 613,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 600,
											"end": 613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 600,
											"end": 613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 542,
											"end": 621,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 542,
											"end": 621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2359,
											"end": 2372,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2392,
											"end": 2399,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2385,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2385,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3775,
											"end": 3788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3791,
											"end": 3801,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3775,
											"end": 3801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3775,
											"end": 3801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3812,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3822,
											"end": 3827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3831,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3833,
											"end": 3838,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3812,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3812,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3812,
											"end": 3839,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3812,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3857,
											"end": 3861,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3850,
											"end": 3861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4056,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4065,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4066,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4066,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4066,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4066,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9216,
											"end": 9346,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9216,
											"end": 9346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9310,
											"end": 9315,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9317,
											"end": 9324,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9326,
											"end": 9331,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9333,
											"end": 9337,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9301,
											"end": 9309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 9301,
											"end": 9338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9338,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9301,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9216,
											"end": 9346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9216,
											"end": 9346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9216,
											"end": 9346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9216,
											"end": 9346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10932,
											"end": 11419,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 10932,
											"end": 11419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11032,
											"end": 11056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11059,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11069,
											"end": 11074,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11076,
											"end": 11083,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11059,
											"end": 11084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11084,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11059,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11032,
											"end": 11084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11032,
											"end": 11084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11099,
											"end": 11115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11099,
											"end": 11136,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 11095,
											"end": 11412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11176,
											"end": 11181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11157,
											"end": 11173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11157,
											"end": 11181,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11153,
											"end": 11285,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11153,
											"end": 11285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 11153,
											"end": 11285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11236,
											"end": 11243,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11245,
											"end": 11261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11263,
											"end": 11268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 11209,
											"end": 11269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11209,
											"end": 11269,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11153,
											"end": 11285,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 11153,
											"end": 11285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11328,
											"end": 11385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 11337,
											"end": 11342,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11351,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11372,
											"end": 11377,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11353,
											"end": 11369,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11353,
											"end": 11377,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11379,
											"end": 11384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11328,
											"end": 11336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 11328,
											"end": 11385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11328,
											"end": 11385,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 11328,
											"end": 11385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11412,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 11095,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11021,
											"end": 11419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10932,
											"end": 11419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10932,
											"end": 11419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10932,
											"end": 11419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10932,
											"end": 11419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 6099,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5791,
											"end": 6099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5891,
											"end": 5892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5875,
											"end": 5879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5871,
											"end": 5959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5917,
											"end": 5947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5917,
											"end": 5947,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5959,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5871,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 5988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5973,
											"end": 5989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5973,
											"end": 5989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5973,
											"end": 5975,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5973,
											"end": 5989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5973,
											"end": 5989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5973,
											"end": 5989,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5969,
											"end": 6057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 6013,
											"end": 6045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6057,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5969,
											"end": 6057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6067,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6075,
											"end": 6079,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6081,
											"end": 6083,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6085,
											"end": 6090,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6067,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6067,
											"end": 6091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6067,
											"end": 6091,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6067,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 6099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 6099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 6099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 6099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 699,
											"end": 854,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 699,
											"end": 854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 770,
											"end": 780,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 759,
											"end": 780,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 780,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 759,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 759,
											"end": 766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 766,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 759,
											"end": 766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 780,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 780,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 780,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 755,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 755,
											"end": 847,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 834,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 804,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 835,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 804,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "32B2BAA300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 804,
											"end": 835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 804,
											"end": 835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 804,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 804,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 804,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 804,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 804,
											"end": 835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 804,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 804,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 804,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 804,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 835,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 804,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 804,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 804,
											"end": 835,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 804,
											"end": 835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 804,
											"end": 835,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 755,
											"end": 847,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 755,
											"end": 847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 699,
											"end": 854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7911,
											"end": 8124,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 7911,
											"end": 8124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8001,
											"end": 8002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7982,
											"end": 8003,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7982,
											"end": 8003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7982,
											"end": 7989,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7982,
											"end": 8003,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7982,
											"end": 8003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7982,
											"end": 8003,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7978,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 7978,
											"end": 8071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8056,
											"end": 8057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8027,
											"end": 8059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8027,
											"end": 8059,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7978,
											"end": 8071,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 7978,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8081,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 8097,
											"end": 8098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8101,
											"end": 8108,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8110,
											"end": 8115,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8081,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 8081,
											"end": 8116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8081,
											"end": 8116,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 8081,
											"end": 8116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7911,
											"end": 8124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7911,
											"end": 8124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7911,
											"end": 8124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10197,
											"end": 10640,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10197,
											"end": 10640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10327,
											"end": 10328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10310,
											"end": 10329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10310,
											"end": 10329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10310,
											"end": 10315,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10310,
											"end": 10329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10310,
											"end": 10329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10310,
											"end": 10329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10306,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10306,
											"end": 10397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10353,
											"end": 10385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10306,
											"end": 10397,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10306,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10430,
											"end": 10431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10411,
											"end": 10432,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10411,
											"end": 10432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10411,
											"end": 10418,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10411,
											"end": 10432,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10411,
											"end": 10432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10411,
											"end": 10432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10407,
											"end": 10499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 10407,
											"end": 10499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10484,
											"end": 10485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10456,
											"end": 10487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10456,
											"end": 10487,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10407,
											"end": 10499,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 10407,
											"end": 10499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10539,
											"end": 10544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10520,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10509,
											"end": 10527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10521,
											"end": 10526,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10527,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10509,
											"end": 10527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10527,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10509,
											"end": 10527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10527,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10509,
											"end": 10527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10527,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10509,
											"end": 10527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10527,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10528,
											"end": 10535,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10536,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10509,
											"end": 10536,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10536,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10509,
											"end": 10536,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10536,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10509,
											"end": 10536,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10536,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10509,
											"end": 10536,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10536,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10544,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10509,
											"end": 10544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10559,
											"end": 10568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10633,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10555,
											"end": 10633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10606,
											"end": 10613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10599,
											"end": 10604,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10615,
											"end": 10620,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10590,
											"end": 10621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10621,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10633,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10555,
											"end": 10633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10197,
											"end": 10640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10197,
											"end": 10640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10197,
											"end": 10640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10197,
											"end": 10640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10197,
											"end": 10640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6423,
											"end": 7558,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6423,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6529,
											"end": 6530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6513,
											"end": 6531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6513,
											"end": 6531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6517,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6513,
											"end": 6531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6509,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6509,
											"end": 7061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6667,
											"end": 6672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6651,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6651,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6651,
											"end": 6672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6651,
											"end": 6672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6651,
											"end": 6672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6651,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6651,
											"end": 6672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6651,
											"end": 6672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6651,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6651,
											"end": 6672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6651,
											"end": 6672,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6651,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6651,
											"end": 6672,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6651,
											"end": 6672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6651,
											"end": 6672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6651,
											"end": 6672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6651,
											"end": 6672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6651,
											"end": 6672,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6651,
											"end": 6672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6509,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6509,
											"end": 7061,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6509,
											"end": 7061,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6509,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6737,
											"end": 6741,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6775,
											"end": 6780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6780,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6757,
											"end": 6874,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6757,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6757,
											"end": 6874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6833,
											"end": 6837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6839,
											"end": 6850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6852,
											"end": 6857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6808,
											"end": 6858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6858,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6757,
											"end": 6874,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6757,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7029,
											"end": 7034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6997,
											"end": 7012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7007,
											"end": 7011,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7012,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6997,
											"end": 7012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7012,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6997,
											"end": 7012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6997,
											"end": 7012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6997,
											"end": 7012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6997,
											"end": 7012,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7034,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 7061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6509,
											"end": 7061,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6509,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7091,
											"end": 7092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7077,
											"end": 7093,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7077,
											"end": 7093,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7079,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7093,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7077,
											"end": 7093,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7093,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7073,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 7073,
											"end": 7508,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7259,
											"end": 7264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7255,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7243,
											"end": 7255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7073,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7073,
											"end": 7508,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7073,
											"end": 7508,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 7073,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7471,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7459,
											"end": 7481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7481,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7481,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7481,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7459,
											"end": 7481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7073,
											"end": 7508,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7073,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7540,
											"end": 7542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7538,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7544,
											"end": 7549,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7525,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6423,
											"end": 7558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6423,
											"end": 7558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6423,
											"end": 7558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6423,
											"end": 7558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 5293,
											"end": 5298,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 5275,
											"end": 5299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5263,
											"end": 5300,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5405,
											"end": 5409,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5445,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5428,
											"end": 5446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 5524,
											"end": 5525,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5509,
											"end": 5526,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 5456,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5312,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5667,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 5662,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5644,
											"end": 5651,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5640,
											"end": 5663,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5636,
											"end": 5668,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5671,
											"end": 5750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5791,
											"end": 5792,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 5861,
											"end": 5868,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5841,
											"end": 5850,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5837,
											"end": 5859,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5816,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5762,
											"end": 5879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 5920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 5989,
											"end": 5996,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5980,
											"end": 5986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5969,
											"end": 5978,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5965,
											"end": 5987,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5944,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 6007,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5540,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6068,
											"end": 6145,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6058,
											"end": 6146,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6165,
											"end": 6169,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6155,
											"end": 6170,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6193,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6250,
											"end": 6256,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6288,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6281,
											"end": 6285,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6277,
											"end": 6289,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6328,
											"end": 6332,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 6403,
											"end": 6409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6399,
											"end": 6416,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6473,
											"end": 6475,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6465,
											"end": 6471,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6462,
											"end": 6476,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6442,
											"end": 6460,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6492,
											"end": 6510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6257,
											"end": 6526,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6685,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6719,
											"end": 6721,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6708,
											"end": 6717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6696,
											"end": 6722,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6696,
											"end": 6722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 6800,
											"end": 6801,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6789,
											"end": 6798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6785,
											"end": 6802,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6776,
											"end": 6782,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 6732,
											"end": 6803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6881,
											"end": 6883,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6870,
											"end": 6879,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6857,
											"end": 6863,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 6813,
											"end": 6885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 6963,
											"end": 6965,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6952,
											"end": 6961,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6948,
											"end": 6966,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6939,
											"end": 6945,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 6895,
											"end": 6967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6532,
											"end": 6974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7025,
											"end": 7026,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7106,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7129,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 7122,
											"end": 7123,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7115,
											"end": 7130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7149,
											"end": 7153,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7146,
											"end": 7147,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7154,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7206,
											"end": 7209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 7243,
											"end": 7244,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 7225,
											"end": 7245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 7277,
											"end": 7278,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 7259,
											"end": 7279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7302,
											"end": 7303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7299,
											"end": 7300,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7295,
											"end": 7304,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7288,
											"end": 7304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7288,
											"end": 7304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7326,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7320,
											"end": 7321,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7317,
											"end": 7327,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 7330,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7166,
											"end": 7357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"MYFIRSTTOKEN/ERC20.sol",
								"MYFIRSTTOKEN/IERC20.sol",
								"MYFIRSTTOKEN/IERC20Metadata.sol",
								"MYFIRSTTOKEN/RealToken.sol",
								"MYFIRSTTOKEN/draft-IERC6093.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"UnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MYFIRSTTOKEN/RealToken.sol\":\"MyFirstToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MYFIRSTTOKEN/ERC20.sol\":{\"keccak256\":\"0x0cdadb0124a7a617ecea8c6178efbea4c637df2e5da5f1ca4295b0853c212de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a820ce8f77b959eeb6507750554decb6351cf3034d9e7a6190d5fc03da1f1fb\",\"dweb:/ipfs/QmPj1FRd1UT1koLw1UZF8apKmJ9Uxrzi85QfYRLoQSFq3i\"]},\"MYFIRSTTOKEN/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]},\"MYFIRSTTOKEN/IERC20Metadata.sol\":{\"keccak256\":\"0x3f4a8c0f3d2fc136c81adf1e5b8c9966793f11c603e42bc5f5bf2a3c91bc28b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df37d7ba5bd9a5b8356ad5b58dbf0732daee8a900ba423cc1657c69b45fbb8a3\",\"dweb:/ipfs/QmceCkTtPnP17T9ndqp6243nyonzAQNAdsVYLtxjDr1GrH\"]},\"MYFIRSTTOKEN/RealToken.sol\":{\"keccak256\":\"0xcfd9eca85fb10a55a935fbaa20bc8cfd63c322c2d6db32ab0816bba89e840ed7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43fd2af1bafd107c3ca64c5df891c2d624d3cbde6843a6b695d89b3d4d4bc928\",\"dweb:/ipfs/QmYiGXeNXoi66DTA7okyWHbAASnL7qsXTq1kYoqmZ9Qapw\"]},\"MYFIRSTTOKEN/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 18,
								"contract": "MYFIRSTTOKEN/RealToken.sol:MyFirstToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 24,
								"contract": "MYFIRSTTOKEN/RealToken.sol:MyFirstToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 26,
								"contract": "MYFIRSTTOKEN/RealToken.sol:MyFirstToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 28,
								"contract": "MYFIRSTTOKEN/RealToken.sol:MyFirstToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 30,
								"contract": "MYFIRSTTOKEN/RealToken.sol:MyFirstToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 621,
								"contract": "MYFIRSTTOKEN/RealToken.sol:MyFirstToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MYFIRSTTOKEN/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MYFIRSTTOKEN/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MYFIRSTTOKEN/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MYFIRSTTOKEN/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MYFIRSTTOKEN/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MYFIRSTTOKEN/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MYFIRSTTOKEN/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"MYFIRSTTOKEN/ERC20.sol": {
				"ast": {
					"absolutePath": "MYFIRSTTOKEN/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							510
						],
						"IERC20": [
							588
						],
						"IERC20Errors": [
							740
						],
						"IERC20Metadata": [
							614
						]
					},
					"id": 511,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "MYFIRSTTOKEN/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 511,
							"sourceUnit": 589,
							"src": "136:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 588,
										"src": "144:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "MYFIRSTTOKEN/IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 511,
							"sourceUnit": 615,
							"src": "174:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 614,
										"src": "182:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "MYFIRSTTOKEN/draft-IERC6093.sol",
							"file": "./draft-IERC6093.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 511,
							"sourceUnit": 836,
							"src": "284:50:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 740,
										"src": "292:12:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "IERC20",
										"nameLocations": [
											"1441:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 588,
										"src": "1441:6:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1441:6:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1449:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 614,
										"src": "1449:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1449:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IERC20Errors",
										"nameLocations": [
											"1465:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 740,
										"src": "1465:12:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "1465:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "338:1074:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 510,
							"linearizedBaseContracts": [
								510,
								740,
								614,
								588
							],
							"name": "ERC20",
							"nameLocation": "1432:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1529:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 510,
									"src": "1485:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 17,
										"keyName": "account",
										"keyNameLocation": "1501:7:0",
										"keyType": {
											"id": 15,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1493:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1485:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 16,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1512:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1619:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 510,
									"src": "1547:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 23,
										"keyName": "account",
										"keyNameLocation": "1563:7:0",
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1555:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1547:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 22,
											"keyName": "spender",
											"keyNameLocation": "1590:7:0",
											"keyType": {
												"id": 20,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1582:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1574:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 21,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1601:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1655:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 510,
									"src": "1639:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1639:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1691:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 510,
									"src": "1676:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 27,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1676:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 30,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1718:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 510,
									"src": "1703:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 29,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1703:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "1972:60:0",
										"statements": [
											{
												"expression": {
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 38,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1983:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 39,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "1991:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1983:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "1983:13:0"
											},
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 42,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2007:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 43,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "2017:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2007:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "2007:17:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1734:176:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 47,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1942:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1928:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 32,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1928:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1963:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1949:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 34,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1949:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1927:44:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:0:0"
									},
									"scope": 510,
									"src": "1916:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										601
									],
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "2162:31:0",
										"statements": [
											{
												"expression": {
													"id": 53,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "2180:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 52,
												"id": 54,
												"nodeType": "Return",
												"src": "2173:12:0"
											}
										]
									},
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2040:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2111:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2115:2:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "2147:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 50,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2147:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2146:15:0"
									},
									"scope": 510,
									"src": "2102:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										607
									],
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "2374:33:0",
										"statements": [
											{
												"expression": {
													"id": 62,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "2392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 61,
												"id": 63,
												"nodeType": "Return",
												"src": "2385:14:0"
											}
										]
									},
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "2201:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2321:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2327:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "2359:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 59,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2359:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2358:15:0"
									},
									"scope": 510,
									"src": "2312:95:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										613
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3111:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3129:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "3122:9:0"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "2415:634:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3064:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3072:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3104:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 68,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3103:7:0"
									},
									"scope": 510,
									"src": "3055:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										537
									],
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "3265:38:0",
										"statements": [
											{
												"expression": {
													"id": 80,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "3283:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 79,
												"id": 81,
												"nodeType": "Return",
												"src": "3276:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3147:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3213:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3224:2:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "3256:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3255:9:0"
									},
									"scope": 510,
									"src": "3204:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										545
									],
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "3440:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 91,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "3458:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 93,
													"indexExpression": {
														"id": 92,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "3468:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3458:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 90,
												"id": 94,
												"nodeType": "Return",
												"src": "3451:25:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "3311:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3375:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3393:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "3385:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3385:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3384:17:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "3431:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3430:9:0"
									},
									"scope": 510,
									"src": "3366:118:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										555
									],
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "3764:105:0",
										"statements": [
											{
												"assignments": [
													107
												],
												"declarations": [
													{
														"constant": false,
														"id": 107,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3783:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 119,
														"src": "3775:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 106,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3775:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 110,
												"initialValue": {
													"expression": {
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3791:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3795:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3791:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3775:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 112,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "3822:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 113,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "3829:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 114,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "3833:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 111,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "3812:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3812:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "3812:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3857:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 105,
												"id": 118,
												"nodeType": "Return",
												"src": "3850:11:0"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "3492:191:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3698:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3715:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3707:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3707:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3727:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3719:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3706:27:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 103,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:6:0"
									},
									"scope": 510,
									"src": "3689:180:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										565
									],
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "4021:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 130,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4039:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 132,
														"indexExpression": {
															"id": 131,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "4051:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 134,
													"indexExpression": {
														"id": 133,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "4058:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 129,
												"id": 135,
												"nodeType": "Return",
												"src": "4032:34:0"
											}
										]
									},
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "3877:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3941:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3959:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3951:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3974:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3966:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3966:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3950:32:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "4012:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4011:9:0"
									},
									"scope": 510,
									"src": "3932:142:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										575
									],
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "4472:109:0",
										"statements": [
											{
												"assignments": [
													148
												],
												"declarations": [
													{
														"constant": false,
														"id": 148,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4491:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 160,
														"src": "4483:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 147,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4483:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 151,
												"initialValue": {
													"expression": {
														"id": 149,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4499:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4503:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4499:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4483:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 153,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "4529:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 154,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "4536:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 155,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "4545:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 152,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															401,
															461
														],
														"referencedDeclaration": 401,
														"src": "4520:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4520:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "4520:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4569:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 146,
												"id": 159,
												"nodeType": "Return",
												"src": "4562:11:0"
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "4082:305:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4402:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4418:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "4410:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4435:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "4427:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4409:32:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "4466:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4466:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4465:6:0"
									},
									"scope": 510,
									"src": "4393:188:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										587
									],
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "5252:154:0",
										"statements": [
											{
												"assignments": [
													174
												],
												"declarations": [
													{
														"constant": false,
														"id": 174,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5271:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "5263:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 173,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5263:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"expression": {
														"id": 175,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5281:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5285:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5281:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5263:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 179,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "5318:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 180,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5324:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 181,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "5333:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 178,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "5302:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5302:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "5302:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "5360:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "5366:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "5370:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "5350:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "5350:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 172,
												"id": 191,
												"nodeType": "Return",
												"src": "5387:11:0"
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "4589:564:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5168:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5189:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "5181:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5203:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "5195:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5195:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5215:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "5207:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5207:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5180:41:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "5246:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5246:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5245:6:0"
									},
									"scope": 510,
									"src": "5159:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "5860:239:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 203,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "5875:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5891:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5883:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 204,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5883:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5883:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5875:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 217,
												"nodeType": "IfStatement",
												"src": "5871:88:0",
												"trueBody": {
													"id": 216,
													"nodeType": "Block",
													"src": "5895:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5944:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5936:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 210,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5936:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5936:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 209,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "5917:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5917:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 215,
															"nodeType": "RevertStatement",
															"src": "5910:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 218,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "5973:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5987:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5979:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 219,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5979:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5979:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5973:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 232,
												"nodeType": "IfStatement",
												"src": "5969:88:0",
												"trueBody": {
													"id": 231,
													"nodeType": "Block",
													"src": "5991:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6042:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6034:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 225,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6034:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6034:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 224,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "6013:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6013:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 230,
															"nodeType": "RevertStatement",
															"src": "6006:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 234,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "6075:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 235,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "6081:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 236,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "6085:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 233,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "6067:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6067:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "6067:24:0"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "5414:371:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5800:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5818:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "5810:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5832:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "5824:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5824:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5844:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "5836:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5809:41:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5860:0:0"
									},
									"scope": 510,
									"src": "5791:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "6498:1060:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 250,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "6513:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6529:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6521:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 251,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6521:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6521:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6513:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 287,
													"nodeType": "Block",
													"src": "6690:371:0",
													"statements": [
														{
															"assignments": [
																262
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 262,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6713:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 287,
																	"src": "6705:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 261,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6705:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 266,
															"initialValue": {
																"baseExpression": {
																	"id": 263,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "6727:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 265,
																"indexExpression": {
																	"id": 264,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 243,
																	"src": "6737:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6727:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6705:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 267,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "6761:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 268,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "6775:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6761:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 277,
															"nodeType": "IfStatement",
															"src": "6757:117:0",
															"trueBody": {
																"id": 276,
																"nodeType": "Block",
																"src": "6782:92:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 271,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 243,
																					"src": "6833:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 272,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 262,
																					"src": "6839:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 273,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 247,
																					"src": "6852:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 270,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "6808:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6808:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 275,
																		"nodeType": "RevertStatement",
																		"src": "6801:57:0"
																	}
																]
															}
														},
														{
															"id": 286,
															"nodeType": "UncheckedBlock",
															"src": "6888:162:0",
															"statements": [
																{
																	"expression": {
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 278,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 18,
																				"src": "6997:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 280,
																			"indexExpression": {
																				"id": 279,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 243,
																				"src": "7007:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6997:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 281,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 262,
																				"src": "7015:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 282,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 247,
																				"src": "7029:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7015:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6997:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 285,
																	"nodeType": "ExpressionStatement",
																	"src": "6997:37:0"
																}
															]
														}
													]
												},
												"id": 288,
												"nodeType": "IfStatement",
												"src": "6509:552:0",
												"trueBody": {
													"id": 260,
													"nodeType": "Block",
													"src": "6533:151:0",
													"statements": [
														{
															"expression": {
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 256,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "6651:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 257,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "6667:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6651:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 259,
															"nodeType": "ExpressionStatement",
															"src": "6651:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 289,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "7077:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7091:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7083:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 290,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7083:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7083:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7077:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "7297:211:0",
													"statements": [
														{
															"id": 307,
															"nodeType": "UncheckedBlock",
															"src": "7312:185:0",
															"statements": [
																{
																	"expression": {
																		"id": 305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 301,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 18,
																				"src": "7459:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 303,
																			"indexExpression": {
																				"id": 302,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 245,
																				"src": "7469:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7459:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 304,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "7476:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7459:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 306,
																	"nodeType": "ExpressionStatement",
																	"src": "7459:22:0"
																}
															]
														}
													]
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "7073:435:0",
												"trueBody": {
													"id": 300,
													"nodeType": "Block",
													"src": "7095:196:0",
													"statements": [
														{
															"id": 299,
															"nodeType": "UncheckedBlock",
															"src": "7110:170:0",
															"statements": [
																{
																	"expression": {
																		"id": 297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 295,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "7243:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 296,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "7259:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7243:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 298,
																	"nodeType": "ExpressionStatement",
																	"src": "7243:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 311,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7534:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 312,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "7540:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 313,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7544:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 310,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "7525:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7525:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "EmitStatement",
												"src": "7520:30:0"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "6107:310:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6432:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "6440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6462:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "6454:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6474:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "6466:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6466:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6439:41:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6498:0:0"
									},
									"scope": 510,
									"src": "6423:1135:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "7967:157:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 325,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "7982:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8001:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7993:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 326,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7993:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7993:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7982:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 339,
												"nodeType": "IfStatement",
												"src": "7978:93:0",
												"trueBody": {
													"id": 338,
													"nodeType": "Block",
													"src": "8005:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8056:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8048:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 332,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8048:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8048:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 331,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "8027:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8027:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 337,
															"nodeType": "RevertStatement",
															"src": "8020:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8097:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8089:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 341,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8089:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8089:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 345,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "8101:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "8110:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 340,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "8081:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8081:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "8081:35:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "7566:339:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7920:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7934:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "7926:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7951:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "7943:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7925:32:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7967:0:0"
									},
									"scope": 510,
									"src": "7911:213:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "8508:155:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 358,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "8523:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8542:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8534:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 359,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8534:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8534:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8523:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 372,
												"nodeType": "IfStatement",
												"src": "8519:91:0",
												"trueBody": {
													"id": 371,
													"nodeType": "Block",
													"src": "8546:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8595:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8587:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 365,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8587:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8587:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 364,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "8568:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8568:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 370,
															"nodeType": "RevertStatement",
															"src": "8561:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "8628:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8645:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8637:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 375,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8637:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8637:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 379,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "8649:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 373,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "8620:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8620:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "8620:35:0"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "8132:314:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8461:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8475:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "8467:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8492:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "8484:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8466:32:0"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8508:0:0"
									},
									"scope": 510,
									"src": "8452:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "9290:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 394,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "9310:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 395,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "9317:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 396,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "9326:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9333:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 393,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															401,
															461
														],
														"referencedDeclaration": 461,
														"src": "9301:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9301:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "9301:37:0"
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "8671:539:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9225:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "9234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9234:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9257:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "9249:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9274:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "9266:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9266:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9233:47:0"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9290:0:0"
									},
									"scope": 510,
									"src": "9216:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "10295:345:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 413,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "10310:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10327:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10319:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 414,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10319:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10319:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10310:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 427,
												"nodeType": "IfStatement",
												"src": "10306:91:0",
												"trueBody": {
													"id": 426,
													"nodeType": "Block",
													"src": "10331:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 422,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10382:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10374:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 420,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10374:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10374:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 419,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "10353:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10353:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 425,
															"nodeType": "RevertStatement",
															"src": "10346:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 428,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "10411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10422:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 429,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10422:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10422:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10411:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "IfStatement",
												"src": "10407:92:0",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "10434:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10484:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10476:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10476:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10476:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 434,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "10456:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10456:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 440,
															"nodeType": "RevertStatement",
															"src": "10449:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 443,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "10509:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 446,
															"indexExpression": {
																"id": 444,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "10521:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10509:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 447,
														"indexExpression": {
															"id": 445,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "10528:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10509:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 448,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "10539:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10509:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "10509:35:0"
											},
											{
												"condition": {
													"id": 451,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 410,
													"src": "10559:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 459,
												"nodeType": "IfStatement",
												"src": "10555:78:0",
												"trueBody": {
													"id": 458,
													"nodeType": "Block",
													"src": "10570:63:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 453,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "10599:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 454,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 406,
																		"src": "10606:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 455,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 408,
																		"src": "10615:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 452,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "10590:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10590:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 457,
															"nodeType": "EmitStatement",
															"src": "10585:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "9354:837:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10206:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10223:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "10215:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10215:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10238:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "10230:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10230:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10255:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "10247:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10247:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10267:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "10262:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10262:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10214:63:0"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10295:0:0"
									},
									"scope": 510,
									"src": "10197:443:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "11021:398:0",
										"statements": [
											{
												"assignments": [
													472
												],
												"declarations": [
													{
														"constant": false,
														"id": 472,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11040:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 508,
														"src": "11032:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 471,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11032:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"arguments": [
														{
															"id": 474,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "11069:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "11076:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 473,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "11059:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11059:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11032:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 478,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "11099:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11124:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 480,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11124:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 479,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11119:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11119:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11133:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11119:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11099:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 507,
												"nodeType": "IfStatement",
												"src": "11095:317:0",
												"trueBody": {
													"id": 506,
													"nodeType": "Block",
													"src": "11138:274:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 485,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "11157:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 486,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "11176:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11157:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 495,
															"nodeType": "IfStatement",
															"src": "11153:132:0",
															"trueBody": {
																"id": 494,
																"nodeType": "Block",
																"src": "11183:102:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 489,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 466,
																					"src": "11236:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 490,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 472,
																					"src": "11245:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 491,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 468,
																					"src": "11263:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 488,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 729,
																				"src": "11209:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11209:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 493,
																		"nodeType": "RevertStatement",
																		"src": "11202:67:0"
																	}
																]
															}
														},
														{
															"id": 505,
															"nodeType": "UncheckedBlock",
															"src": "11299:102:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 497,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 464,
																				"src": "11337:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 498,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 466,
																				"src": "11344:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 499,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 472,
																					"src": "11353:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 500,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 468,
																					"src": "11372:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11353:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 502,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11379:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 496,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				401,
																				461
																			],
																			"referencedDeclaration": 461,
																			"src": "11328:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11328:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 504,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "10648:278:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10941:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10965:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "10957:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10980:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "10972:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10997:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "10989:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10989:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10956:47:0"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11021:0:0"
									},
									"scope": 510,
									"src": "10932:487:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 511,
							"src": "1414:10008:0",
							"usedErrors": [
								710,
								715,
								720,
								729,
								734,
								739
							],
							"usedEvents": [
								522,
								531
							]
						}
					],
					"src": "108:11316:0"
				},
				"id": 0
			},
			"MYFIRSTTOKEN/IERC20.sol": {
				"ast": {
					"absolutePath": "MYFIRSTTOKEN/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							588
						]
					},
					"id": 589,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 512,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 513,
								"nodeType": "StructuredDocumentation",
								"src": "137:72:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 588,
							"linearizedBaseContracts": [
								588
							],
							"name": "IERC20",
							"nameLocation": "221:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "235:163:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 522,
									"name": "Transfer",
									"nameLocation": "410:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "435:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "419:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "457:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "441:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "441:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "469:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "461:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:57:1"
									},
									"src": "404:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "484:151:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 531,
									"name": "Approval",
									"nameLocation": "647:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "672:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "656:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "695:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "679:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "712:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "704:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:63:1"
									},
									"src": "641:78:1"
								},
								{
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "727:67:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:1"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "846:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:1"
									},
									"scope": 588,
									"src": "800:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "863:73:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "951:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "969:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "961:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:17:1"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "1001:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1000:9:1"
									},
									"scope": 588,
									"src": "942:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "1018:219:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 555,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1252:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1269:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1261:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1281:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1273:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1273:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:27:1"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1306:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1306:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1305:6:1"
									},
									"scope": 588,
									"src": "1243:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "1320:270:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1605:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1623:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "1615:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1615:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1638:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "1630:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1614:32:1"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "1670:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1669:9:1"
									},
									"scope": 588,
									"src": "1596:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "1687:681:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2383:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2399:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2391:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2391:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2416:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2408:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:32:1"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2441:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 572,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2441:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2440:6:1"
									},
									"scope": 588,
									"src": "2374:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "2455:305:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 587,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2775:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2796:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "2788:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2788:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2810:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "2802:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2822:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "2814:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2814:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2787:41:1"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "2847:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 584,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2847:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:6:1"
									},
									"scope": 588,
									"src": "2766:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 589,
							"src": "211:2645:1",
							"usedErrors": [],
							"usedEvents": [
								522,
								531
							]
						}
					],
					"src": "109:2749:1"
				},
				"id": 1
			},
			"MYFIRSTTOKEN/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "MYFIRSTTOKEN/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							588
						],
						"IERC20Metadata": [
							614
						]
					},
					"id": 615,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 590,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:2"
						},
						{
							"absolutePath": "MYFIRSTTOKEN/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 592,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 615,
							"sourceUnit": 589,
							"src": "156:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 591,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 588,
										"src": "164:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 594,
										"name": "IERC20",
										"nameLocations": [
											"314:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 588,
										"src": "314:6:2"
									},
									"id": 595,
									"nodeType": "InheritanceSpecifier",
									"src": "314:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 593,
								"nodeType": "StructuredDocumentation",
								"src": "196:88:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 614,
							"linearizedBaseContracts": [
								614,
								588
							],
							"name": "IERC20Metadata",
							"nameLocation": "296:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "328:56:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "399:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "403:2:2"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "429:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "429:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:15:2"
									},
									"scope": 614,
									"src": "390:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "452:58:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 607,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "525:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "531:2:2"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "557:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 604,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "557:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:15:2"
									},
									"scope": 614,
									"src": "516:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "580:67:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "662:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "670:2:2"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "696:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 610,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "696:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:7:2"
									},
									"scope": 614,
									"src": "653:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 615,
							"src": "286:420:2",
							"usedErrors": [],
							"usedEvents": [
								522,
								531
							]
						}
					],
					"src": "128:578:2"
				},
				"id": 2
			},
			"MYFIRSTTOKEN/RealToken.sol": {
				"ast": {
					"absolutePath": "MYFIRSTTOKEN/RealToken.sol",
					"exportedSymbols": {
						"ERC20": [
							510
						],
						"IERC20": [
							588
						],
						"IERC20Errors": [
							740
						],
						"IERC20Metadata": [
							614
						],
						"MyFirstToken": [
							698
						]
					},
					"id": 699,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 616,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "83:24:3"
						},
						{
							"absolutePath": "MYFIRSTTOKEN/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 617,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 699,
							"sourceUnit": 511,
							"src": "111:21:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 618,
										"name": "ERC20",
										"nameLocations": [
											"225:5:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 510,
										"src": "225:5:3"
									},
									"id": 619,
									"nodeType": "InheritanceSpecifier",
									"src": "225:5:3"
								}
							],
							"canonicalName": "MyFirstToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 698,
							"linearizedBaseContracts": [
								698,
								510,
								740,
								614,
								588
							],
							"name": "MyFirstToken",
							"nameLocation": "209:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 621,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "254:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 698,
									"src": "238:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 620,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "238:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"errorSelector": "32b2baa3",
									"id": 625,
									"name": "UnauthorizedAccount",
									"nameLocation": "275:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "303:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "295:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "295:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:17:3"
									},
									"src": "269:43:3"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "442:92:3",
										"statements": [
											{
												"expression": {
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 634,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "453:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 635,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "462:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "453:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "453:21:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 639,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "491:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "495:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "491:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "313030",
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "503:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "509:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 643,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 74,
																		"src": "515:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "515:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "509:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "503:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 638,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "485:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "485:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "485:41:3"
											}
										]
									},
									"id": 650,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d794669727374546f6b656e",
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "369:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_597acd348068c9c71d6eab2e0cc1ce1ebce70fdb48318d3bc8e7aac5f0600687",
														"typeString": "literal_string \"MyFirstToken\""
													},
													"value": "MyFirstToken"
												},
												{
													"hexValue": "4d4654",
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "385:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2d40650643632e92876071b665100a8290bba8664e77c18809b7f5b839d00eae",
														"typeString": "literal_string \"MFT\""
													},
													"value": "MFT"
												}
											],
											"id": 632,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 629,
												"name": "ERC20",
												"nameLocations": [
													"363:5:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 510,
												"src": "363:5:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "363:28:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "340:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "332:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:22:3"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "442:0:3"
									},
									"scope": 698,
									"src": "320:214:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "589:32:3",
										"statements": [
											{
												"expression": {
													"id": 655,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 621,
													"src": "607:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 654,
												"id": 656,
												"nodeType": "Return",
												"src": "600:13:3"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "551:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "556:2:3"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "580:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:9:3"
									},
									"scope": 698,
									"src": "542:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "744:110:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 662,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "759:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "759:7:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 664,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "770:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "774:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "770:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "759:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 673,
												"nodeType": "IfStatement",
												"src": "755:92:3",
												"trueBody": {
													"id": 672,
													"nodeType": "Block",
													"src": "782:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 668,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "824:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "828:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "824:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 667,
																	"name": "UnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "804:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "804:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 671,
															"nodeType": "RevertStatement",
															"src": "797:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "629:64:3",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "708:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "719:2:3"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "744:0:3"
									},
									"scope": 698,
									"src": "699:155:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "887:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 677,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "898:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "898:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "898:13:3"
											},
											{
												"id": 680,
												"nodeType": "PlaceholderStatement",
												"src": "922:1:3"
											}
										]
									},
									"id": 682,
									"name": "onlyOwner",
									"nameLocation": "875:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "884:2:3"
									},
									"src": "866:65:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "998:36:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 692,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "1015:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "1019:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 691,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "1009:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1009:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "1009:17:3"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 689,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 688,
												"name": "onlyOwner",
												"nameLocations": [
													"988:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 682,
												"src": "988:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "988:9:3"
										}
									],
									"name": "mint",
									"nameLocation": "948:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "961:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "953:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "973:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "965:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "965:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:28:3"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:3"
									},
									"scope": 698,
									"src": "939:95:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 699,
							"src": "200:837:3",
							"usedErrors": [
								625,
								710,
								715,
								720,
								729,
								734,
								739
							],
							"usedEvents": [
								522,
								531
							]
						}
					],
					"src": "83:956:3"
				},
				"id": 3
			},
			"MYFIRSTTOKEN/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "MYFIRSTTOKEN/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							835
						],
						"IERC20Errors": [
							740
						],
						"IERC721Errors": [
							788
						]
					},
					"id": 836,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 700,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 701,
								"nodeType": "StructuredDocumentation",
								"src": "142:142:4",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 740,
							"linearizedBaseContracts": [
								740
							],
							"name": "IERC20Errors",
							"nameLocation": "296:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "316:314:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 710,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "642:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "675:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "667:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "691:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "683:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "708:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "700:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:49:4"
									},
									"src": "636:80:4"
								},
								{
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "724:155:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 715,
									"name": "ERC20InvalidSender",
									"nameLocation": "891:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "918:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "910:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:16:4"
									},
									"src": "885:41:4"
								},
								{
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "934:162:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 720,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1108:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1137:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "1129:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:18:4"
									},
									"src": "1102:45:4"
								},
								{
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "1155:350:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 729,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1517:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1552:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "1544:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1569:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "1561:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1588:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "1580:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:52:4"
									},
									"src": "1511:85:4"
								},
								{
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "1604:177:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 734,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1793:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1822:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "1814:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:18:4"
									},
									"src": "1787:45:4"
								},
								{
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "1840:198:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 739,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2050:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2078:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "2070:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:17:4"
									},
									"src": "2044:43:4"
								}
							],
							"scope": 836,
							"src": "286:1804:4",
							"usedErrors": [
								710,
								715,
								720,
								729,
								734,
								739
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 741,
								"nodeType": "StructuredDocumentation",
								"src": "2094:144:4",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 788,
							"linearizedBaseContracts": [
								788
							],
							"name": "IERC721Errors",
							"nameLocation": "2250:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "2271:223:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 746,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2506:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2533:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2525:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:15:4"
									},
									"src": "2500:40:4"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "2548:135:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 751,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2695:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2726:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "2718:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:17:4"
									},
									"src": "2689:46:4"
								},
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "2743:294:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 760,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3049:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3078:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "3070:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3094:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "3086:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3111:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "3103:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3103:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3069:48:4"
									},
									"src": "3043:75:4"
								},
								{
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "3126:155:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 765,
									"name": "ERC721InvalidSender",
									"nameLocation": "3293:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3321:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "3313:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3313:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:16:4"
									},
									"src": "3287:42:4"
								},
								{
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "3337:162:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 770,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3511:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3541:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "3533:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:18:4"
									},
									"src": "3505:46:4"
								},
								{
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "3559:251:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 777,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3822:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3857:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "3849:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3875:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "3867:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:35:4"
									},
									"src": "3816:68:4"
								},
								{
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "3892:177:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 782,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4081:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4111:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4103:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4103:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:18:4"
									},
									"src": "4075:46:4"
								},
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "4129:200:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 787,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4341:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4371:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "4363:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4363:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4362:18:4"
									},
									"src": "4335:46:4"
								}
							],
							"scope": 836,
							"src": "2240:2144:4",
							"usedErrors": [
								746,
								751,
								760,
								765,
								770,
								777,
								782,
								787
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 789,
								"nodeType": "StructuredDocumentation",
								"src": "4388:146:4",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 835,
							"linearizedBaseContracts": [
								835
							],
							"name": "IERC1155Errors",
							"nameLocation": "4546:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "4568:367:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 800,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4947:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4982:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "4974:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4998:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "4990:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5015:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "5007:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5007:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "5023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4973:66:4"
									},
									"src": "4941:99:4"
								},
								{
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "5048:155:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 805,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5215:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5244:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "5236:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5235:16:4"
									},
									"src": "5209:43:4"
								},
								{
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "5260:162:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 810,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5434:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5465:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "5457:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5457:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5456:18:4"
									},
									"src": "5428:47:4"
								},
								{
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "5483:260:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 817,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5755:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5792:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "5784:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5784:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5810:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "5802:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5802:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5783:33:4"
									},
									"src": "5749:68:4"
								},
								{
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "5825:177:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 822,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "6014:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6045:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "6037:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6037:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6036:18:4"
									},
									"src": "6008:47:4"
								},
								{
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "6063:200:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 827,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6275:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6306:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "6298:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6298:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6297:18:4"
									},
									"src": "6269:47:4"
								},
								{
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "6324:285:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 834,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6621:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6655:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "6647:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6647:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6674:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "6666:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6646:41:4"
									},
									"src": "6615:73:4"
								}
							],
							"scope": 836,
							"src": "4536:2155:4",
							"usedErrors": [
								800,
								805,
								810,
								817,
								822,
								827,
								834
							],
							"usedEvents": []
						}
					],
					"src": "114:6579:4"
				},
				"id": 4
			}
		}
	}
}